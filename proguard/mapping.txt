android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NavUtils -> android.support.v4.app.aa:
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> a
    void navigateUpFromSameTask(android.app.Activity) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> a
    android.content.Intent getParentActivityIntent(android.app.Activity) -> b
    java.lang.String getParentActivityName(android.app.Activity) -> c
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> a
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.ab:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> a
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.ac:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> a
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.ad:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> b
    void navigateUpTo(android.app.Activity,android.content.Intent) -> a
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtilsJB -> android.support.v4.app.ae:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> a
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.af:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.ag:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.ah:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.ai:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.aj:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.ak:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> a
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> a
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> a
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> a
    void setFlag(int,boolean) -> a
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.al:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.am:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.an:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.ao:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.ap:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.aq:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.ar:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.as:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.at:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.au:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.av:
android.support.v4.content.IntentCompat -> android.support.v4.a.a:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.a.b:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.a.c:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.a.d:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.a.e:
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.a.f:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.Loader -> android.support.v4.a.g:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.h:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.GravityCompat -> android.support.v4.view.a:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.g:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.h:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.i:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.p:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.q:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.r:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.s:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.t:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.u:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.v:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.w:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.z:
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.aa:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ab:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ac:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ad:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ae:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.af:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ag:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ah:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ai:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aj:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ak:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.al:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.am:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.an:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ao:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ap:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aq:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ar:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.as:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.at:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.au:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.av:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aw:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ax:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.google.android.gms.R -> com.google.android.gms.a:
com.google.android.gms.R$string -> com.google.android.gms.b:
    int auth_client_needs_enabling_title -> auth_client_needs_enabling_title
    int auth_client_needs_installation_title -> auth_client_needs_installation_title
    int auth_client_needs_update_title -> auth_client_needs_update_title
    int auth_client_play_services_err_notification_msg -> auth_client_play_services_err_notification_msg
    int auth_client_requested_by_msg -> auth_client_requested_by_msg
    int auth_client_using_bad_version_title -> auth_client_using_bad_version_title
    int common_google_play_services_enable_button -> common_google_play_services_enable_button
    int common_google_play_services_enable_text -> common_google_play_services_enable_text
    int common_google_play_services_enable_title -> common_google_play_services_enable_title
    int common_google_play_services_install_button -> common_google_play_services_install_button
    int common_google_play_services_install_text_phone -> common_google_play_services_install_text_phone
    int common_google_play_services_install_text_tablet -> common_google_play_services_install_text_tablet
    int common_google_play_services_install_title -> common_google_play_services_install_title
    int common_google_play_services_invalid_account_text -> common_google_play_services_invalid_account_text
    int common_google_play_services_invalid_account_title -> common_google_play_services_invalid_account_title
    int common_google_play_services_network_error_text -> common_google_play_services_network_error_text
    int common_google_play_services_network_error_title -> common_google_play_services_network_error_title
    int common_google_play_services_unknown_issue -> common_google_play_services_unknown_issue
    int common_google_play_services_unsupported_date_text -> common_google_play_services_unsupported_date_text
    int common_google_play_services_unsupported_text -> common_google_play_services_unsupported_text
    int common_google_play_services_unsupported_title -> common_google_play_services_unsupported_title
    int common_google_play_services_update_button -> common_google_play_services_update_button
    int common_google_play_services_update_text -> common_google_play_services_update_text
    int common_google_play_services_update_title -> common_google_play_services_update_title
    int common_signin_button_text -> common_signin_button_text
    int common_signin_button_text_long -> common_signin_button_text_long
com.google.android.gms.R$styleable -> com.google.android.gms.c:
    int[] AdsAttrs -> AdsAttrs
    int AdsAttrs_adSize -> AdsAttrs_adSize
    int AdsAttrs_adSizes -> AdsAttrs_adSizes
    int AdsAttrs_adUnitId -> AdsAttrs_adUnitId
    int[] MapAttrs -> MapAttrs
    int MapAttrs_cameraBearing -> MapAttrs_cameraBearing
    int MapAttrs_cameraTargetLat -> MapAttrs_cameraTargetLat
    int MapAttrs_cameraTargetLng -> MapAttrs_cameraTargetLng
    int MapAttrs_cameraTilt -> MapAttrs_cameraTilt
    int MapAttrs_cameraZoom -> MapAttrs_cameraZoom
    int MapAttrs_mapType -> MapAttrs_mapType
    int MapAttrs_uiCompass -> MapAttrs_uiCompass
    int MapAttrs_uiRotateGestures -> MapAttrs_uiRotateGestures
    int MapAttrs_uiScrollGestures -> MapAttrs_uiScrollGestures
    int MapAttrs_uiTiltGestures -> MapAttrs_uiTiltGestures
    int MapAttrs_uiZoomControls -> MapAttrs_uiZoomControls
    int MapAttrs_uiZoomGestures -> MapAttrs_uiZoomGestures
    int MapAttrs_useViewLifecycle -> MapAttrs_useViewLifecycle
    int MapAttrs_zOrderOnTop -> MapAttrs_zOrderOnTop
com.google.android.gms.common.GooglePlayServicesNotAvailableException -> com.google.android.gms.common.a:
    int errorCode -> a
com.google.android.gms.common.GooglePlayServicesUtil -> com.google.android.gms.common.b:
    byte[][] kb -> a
    byte[][] kc -> b
    byte[][] kd -> c
    byte[][] ke -> d
    byte[][] kf -> i
    byte[][] kg -> j
    byte[][] kh -> e
    boolean ki -> f
    boolean kj -> g
    boolean kk -> h
    int kl -> k
    java.lang.Object km -> l
    int isGooglePlayServicesAvailable(android.content.Context) -> a
    void n(android.content.Context) -> c
    byte[] a(android.content.pm.PackageInfo,byte[][]) -> a
    android.content.Intent a(android.content.Context,int,int) -> a
    boolean q(int) -> a
    int r(int) -> b
    boolean aU() -> a
    boolean o(android.content.Context) -> d
    java.lang.String b(android.content.Context,int,int) -> b
    java.lang.String b(android.content.Context,int) -> a
    boolean a(android.content.res.Resources) -> a
    boolean b(android.content.res.Resources) -> b
    android.content.Context getRemoteContext(android.content.Context) -> b
    byte[][] a(byte[][][]) -> a
    byte[] y(java.lang.String) -> a
com.google.android.gms.common.api.Status -> com.google.android.gms.common.api.Status:
    com.google.android.gms.common.api.Status kW -> a
    com.google.android.gms.common.api.Status kX -> b
    com.google.android.gms.common.api.Status kY -> c
    com.google.android.gms.common.api.StatusCreator CREATOR -> d
    int kZ -> e
    int ka -> f
    java.lang.String la -> g
    android.app.PendingIntent mPendingIntent -> h
    android.app.PendingIntent bf() -> a
    java.lang.String bg() -> b
    int getVersionCode() -> c
    int getStatusCode() -> d
    java.lang.String aT() -> e
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.api.StatusCreator -> com.google.android.gms.common.api.a:
    com.google.android.gms.common.api.Status createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.common.api.Status[] newArray(int) -> a
    void a(com.google.android.gms.common.api.Status,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.common.data.DataHolder -> com.google.android.gms.common.data.DataHolder:
    com.google.android.gms.common.data.DataHolderCreator CREATOR -> a
    int kZ -> f
    java.lang.String[] lh -> g
    android.os.Bundle li -> b
    android.database.CursorWindow[] lj -> h
    int ka -> i
    android.os.Bundle lk -> j
    int[] ll -> c
    int lm -> d
    boolean mClosed -> e
    java.lang.Object ln -> k
    boolean lo -> l
    com.google.android.gms.common.data.DataHolder$Builder lp -> m
    void validateContents() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> b
    java.lang.String[] bi() -> c
    android.database.CursorWindow[] bj() -> d
    int getStatusCode() -> e
    android.os.Bundle getMetadata() -> f
    void a(java.lang.String,int) -> a
    long getLong(java.lang.String,int,int) -> a
    int getInteger(java.lang.String,int,int) -> b
    java.lang.String getString(java.lang.String,int,int) -> c
    boolean getBoolean(java.lang.String,int,int) -> d
    byte[] getByteArray(java.lang.String,int,int) -> e
    android.net.Uri parseUri(java.lang.String,int,int) -> f
    boolean hasNull(java.lang.String,int,int) -> g
    int getCount() -> g
    int t(int) -> a
    boolean isClosed() -> h
    void close() -> i
    void finalize() -> finalize
com.google.android.gms.common.data.DataHolder$1 -> com.google.android.gms.common.data.a:
com.google.android.gms.common.data.DataHolder$Builder -> com.google.android.gms.common.data.b:
    java.lang.String[] lh -> a
    java.util.ArrayList lq -> b
    java.lang.String lr -> c
    java.util.HashMap ls -> d
    boolean lt -> e
    java.lang.String lu -> f
com.google.android.gms.common.data.DataHolderCreator -> com.google.android.gms.common.data.c:
    com.google.android.gms.common.data.DataHolder createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.common.data.DataHolder[] newArray(int) -> a
    void a(com.google.android.gms.common.data.DataHolder,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.common.data.Freezable -> com.google.android.gms.common.data.d:
    java.lang.Object freeze() -> a
com.google.android.gms.common.data.b -> com.google.android.gms.common.data.e:
    com.google.android.gms.common.data.DataHolder lb -> a
    int ld -> b
    int le -> c
    long getLong(java.lang.String) -> a
    int getInteger(java.lang.String) -> b
    boolean getBoolean(java.lang.String) -> c
    java.lang.String getString(java.lang.String) -> d
    byte[] getByteArray(java.lang.String) -> e
    android.net.Uri z(java.lang.String) -> f
    boolean A(java.lang.String) -> g
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.common.images.ImageManager -> com.google.android.gms.common.images.ImageManager:
    java.lang.Object ly -> a
    java.util.HashSet lz -> b
    android.content.Context mContext -> c
    android.os.Handler mHandler -> d
    java.util.concurrent.ExecutorService lC -> e
    com.google.android.gms.common.images.ImageManager$b lD -> f
    java.util.Map lE -> g
    java.util.Map lF -> h
    android.content.Context a(com.google.android.gms.common.images.ImageManager) -> a
    java.util.Map b(com.google.android.gms.common.images.ImageManager) -> b
    java.util.Map c(com.google.android.gms.common.images.ImageManager) -> c
    java.lang.Object bn() -> a
    java.util.HashSet bo() -> b
    java.util.concurrent.ExecutorService d(com.google.android.gms.common.images.ImageManager) -> d
    android.os.Handler e(com.google.android.gms.common.images.ImageManager) -> e
    com.google.android.gms.common.images.ImageManager$b f(com.google.android.gms.common.images.ImageManager) -> f
com.google.android.gms.common.images.ImageManager$ImageReceiver -> com.google.android.gms.common.images.ImageManager$ImageReceiver:
    android.net.Uri mUri -> c
    java.util.ArrayList lG -> d
    boolean lH -> a
    com.google.android.gms.common.images.ImageManager lI -> b
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    java.util.ArrayList a(com.google.android.gms.common.images.ImageManager$ImageReceiver) -> a
com.google.android.gms.common.images.ImageManager$OnImageLoadedListener -> com.google.android.gms.common.images.a:
    void onImageLoaded(android.net.Uri,android.graphics.drawable.Drawable,boolean) -> a
com.google.android.gms.common.images.ImageManager$b -> com.google.android.gms.common.images.b:
    void a(boolean,com.google.android.gms.common.images.a$a,android.graphics.Bitmap,android.graphics.Bitmap) -> a
    int a(com.google.android.gms.common.images.a$a,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
com.google.android.gms.common.images.ImageManager$c -> com.google.android.gms.common.images.c:
    android.net.Uri mUri -> b
    android.os.ParcelFileDescriptor lJ -> c
    com.google.android.gms.common.images.ImageManager lI -> a
    void run() -> run
com.google.android.gms.common.images.ImageManager$f -> com.google.android.gms.common.images.d:
    android.net.Uri mUri -> b
    android.graphics.Bitmap mBitmap -> c
    java.util.concurrent.CountDownLatch kv -> d
    boolean lL -> e
    com.google.android.gms.common.images.ImageManager lI -> a
    void run() -> run
    void a(com.google.android.gms.common.images.ImageManager$ImageReceiver,boolean) -> a
com.google.android.gms.common.images.a -> com.google.android.gms.common.images.e:
    com.google.android.gms.common.images.a$a lM -> a
    int lO -> c
    int lP -> b
    int lQ -> d
    java.lang.ref.WeakReference lR -> e
    java.lang.ref.WeakReference lS -> f
    java.lang.ref.WeakReference lT -> g
    int lU -> h
    boolean lV -> i
    boolean lW -> j
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void a(android.content.Context,android.graphics.Bitmap,boolean) -> a
    void b(android.content.Context,boolean) -> a
    void a(android.graphics.drawable.Drawable,boolean,boolean,boolean) -> a
    void a(android.widget.ImageView,android.graphics.drawable.Drawable,boolean,boolean,boolean) -> a
    void a(android.widget.TextView,int,android.graphics.drawable.Drawable,boolean,boolean) -> a
    boolean a(boolean,boolean) -> a
    com.google.android.gms.internal.de a(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
com.google.android.gms.common.images.a$a -> com.google.android.gms.common.images.f:
    android.net.Uri uri -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.common.internal.safeparcel.SafeParcelable -> com.google.android.gms.common.internal.safeparcel.SafeParcelable:
com.google.android.gms.common.internal.safeparcel.a -> com.google.android.gms.common.internal.safeparcel.a:
    int j(android.os.Parcel) -> a
    int A(int) -> a
    int a(android.os.Parcel,int) -> a
    void b(android.os.Parcel,int) -> b
    void a(android.os.Parcel,int,int) -> a
    void a(android.os.Parcel,int,int,int) -> a
    int k(android.os.Parcel) -> b
    boolean c(android.os.Parcel,int) -> c
    java.lang.Boolean d(android.os.Parcel,int) -> d
    byte e(android.os.Parcel,int) -> e
    short f(android.os.Parcel,int) -> f
    int g(android.os.Parcel,int) -> g
    long h(android.os.Parcel,int) -> h
    java.math.BigInteger i(android.os.Parcel,int) -> i
    float j(android.os.Parcel,int) -> j
    double k(android.os.Parcel,int) -> k
    java.math.BigDecimal l(android.os.Parcel,int) -> l
    java.lang.String m(android.os.Parcel,int) -> m
    android.os.IBinder n(android.os.Parcel,int) -> n
    android.os.Parcelable a(android.os.Parcel,int,android.os.Parcelable$Creator) -> a
    android.os.Bundle o(android.os.Parcel,int) -> o
    byte[] p(android.os.Parcel,int) -> p
    boolean[] q(android.os.Parcel,int) -> q
    int[] r(android.os.Parcel,int) -> r
    long[] s(android.os.Parcel,int) -> s
    java.math.BigInteger[] t(android.os.Parcel,int) -> t
    float[] u(android.os.Parcel,int) -> u
    double[] v(android.os.Parcel,int) -> v
    java.math.BigDecimal[] w(android.os.Parcel,int) -> w
    java.lang.String[] x(android.os.Parcel,int) -> x
    java.util.ArrayList y(android.os.Parcel,int) -> y
    java.lang.Object[] b(android.os.Parcel,int,android.os.Parcelable$Creator) -> b
    java.util.ArrayList c(android.os.Parcel,int,android.os.Parcelable$Creator) -> c
    android.os.Parcel z(android.os.Parcel,int) -> z
    android.os.Parcel[] A(android.os.Parcel,int) -> A
    void a(android.os.Parcel,int,java.util.List,java.lang.ClassLoader) -> a
com.google.android.gms.common.internal.safeparcel.a$a -> com.google.android.gms.common.internal.safeparcel.b:
com.google.android.gms.common.internal.safeparcel.b -> com.google.android.gms.common.internal.safeparcel.c:
    void b(android.os.Parcel,int,int) -> b
    int B(android.os.Parcel,int) -> b
    void C(android.os.Parcel,int) -> c
    int l(android.os.Parcel) -> a
    void D(android.os.Parcel,int) -> a
    void a(android.os.Parcel,int,boolean) -> a
    void a(android.os.Parcel,int,java.lang.Boolean,boolean) -> a
    void a(android.os.Parcel,int,byte) -> a
    void a(android.os.Parcel,int,short) -> a
    void c(android.os.Parcel,int,int) -> a
    void a(android.os.Parcel,int,long) -> a
    void a(android.os.Parcel,int,float) -> a
    void a(android.os.Parcel,int,double) -> a
    void a(android.os.Parcel,int,java.lang.String,boolean) -> a
    void a(android.os.Parcel,int,android.os.IBinder,boolean) -> a
    void a(android.os.Parcel,int,android.os.Parcelable,int,boolean) -> a
    void a(android.os.Parcel,int,android.os.Bundle,boolean) -> a
    void a(android.os.Parcel,int,byte[],boolean) -> a
    void a(android.os.Parcel,int,float[],boolean) -> a
    void a(android.os.Parcel,int,java.lang.String[],boolean) -> a
    void a(android.os.Parcel,int,java.util.List,boolean) -> a
    void a(android.os.Parcel,int,android.os.Parcelable[],int,boolean) -> a
    void b(android.os.Parcel,int,java.util.List,boolean) -> b
    void a(android.os.Parcel,android.os.Parcelable,int) -> a
    void a(android.os.Parcel,int,android.os.Parcel,boolean) -> a
    void c(android.os.Parcel,int,java.util.List,boolean) -> c
com.google.android.gms.drive.Contents -> com.google.android.gms.drive.Contents:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    android.os.ParcelFileDescriptor lJ -> b
    int nT -> c
    int nU -> d
    com.google.android.gms.drive.DriveId nV -> e
    boolean mClosed -> f
    boolean nW -> g
    boolean nX -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.DriveId -> com.google.android.gms.drive.DriveId:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    java.lang.String od -> b
    long oe -> c
    long of -> d
    java.lang.String og -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String encodeToString() -> a
    byte[] cs() -> b
    java.lang.String toString() -> toString
com.google.android.gms.drive.a -> com.google.android.gms.drive.a:
    com.google.android.gms.drive.Contents u(android.os.Parcel) -> a
    com.google.android.gms.drive.Contents[] L(int) -> a
    void a(com.google.android.gms.drive.Contents,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.c -> com.google.android.gms.drive.b:
    com.google.android.gms.drive.DriveId v(android.os.Parcel) -> a
    com.google.android.gms.drive.DriveId[] M(int) -> a
    void a(com.google.android.gms.drive.DriveId,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.CloseContentsRequest -> com.google.android.gms.drive.internal.CloseContentsRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.drive.Contents om -> b
    java.lang.Boolean on -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.CreateContentsRequest -> com.google.android.gms.drive.internal.CreateContentsRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.CreateFileIntentSenderRequest -> com.google.android.gms.drive.internal.CreateFileIntentSenderRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.drive.metadata.internal.MetadataBundle oo -> b
    int nT -> c
    java.lang.String oa -> d
    com.google.android.gms.drive.DriveId ob -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.CreateFileRequest -> com.google.android.gms.drive.internal.CreateFileRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.drive.DriveId op -> b
    com.google.android.gms.drive.metadata.internal.MetadataBundle oo -> c
    com.google.android.gms.drive.Contents om -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.CreateFolderRequest -> com.google.android.gms.drive.internal.CreateFolderRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.drive.DriveId op -> b
    com.google.android.gms.drive.metadata.internal.MetadataBundle oo -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.GetMetadataRequest -> com.google.android.gms.drive.internal.GetMetadataRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.drive.DriveId oF -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnContentsResponse -> com.google.android.gms.drive.internal.OnContentsResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.drive.Contents nZ -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnDownloadProgressResponse -> com.google.android.gms.drive.internal.OnDownloadProgressResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    long oL -> b
    long oM -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnDriveIdResponse -> com.google.android.gms.drive.internal.OnDriveIdResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.drive.DriveId oF -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnListEntriesResponse -> com.google.android.gms.drive.internal.OnListEntriesResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.common.data.DataHolder oN -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnMetadataResponse -> com.google.android.gms.drive.internal.OnMetadataResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.drive.metadata.internal.MetadataBundle oo -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OpenContentsRequest -> com.google.android.gms.drive.internal.OpenContentsRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.drive.DriveId oF -> b
    int nU -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OpenFileIntentSenderRequest -> com.google.android.gms.drive.internal.OpenFileIntentSenderRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    java.lang.String oa -> b
    java.lang.String[] ol -> c
    com.google.android.gms.drive.DriveId ob -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.QueryRequest -> com.google.android.gms.drive.internal.QueryRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.drive.query.Query oO -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.UpdateMetadataRequest -> com.google.android.gms.drive.internal.UpdateMetadataRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.drive.DriveId oF -> b
    com.google.android.gms.drive.metadata.internal.MetadataBundle oP -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.aa -> com.google.android.gms.drive.internal.a:
    com.google.android.gms.drive.internal.UpdateMetadataRequest K(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.UpdateMetadataRequest[] ab(int) -> a
    void a(com.google.android.gms.drive.internal.UpdateMetadataRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.b -> com.google.android.gms.drive.internal.b:
    com.google.android.gms.drive.internal.CloseContentsRequest w(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CloseContentsRequest[] N(int) -> a
    void a(com.google.android.gms.drive.internal.CloseContentsRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.c -> com.google.android.gms.drive.internal.c:
    com.google.android.gms.drive.internal.CreateContentsRequest x(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CreateContentsRequest[] O(int) -> a
    void a(com.google.android.gms.drive.internal.CreateContentsRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.d -> com.google.android.gms.drive.internal.d:
    com.google.android.gms.drive.internal.CreateFileIntentSenderRequest y(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CreateFileIntentSenderRequest[] P(int) -> a
    void a(com.google.android.gms.drive.internal.CreateFileIntentSenderRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.e -> com.google.android.gms.drive.internal.e:
    com.google.android.gms.drive.internal.CreateFileRequest z(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CreateFileRequest[] Q(int) -> a
    void a(com.google.android.gms.drive.internal.CreateFileRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.f -> com.google.android.gms.drive.internal.f:
    com.google.android.gms.drive.internal.CreateFolderRequest A(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CreateFolderRequest[] R(int) -> a
    void a(com.google.android.gms.drive.internal.CreateFolderRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.n -> com.google.android.gms.drive.internal.g:
    com.google.android.gms.drive.internal.GetMetadataRequest B(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.GetMetadataRequest[] S(int) -> a
    void a(com.google.android.gms.drive.internal.GetMetadataRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.q -> com.google.android.gms.drive.internal.h:
    com.google.android.gms.drive.internal.q[] oG -> a
    int versionCode -> b
    java.lang.String oH -> c
    long oI -> d
    long oJ -> e
    int oK -> g
    void a(com.google.android.gms.internal.hr) -> a
    int cw() -> a
com.google.android.gms.drive.internal.r -> com.google.android.gms.drive.internal.i:
    com.google.android.gms.drive.internal.OnContentsResponse C(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnContentsResponse[] T(int) -> a
    void a(com.google.android.gms.drive.internal.OnContentsResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.s -> com.google.android.gms.drive.internal.j:
    com.google.android.gms.drive.internal.OnDownloadProgressResponse D(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnDownloadProgressResponse[] U(int) -> a
    void a(com.google.android.gms.drive.internal.OnDownloadProgressResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.t -> com.google.android.gms.drive.internal.k:
    com.google.android.gms.drive.internal.OnDriveIdResponse E(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnDriveIdResponse[] V(int) -> a
    void a(com.google.android.gms.drive.internal.OnDriveIdResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.u -> com.google.android.gms.drive.internal.l:
    com.google.android.gms.drive.internal.OnListEntriesResponse F(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnListEntriesResponse[] W(int) -> a
    void a(com.google.android.gms.drive.internal.OnListEntriesResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.v -> com.google.android.gms.drive.internal.m:
    com.google.android.gms.drive.internal.OnMetadataResponse G(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnMetadataResponse[] X(int) -> a
    void a(com.google.android.gms.drive.internal.OnMetadataResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.w -> com.google.android.gms.drive.internal.n:
    com.google.android.gms.drive.internal.OpenContentsRequest H(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OpenContentsRequest[] Y(int) -> a
    void a(com.google.android.gms.drive.internal.OpenContentsRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.x -> com.google.android.gms.drive.internal.o:
    com.google.android.gms.drive.internal.OpenFileIntentSenderRequest I(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OpenFileIntentSenderRequest[] Z(int) -> a
    void a(com.google.android.gms.drive.internal.OpenFileIntentSenderRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.y -> com.google.android.gms.drive.internal.p:
    com.google.android.gms.drive.internal.QueryRequest J(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.QueryRequest[] aa(int) -> a
    void a(com.google.android.gms.drive.internal.QueryRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.metadata.CollectionMetadataField -> com.google.android.gms.drive.metadata.a:
com.google.android.gms.drive.metadata.MetadataField -> com.google.android.gms.drive.metadata.b:
    java.lang.String oQ -> a
    java.util.Set oR -> b
    java.lang.String getName() -> a
    java.lang.String toString() -> toString
com.google.android.gms.drive.metadata.OrderedMetadataField -> com.google.android.gms.drive.metadata.c:
com.google.android.gms.drive.metadata.StringMetadataField -> com.google.android.gms.drive.metadata.d:
com.google.android.gms.drive.metadata.internal.MetadataBundle -> com.google.android.gms.drive.metadata.internal.MetadataBundle:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    android.os.Bundle oT -> b
    java.util.Set cF() -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.metadata.internal.a -> com.google.android.gms.drive.metadata.internal.a:
com.google.android.gms.drive.metadata.internal.b -> com.google.android.gms.drive.metadata.internal.b:
com.google.android.gms.drive.metadata.internal.c -> com.google.android.gms.drive.metadata.internal.c:
    java.util.Map oS -> a
    void b(com.google.android.gms.drive.metadata.MetadataField) -> a
    com.google.android.gms.drive.metadata.MetadataField P(java.lang.String) -> a
com.google.android.gms.drive.metadata.internal.d -> com.google.android.gms.drive.metadata.internal.d:
    com.google.android.gms.drive.metadata.internal.MetadataBundle L(android.os.Parcel) -> a
    com.google.android.gms.drive.metadata.internal.MetadataBundle[] ac(int) -> a
    void a(com.google.android.gms.drive.metadata.internal.MetadataBundle,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.metadata.internal.e -> com.google.android.gms.drive.metadata.internal.e:
com.google.android.gms.drive.metadata.internal.f -> com.google.android.gms.drive.metadata.internal.f:
com.google.android.gms.drive.query.Filter -> com.google.android.gms.drive.query.a:
com.google.android.gms.drive.query.Query -> com.google.android.gms.drive.query.Query:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.drive.query.internal.LogicalFilter pc -> a
    java.lang.String pd -> b
    int kZ -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.a -> com.google.android.gms.drive.query.b:
    com.google.android.gms.drive.query.Query M(android.os.Parcel) -> a
    com.google.android.gms.drive.query.Query[] ad(int) -> a
    void a(com.google.android.gms.drive.query.Query,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.ComparisonFilter -> com.google.android.gms.drive.query.internal.ComparisonFilter:
    com.google.android.gms.drive.query.internal.a CREATOR -> a
    com.google.android.gms.drive.query.internal.Operator pf -> b
    com.google.android.gms.drive.metadata.internal.MetadataBundle pg -> c
    int kZ -> d
    com.google.android.gms.drive.metadata.MetadataField ph -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.FieldOnlyFilter -> com.google.android.gms.drive.query.internal.FieldOnlyFilter:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.drive.metadata.internal.MetadataBundle pg -> a
    int kZ -> b
    com.google.android.gms.drive.metadata.MetadataField ph -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.FilterHolder -> com.google.android.gms.drive.query.internal.FilterHolder:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.drive.query.internal.ComparisonFilter pi -> b
    com.google.android.gms.drive.query.internal.FieldOnlyFilter pj -> c
    com.google.android.gms.drive.query.internal.LogicalFilter pk -> d
    com.google.android.gms.drive.query.internal.NotFilter pl -> e
    com.google.android.gms.drive.query.internal.InFilter pm -> f
    com.google.android.gms.drive.query.Filter pn -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.InFilter -> com.google.android.gms.drive.query.internal.InFilter:
    com.google.android.gms.drive.query.internal.e CREATOR -> a
    com.google.android.gms.drive.metadata.internal.MetadataBundle pg -> b
    int kZ -> c
    com.google.android.gms.drive.metadata.CollectionMetadataField po -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.LogicalFilter -> com.google.android.gms.drive.query.internal.LogicalFilter:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.drive.query.internal.Operator pf -> a
    java.util.List pp -> b
    int kZ -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.NotFilter -> com.google.android.gms.drive.query.internal.NotFilter:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.drive.query.internal.FilterHolder pq -> a
    int kZ -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.Operator -> com.google.android.gms.drive.query.internal.Operator:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.drive.query.internal.Operator pr -> a
    com.google.android.gms.drive.query.internal.Operator ps -> b
    com.google.android.gms.drive.query.internal.Operator pt -> c
    com.google.android.gms.drive.query.internal.Operator pu -> d
    com.google.android.gms.drive.query.internal.Operator pv -> e
    com.google.android.gms.drive.query.internal.Operator pw -> f
    com.google.android.gms.drive.query.internal.Operator px -> g
    com.google.android.gms.drive.query.internal.Operator py -> h
    com.google.android.gms.drive.query.internal.Operator pz -> i
    java.lang.String mTag -> j
    int kZ -> k
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.drive.query.internal.a -> com.google.android.gms.drive.query.internal.a:
    com.google.android.gms.drive.query.internal.ComparisonFilter N(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.ComparisonFilter[] ae(int) -> a
    void a(com.google.android.gms.drive.query.internal.ComparisonFilter,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.b -> com.google.android.gms.drive.query.internal.b:
    com.google.android.gms.drive.query.internal.FieldOnlyFilter O(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.FieldOnlyFilter[] af(int) -> a
    void a(com.google.android.gms.drive.query.internal.FieldOnlyFilter,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.c -> com.google.android.gms.drive.query.internal.c:
    com.google.android.gms.drive.query.internal.FilterHolder P(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.FilterHolder[] ag(int) -> a
    void a(com.google.android.gms.drive.query.internal.FilterHolder,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.d -> com.google.android.gms.drive.query.internal.d:
    com.google.android.gms.drive.metadata.MetadataField b(com.google.android.gms.drive.metadata.internal.MetadataBundle) -> a
com.google.android.gms.drive.query.internal.e -> com.google.android.gms.drive.query.internal.e:
    com.google.android.gms.drive.query.internal.InFilter Q(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.InFilter[] ah(int) -> a
    void a(com.google.android.gms.drive.query.internal.InFilter,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.f -> com.google.android.gms.drive.query.internal.f:
    com.google.android.gms.drive.query.internal.LogicalFilter R(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.LogicalFilter[] ai(int) -> a
    void a(com.google.android.gms.drive.query.internal.LogicalFilter,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.g -> com.google.android.gms.drive.query.internal.g:
    com.google.android.gms.drive.query.internal.NotFilter S(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.NotFilter[] aj(int) -> a
    void a(com.google.android.gms.drive.query.internal.NotFilter,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.h -> com.google.android.gms.drive.query.internal.h:
    com.google.android.gms.drive.query.internal.Operator T(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.Operator[] ak(int) -> a
    void a(com.google.android.gms.drive.query.internal.Operator,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.dynamic.LifecycleDelegate -> com.google.android.gms.a.a:
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> a
    void onPause() -> b
    void onDestroyView() -> c
    void onDestroy() -> d
    void onLowMemory() -> e
    void onSaveInstanceState(android.os.Bundle) -> b
com.google.android.gms.dynamic.a -> com.google.android.gms.a.b:
    com.google.android.gms.dynamic.LifecycleDelegate pG -> a
    android.os.Bundle pH -> b
    java.util.LinkedList pI -> c
    com.google.android.gms.dynamic.d pJ -> d
    com.google.android.gms.dynamic.LifecycleDelegate cG() -> a
    void al(int) -> a
    void a(android.os.Bundle,com.google.android.gms.dynamic.a$a) -> a
    void a(com.google.android.gms.dynamic.d) -> a
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void a(android.widget.FrameLayout) -> a
    void onResume() -> b
    void onPause() -> c
    void onDestroyView() -> d
    void onDestroy() -> e
    void onSaveInstanceState(android.os.Bundle) -> b
    void onLowMemory() -> f
    com.google.android.gms.dynamic.LifecycleDelegate a(com.google.android.gms.dynamic.a,com.google.android.gms.dynamic.LifecycleDelegate) -> a
    java.util.LinkedList a(com.google.android.gms.dynamic.a) -> a
    com.google.android.gms.dynamic.LifecycleDelegate b(com.google.android.gms.dynamic.a) -> b
    android.os.Bundle a(com.google.android.gms.dynamic.a,android.os.Bundle) -> a
com.google.android.gms.dynamic.a$1 -> com.google.android.gms.a.c:
    com.google.android.gms.dynamic.a pK -> a
    void a(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.dynamic.a$2 -> com.google.android.gms.a.d:
    android.app.Activity pL -> a
    android.os.Bundle pM -> b
    android.os.Bundle pN -> c
    com.google.android.gms.dynamic.a pK -> d
    int getState() -> a
    void b(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.dynamic.a$3 -> com.google.android.gms.a.e:
    android.os.Bundle pN -> a
    com.google.android.gms.dynamic.a pK -> b
    int getState() -> a
    void b(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.dynamic.a$4 -> com.google.android.gms.a.f:
    android.widget.FrameLayout pO -> a
    android.view.LayoutInflater pP -> b
    android.view.ViewGroup pQ -> c
    android.os.Bundle pN -> d
    com.google.android.gms.dynamic.a pK -> e
    int getState() -> a
    void b(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.dynamic.a$5 -> com.google.android.gms.a.g:
    android.content.Context hD -> a
    int pR -> b
    com.google.android.gms.dynamic.a pK -> c
    void onClick(android.view.View) -> onClick
com.google.android.gms.dynamic.a$6 -> com.google.android.gms.a.h:
    com.google.android.gms.dynamic.a pK -> a
    int getState() -> a
    void b(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.dynamic.a$a -> com.google.android.gms.a.i:
    int getState() -> a
    void b(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.dynamic.b -> com.google.android.gms.a.j:
com.google.android.gms.dynamic.b$a -> com.google.android.gms.a.k:
    com.google.android.gms.dynamic.b C(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.dynamic.b$a$a -> com.google.android.gms.a.l:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
com.google.android.gms.dynamic.c -> com.google.android.gms.a.m:
    java.lang.Object pS -> a
    com.google.android.gms.dynamic.b h(java.lang.Object) -> a
    java.lang.Object b(com.google.android.gms.dynamic.b) -> a
com.google.android.gms.dynamic.d -> com.google.android.gms.a.n:
    void a(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.games.Game -> com.google.android.gms.games.Game:
    java.lang.String getApplicationId() -> b
    java.lang.String getDisplayName() -> c
    java.lang.String getPrimaryCategory() -> d
    java.lang.String getSecondaryCategory() -> e
    java.lang.String getDescription() -> f
    java.lang.String getDeveloperName() -> g
    android.net.Uri getIconImageUri() -> h
    android.net.Uri getHiResImageUri() -> i
    android.net.Uri getFeaturedImageUri() -> j
    boolean isPlayEnabledGame() -> k
    boolean isInstanceInstalled() -> l
    java.lang.String getInstancePackageName() -> m
    int getGameplayAclStatus() -> n
    int getAchievementTotalCount() -> o
    int getLeaderboardCount() -> p
    boolean isRealTimeMultiplayerEnabled() -> q
    boolean isTurnBasedMultiplayerEnabled() -> r
com.google.android.gms.games.GameEntity -> com.google.android.gms.games.GameEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    java.lang.String pV -> b
    java.lang.String pW -> c
    java.lang.String pX -> d
    java.lang.String pY -> e
    java.lang.String pZ -> f
    java.lang.String qa -> g
    android.net.Uri qb -> h
    android.net.Uri qc -> i
    android.net.Uri qd -> j
    boolean qe -> k
    boolean qf -> l
    java.lang.String qg -> m
    int qh -> n
    int qi -> o
    int qj -> p
    boolean qk -> q
    boolean ql -> r
    int getVersionCode() -> s
    java.lang.String getApplicationId() -> b
    java.lang.String getDisplayName() -> c
    java.lang.String getPrimaryCategory() -> d
    java.lang.String getSecondaryCategory() -> e
    java.lang.String getDescription() -> f
    java.lang.String getDeveloperName() -> g
    android.net.Uri getIconImageUri() -> h
    android.net.Uri getHiResImageUri() -> i
    android.net.Uri getFeaturedImageUri() -> j
    boolean isPlayEnabledGame() -> k
    boolean isInstanceInstalled() -> l
    java.lang.String getInstancePackageName() -> m
    int getGameplayAclStatus() -> n
    int getAchievementTotalCount() -> o
    int getLeaderboardCount() -> p
    boolean isRealTimeMultiplayerEnabled() -> q
    boolean isTurnBasedMultiplayerEnabled() -> r
    com.google.android.gms.games.Game freeze() -> t
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.Game) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.Game,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.Game) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer cH() -> u
    boolean b(java.lang.Integer) -> a
    boolean Q(java.lang.String) -> a
com.google.android.gms.games.GameEntity$a -> com.google.android.gms.games.a:
    com.google.android.gms.games.GameEntity U(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.Player -> com.google.android.gms.games.Player:
    java.lang.String getPlayerId() -> b
    java.lang.String getDisplayName() -> c
    android.net.Uri getIconImageUri() -> d
    android.net.Uri getHiResImageUri() -> e
    long getRetrievedTimestamp() -> f
com.google.android.gms.games.PlayerEntity -> com.google.android.gms.games.PlayerEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    java.lang.String qK -> b
    java.lang.String pW -> c
    android.net.Uri qb -> d
    android.net.Uri qc -> e
    long qL -> f
    int getVersionCode() -> g
    java.lang.String getPlayerId() -> b
    java.lang.String getDisplayName() -> c
    android.net.Uri getIconImageUri() -> d
    android.net.Uri getHiResImageUri() -> e
    long getRetrievedTimestamp() -> f
    com.google.android.gms.games.Player freeze() -> h
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.Player) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.Player,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.Player) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer cH() -> i
    boolean b(java.lang.Integer) -> a
    boolean Q(java.lang.String) -> a
com.google.android.gms.games.PlayerEntity$a -> com.google.android.gms.games.c:
    com.google.android.gms.games.PlayerEntity V(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.a -> com.google.android.gms.games.d:
    com.google.android.gms.games.GameEntity U(android.os.Parcel) -> a
    com.google.android.gms.games.GameEntity[] am(int) -> a
    void a(com.google.android.gms.games.GameEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.b -> com.google.android.gms.games.b:
    java.lang.String getApplicationId() -> b
    java.lang.String getDisplayName() -> c
    java.lang.String getPrimaryCategory() -> d
    java.lang.String getSecondaryCategory() -> e
    java.lang.String getDescription() -> f
    java.lang.String getDeveloperName() -> g
    android.net.Uri getIconImageUri() -> h
    android.net.Uri getHiResImageUri() -> i
    android.net.Uri getFeaturedImageUri() -> j
    boolean isPlayEnabledGame() -> k
    boolean isInstanceInstalled() -> l
    java.lang.String getInstancePackageName() -> m
    int getGameplayAclStatus() -> n
    int getAchievementTotalCount() -> o
    int getLeaderboardCount() -> p
    boolean isRealTimeMultiplayerEnabled() -> q
    boolean isTurnBasedMultiplayerEnabled() -> r
    com.google.android.gms.games.Game freeze() -> s
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.d -> com.google.android.gms.games.f:
    com.google.android.gms.games.PlayerEntity V(android.os.Parcel) -> a
    com.google.android.gms.games.PlayerEntity[] an(int) -> a
    void a(com.google.android.gms.games.PlayerEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.e -> com.google.android.gms.games.e:
    java.lang.String getPlayerId() -> b
    java.lang.String getDisplayName() -> c
    android.net.Uri getIconImageUri() -> d
    android.net.Uri getHiResImageUri() -> e
    long getRetrievedTimestamp() -> f
    com.google.android.gms.games.Player freeze() -> g
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.multiplayer.Invitation -> com.google.android.gms.games.multiplayer.Invitation:
    com.google.android.gms.games.Game getGame() -> b
    java.lang.String getInvitationId() -> c
    com.google.android.gms.games.multiplayer.Participant getInviter() -> d
    long getCreationTimestamp() -> e
    int getInvitationType() -> f
    int getVariant() -> g
com.google.android.gms.games.multiplayer.InvitationEntity -> com.google.android.gms.games.multiplayer.InvitationEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    com.google.android.gms.games.GameEntity sq -> b
    java.lang.String rc -> c
    long sr -> d
    int ss -> e
    com.google.android.gms.games.multiplayer.ParticipantEntity st -> f
    java.util.ArrayList su -> g
    int sv -> h
    int getVersionCode() -> h
    com.google.android.gms.games.Game getGame() -> b
    java.lang.String getInvitationId() -> c
    com.google.android.gms.games.multiplayer.Participant getInviter() -> d
    long getCreationTimestamp() -> e
    java.util.ArrayList getParticipants() -> i
    int getInvitationType() -> f
    int getVariant() -> g
    com.google.android.gms.games.multiplayer.Invitation freeze() -> j
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.Invitation) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.Invitation,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.Invitation) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer cH() -> k
    boolean b(java.lang.Integer) -> a
    boolean Q(java.lang.String) -> a
com.google.android.gms.games.multiplayer.InvitationEntity$a -> com.google.android.gms.games.multiplayer.a:
    com.google.android.gms.games.multiplayer.InvitationEntity W(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.Participant -> com.google.android.gms.games.multiplayer.Participant:
    int getStatus() -> b
    java.lang.String dm() -> c
    int getCapabilities() -> d
    boolean isConnectedToRoom() -> e
    java.lang.String getDisplayName() -> f
    android.net.Uri getIconImageUri() -> g
    android.net.Uri getHiResImageUri() -> h
    java.lang.String getParticipantId() -> i
    com.google.android.gms.games.Player getPlayer() -> j
    com.google.android.gms.games.multiplayer.ParticipantResult getResult() -> k
com.google.android.gms.games.multiplayer.ParticipantEntity -> com.google.android.gms.games.multiplayer.ParticipantEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    java.lang.String rm -> b
    java.lang.String pW -> c
    android.net.Uri qb -> d
    android.net.Uri qc -> e
    int sy -> f
    java.lang.String sz -> g
    boolean sA -> h
    com.google.android.gms.games.PlayerEntity sB -> i
    int sC -> j
    com.google.android.gms.games.multiplayer.ParticipantResult sD -> k
    int getVersionCode() -> l
    int getStatus() -> b
    java.lang.String dm() -> c
    boolean isConnectedToRoom() -> e
    java.lang.String getDisplayName() -> f
    android.net.Uri getIconImageUri() -> g
    android.net.Uri getHiResImageUri() -> h
    java.lang.String getParticipantId() -> i
    com.google.android.gms.games.Player getPlayer() -> j
    com.google.android.gms.games.multiplayer.ParticipantResult getResult() -> k
    int getCapabilities() -> d
    com.google.android.gms.games.multiplayer.Participant freeze() -> m
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.Participant) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.Participant,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.Participant) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer cH() -> n
    boolean b(java.lang.Integer) -> a
    boolean Q(java.lang.String) -> a
com.google.android.gms.games.multiplayer.ParticipantEntity$a -> com.google.android.gms.games.multiplayer.c:
    com.google.android.gms.games.multiplayer.ParticipantEntity X(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.ParticipantResult -> com.google.android.gms.games.multiplayer.ParticipantResult:
    com.google.android.gms.games.multiplayer.ParticipantResultCreator CREATOR -> a
    int kZ -> b
    java.lang.String rm -> c
    int sF -> d
    int sG -> e
    int getVersionCode() -> a
    java.lang.String getParticipantId() -> b
    int getResult() -> c
    int getPlacing() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.games.multiplayer.ParticipantResultCreator -> com.google.android.gms.games.multiplayer.d:
    com.google.android.gms.games.multiplayer.ParticipantResult createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.ParticipantResult[] newArray(int) -> a
    void a(com.google.android.gms.games.multiplayer.ParticipantResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.Participatable -> com.google.android.gms.games.multiplayer.f:
    java.util.ArrayList getParticipants() -> i
com.google.android.gms.games.multiplayer.a -> com.google.android.gms.games.multiplayer.g:
    com.google.android.gms.games.multiplayer.InvitationEntity W(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.InvitationEntity[] aw(int) -> a
    void a(com.google.android.gms.games.multiplayer.InvitationEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.b -> com.google.android.gms.games.multiplayer.b:
    com.google.android.gms.games.Game sw -> c
    com.google.android.gms.games.multiplayer.e sx -> d
    java.util.ArrayList su -> e
    com.google.android.gms.games.Game getGame() -> b
    java.lang.String getInvitationId() -> c
    com.google.android.gms.games.multiplayer.Participant getInviter() -> d
    long getCreationTimestamp() -> e
    java.util.ArrayList getParticipants() -> i
    int getInvitationType() -> f
    int getVariant() -> g
    com.google.android.gms.games.multiplayer.Invitation freeze() -> h
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.multiplayer.d -> com.google.android.gms.games.multiplayer.h:
    com.google.android.gms.games.multiplayer.ParticipantEntity X(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.ParticipantEntity[] ax(int) -> a
    void a(com.google.android.gms.games.multiplayer.ParticipantEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.e -> com.google.android.gms.games.multiplayer.e:
    com.google.android.gms.games.e sE -> c
    com.google.android.gms.games.multiplayer.Participant freeze() -> l
    int getStatus() -> b
    java.lang.String dm() -> c
    boolean isConnectedToRoom() -> e
    java.lang.String getDisplayName() -> f
    android.net.Uri getIconImageUri() -> g
    android.net.Uri getHiResImageUri() -> h
    java.lang.String getParticipantId() -> i
    com.google.android.gms.games.Player getPlayer() -> j
    com.google.android.gms.games.multiplayer.ParticipantResult getResult() -> k
    int getCapabilities() -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.multiplayer.realtime.RealTimeMessage -> com.google.android.gms.games.multiplayer.realtime.RealTimeMessage:
    java.lang.String sH -> a
    byte[] sI -> b
    int sJ -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.games.multiplayer.realtime.RealTimeMessage$1 -> com.google.android.gms.games.multiplayer.realtime.a:
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessage Y(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessage[] ay(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.realtime.Room -> com.google.android.gms.games.multiplayer.realtime.Room:
    java.lang.String getRoomId() -> b
    java.lang.String getCreatorId() -> c
    long getCreationTimestamp() -> d
    int getStatus() -> e
    java.lang.String getDescription() -> f
    int getVariant() -> g
    android.os.Bundle getAutoMatchCriteria() -> h
    int getAutoMatchWaitEstimateSeconds() -> j
com.google.android.gms.games.multiplayer.realtime.RoomConfig -> com.google.android.gms.games.multiplayer.realtime.b:
    android.os.Bundle createAutoMatchCriteria(int,int,long) -> a
com.google.android.gms.games.multiplayer.realtime.RoomEntity -> com.google.android.gms.games.multiplayer.realtime.RoomEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    java.lang.String rh -> b
    java.lang.String sS -> c
    long sr -> d
    int sT -> e
    java.lang.String pZ -> f
    int sv -> g
    android.os.Bundle sO -> h
    java.util.ArrayList su -> i
    int sU -> j
    int getVersionCode() -> k
    java.lang.String getRoomId() -> b
    java.lang.String getCreatorId() -> c
    long getCreationTimestamp() -> d
    int getStatus() -> e
    java.lang.String getDescription() -> f
    int getVariant() -> g
    android.os.Bundle getAutoMatchCriteria() -> h
    java.util.ArrayList getParticipants() -> i
    int getAutoMatchWaitEstimateSeconds() -> j
    com.google.android.gms.games.multiplayer.realtime.Room freeze() -> l
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.realtime.Room) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.realtime.Room,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.realtime.Room) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer cH() -> m
    boolean b(java.lang.Integer) -> a
    boolean Q(java.lang.String) -> a
com.google.android.gms.games.multiplayer.realtime.RoomEntity$a -> com.google.android.gms.games.multiplayer.realtime.c:
    com.google.android.gms.games.multiplayer.realtime.RoomEntity Z(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.realtime.c -> com.google.android.gms.games.multiplayer.realtime.e:
    com.google.android.gms.games.multiplayer.realtime.RoomEntity Z(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.realtime.RoomEntity[] az(int) -> a
    void a(com.google.android.gms.games.multiplayer.realtime.RoomEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.realtime.d -> com.google.android.gms.games.multiplayer.realtime.d:
    int rO -> c
    java.lang.String getRoomId() -> b
    java.lang.String getCreatorId() -> c
    long getCreationTimestamp() -> d
    int getStatus() -> e
    java.lang.String getDescription() -> f
    int getVariant() -> g
    android.os.Bundle getAutoMatchCriteria() -> h
    java.util.ArrayList getParticipants() -> i
    int getAutoMatchWaitEstimateSeconds() -> j
    com.google.android.gms.games.multiplayer.realtime.Room freeze() -> k
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch -> com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch:
    int[] sZ -> a_
    com.google.android.gms.games.Game getGame() -> b
    java.lang.String getMatchId() -> c
    java.lang.String getCreatorId() -> d
    long getCreationTimestamp() -> e
    int getStatus() -> f
    int getTurnStatus() -> g
    int getVariant() -> h
    java.lang.String getLastUpdaterId() -> j
    long getLastUpdatedTimestamp() -> k
    java.lang.String getPendingParticipantId() -> l
    byte[] getData() -> m
    int getVersion() -> n
    java.lang.String getRematchId() -> o
    byte[] getPreviousMatchData() -> p
    int getMatchNumber() -> q
    android.os.Bundle getAutoMatchCriteria() -> r
    int getAvailableAutoMatchSlots() -> s
    boolean isLocallyModified() -> t
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchConfig -> com.google.android.gms.games.multiplayer.turnbased.b:
    android.os.Bundle createAutoMatchCriteria(int,int,long) -> a
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntity -> com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntity:
    com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntityCreator CREATOR -> b
    int kZ -> c
    com.google.android.gms.games.GameEntity sq -> d
    java.lang.String ri -> e
    java.lang.String sS -> f
    long sr -> g
    java.lang.String tb -> h
    long tc -> i
    java.lang.String td -> j
    int te -> k
    int sv -> l
    int tf -> m
    byte[] tg -> n
    java.util.ArrayList su -> o
    java.lang.String th -> p
    byte[] ti -> q
    int tj -> r
    android.os.Bundle sO -> s
    int tk -> t
    boolean tl -> u
    int getVersionCode() -> u
    com.google.android.gms.games.Game getGame() -> b
    java.lang.String getMatchId() -> c
    java.lang.String getCreatorId() -> d
    long getCreationTimestamp() -> e
    java.lang.String getLastUpdaterId() -> j
    long getLastUpdatedTimestamp() -> k
    java.lang.String getPendingParticipantId() -> l
    int getStatus() -> f
    int getTurnStatus() -> g
    int getVariant() -> h
    byte[] getData() -> m
    int getVersion() -> n
    java.lang.String getRematchId() -> o
    byte[] getPreviousMatchData() -> p
    int getMatchNumber() -> q
    android.os.Bundle getAutoMatchCriteria() -> r
    int getAvailableAutoMatchSlots() -> s
    boolean isLocallyModified() -> t
    java.util.ArrayList getParticipants() -> i
    com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch freeze() -> v
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntityCreator -> com.google.android.gms.games.multiplayer.turnbased.c:
    com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntity createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntity[] newArray(int) -> a
    void a(com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.turnbased.a -> com.google.android.gms.games.multiplayer.turnbased.a:
    com.google.android.gms.games.Game sw -> c
    int rO -> d
    com.google.android.gms.games.Game getGame() -> b
    java.lang.String getMatchId() -> c
    java.lang.String getCreatorId() -> d
    long getCreationTimestamp() -> e
    int getStatus() -> f
    int getTurnStatus() -> g
    int getVariant() -> h
    java.util.ArrayList getParticipants() -> i
    java.lang.String getLastUpdaterId() -> j
    long getLastUpdatedTimestamp() -> k
    java.lang.String getPendingParticipantId() -> l
    byte[] getData() -> m
    int getVersion() -> n
    java.lang.String getRematchId() -> o
    byte[] getPreviousMatchData() -> p
    int getMatchNumber() -> q
    android.os.Bundle getAutoMatchCriteria() -> r
    int getAvailableAutoMatchSlots() -> s
    boolean isLocallyModified() -> t
    com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch freeze() -> u
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.internal.ai -> com.google.android.gms.internal.ai:
    com.google.android.gms.internal.aj CREATOR -> a
    int versionCode -> b
    int eZ -> c
    int backgroundColor -> d
    int fa -> e
    int fb -> f
    int fc -> g
    int fd -> h
    int fe -> i
    int ff -> j
    java.lang.String fg -> k
    int fh -> l
    java.lang.String fi -> m
    int fj -> n
    int fk -> o
    java.lang.String fl -> p
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.aj -> com.google.android.gms.internal.a:
    com.google.android.gms.internal.ai c(android.os.Parcel) -> a
    com.google.android.gms.internal.ai[] e(int) -> a
    void a(com.google.android.gms.internal.ai,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.al -> com.google.android.gms.internal.b:
com.google.android.gms.internal.bi -> com.google.android.gms.internal.c:
    com.google.android.gms.internal.bj d(android.os.Parcel) -> a
    com.google.android.gms.internal.bj[] i(int) -> a
    void a(com.google.android.gms.internal.bj,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bj -> com.google.android.gms.internal.bj:
    com.google.android.gms.internal.bi CREATOR -> a
    int versionCode -> b
    java.lang.String gm -> c
    java.lang.String gn -> d
    java.lang.String mimeType -> e
    java.lang.String packageName -> f
    java.lang.String go -> g
    java.lang.String gp -> h
    java.lang.String gq -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.bl -> com.google.android.gms.internal.d:
    com.google.android.gms.internal.bm e(android.os.Parcel) -> a
    com.google.android.gms.internal.bm[] j(int) -> a
    void a(com.google.android.gms.internal.bm,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bm -> com.google.android.gms.internal.bm:
    com.google.android.gms.internal.bl CREATOR -> a
    int versionCode -> b
    com.google.android.gms.internal.bj gF -> c
    com.google.android.gms.internal.q gG -> d
    com.google.android.gms.internal.bn gH -> e
    com.google.android.gms.internal.cv gI -> f
    com.google.android.gms.internal.al gJ -> g
    java.lang.String gK -> h
    boolean gL -> i
    java.lang.String gM -> j
    com.google.android.gms.internal.bq gN -> k
    int orientation -> l
    int gO -> m
    java.lang.String gn -> n
    com.google.android.gms.internal.ct ej -> o
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.os.IBinder aa() -> a
    android.os.IBinder ab() -> b
    android.os.IBinder ac() -> c
    android.os.IBinder ad() -> d
    android.os.IBinder ae() -> e
com.google.android.gms.internal.bn -> com.google.android.gms.internal.e:
com.google.android.gms.internal.bq -> com.google.android.gms.internal.f:
com.google.android.gms.internal.bz -> com.google.android.gms.internal.bz:
    com.google.android.gms.internal.ca CREATOR -> a
    int versionCode -> b
    android.os.Bundle ho -> c
    com.google.android.gms.internal.v hp -> d
    com.google.android.gms.internal.x em -> e
    java.lang.String adUnitId -> f
    android.content.pm.ApplicationInfo applicationInfo -> g
    android.content.pm.PackageInfo hq -> h
    java.lang.String hr -> i
    java.lang.String hs -> j
    java.lang.String ht -> k
    com.google.android.gms.internal.ct ej -> l
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.ca -> com.google.android.gms.internal.g:
    com.google.android.gms.internal.bz f(android.os.Parcel) -> a
    com.google.android.gms.internal.bz[] k(int) -> a
    void a(com.google.android.gms.internal.bz,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.cb -> com.google.android.gms.internal.cb:
    com.google.android.gms.internal.cc CREATOR -> a
    int versionCode -> b
    java.lang.String gK -> c
    java.lang.String hu -> d
    java.util.List fK -> e
    int errorCode -> f
    java.util.List fL -> g
    long hv -> h
    boolean hw -> i
    long hx -> j
    java.util.List hy -> k
    long fO -> l
    int orientation -> m
    java.lang.String hz -> n
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.cc -> com.google.android.gms.internal.h:
    com.google.android.gms.internal.cb g(android.os.Parcel) -> a
    com.google.android.gms.internal.cb[] l(int) -> a
    void a(com.google.android.gms.internal.cb,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.cs -> com.google.android.gms.internal.i:
    void r(java.lang.String) -> a
    void v(java.lang.String) -> b
    boolean n(int) -> a
com.google.android.gms.internal.ct -> com.google.android.gms.internal.ct:
    com.google.android.gms.internal.cu CREATOR -> a
    int versionCode -> b
    java.lang.String iF -> c
    int iG -> d
    int iH -> e
    boolean iI -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.cu -> com.google.android.gms.internal.j:
    com.google.android.gms.internal.ct h(android.os.Parcel) -> a
    com.google.android.gms.internal.ct[] o(int) -> a
    void a(com.google.android.gms.internal.ct,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.cv -> com.google.android.gms.internal.k:
    com.google.android.gms.internal.cv$a iK -> a
    java.lang.Object fx -> b
    com.google.android.gms.internal.h hc -> c
    com.google.android.gms.internal.x fU -> d
    boolean iN -> e
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    void setContext(android.content.Context) -> setContext
com.google.android.gms.internal.cv$a -> com.google.android.gms.internal.l:
    android.app.Activity iP -> a
    android.content.Context iQ -> b
    void setBaseContext(android.content.Context) -> setBaseContext
    void startActivity(android.content.Intent) -> startActivity
com.google.android.gms.internal.d -> com.google.android.gms.internal.m:
    void a(android.view.MotionEvent) -> a
com.google.android.gms.internal.de -> com.google.android.gms.internal.n:
    int lX -> a
    long lY -> b
    int lZ -> c
    int ma -> d
    int mb -> e
    int mc -> f
    int md -> g
    boolean lV -> h
    boolean me -> i
    com.google.android.gms.internal.de$b mf -> j
    android.graphics.drawable.Drawable mg -> k
    android.graphics.drawable.Drawable mh -> l
    boolean mi -> m
    boolean mj -> n
    boolean mk -> o
    int ml -> p
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    int getChangingConfigurations() -> getChangingConfigurations
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getOpacity() -> getOpacity
    boolean canConstantState() -> a
    android.graphics.drawable.Drawable mutate() -> mutate
    android.graphics.drawable.Drawable bq() -> b
    void startTransition(int) -> a
    void draw(android.graphics.Canvas) -> draw
com.google.android.gms.internal.de$1 -> com.google.android.gms.internal.o:
com.google.android.gms.internal.de$a -> com.google.android.gms.internal.p:
    com.google.android.gms.internal.de$a mm -> a
    com.google.android.gms.internal.de$a$a mn -> b
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    com.google.android.gms.internal.de$a br() -> a
com.google.android.gms.internal.de$a$a -> com.google.android.gms.internal.q:
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
com.google.android.gms.internal.de$b -> com.google.android.gms.internal.r:
    int mo -> a
    int mp -> b
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
com.google.android.gms.internal.df -> com.google.android.gms.internal.s:
    android.net.Uri mq -> a
    int mr -> b
    int ms -> c
    void d(android.net.Uri) -> a
    int bs() -> a
    void x(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.google.android.gms.internal.dg -> com.google.android.gms.internal.t:
    void d(java.lang.Object) -> a
    void n(boolean) -> a
    void B(java.lang.String) -> a
    void C(java.lang.String) -> b
com.google.android.gms.internal.dh -> com.google.android.gms.internal.dh:
com.google.android.gms.internal.dh$a -> com.google.android.gms.internal.dh$a:
    com.google.android.gms.internal.dt CREATOR -> a
    int kZ -> b
    java.lang.String jD -> c
    java.util.List mu -> d
    int kP -> e
    java.lang.String kR -> f
    java.lang.String getAccountName() -> a
    int bv() -> b
    java.lang.String bw() -> c
    java.util.List bu() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> e
com.google.android.gms.internal.dj -> com.google.android.gms.internal.dj:
    java.lang.Object mw -> a
    java.lang.ClassLoader mx -> b
    java.lang.Integer my -> c
    boolean mz -> d
    java.lang.ClassLoader bx() -> v
    java.lang.Integer by() -> w
    boolean bz() -> x
    boolean D(java.lang.String) -> b
    boolean a(java.lang.Class) -> a
com.google.android.gms.internal.dn -> com.google.android.gms.internal.u:
    android.net.Uri ne -> a
    android.net.Uri nf -> b
    android.content.Intent E(java.lang.String) -> a
    android.content.Intent bK() -> a
    android.net.Uri F(java.lang.String) -> d
    android.content.Intent G(java.lang.String) -> b
    android.content.Intent H(java.lang.String) -> c
com.google.android.gms.internal.ds -> com.google.android.gms.internal.w:
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int hashCode(java.lang.Object[]) -> a
    com.google.android.gms.internal.ds$a e(java.lang.Object) -> a
com.google.android.gms.internal.ds$1 -> com.google.android.gms.internal.y:
com.google.android.gms.internal.ds$a -> com.google.android.gms.internal.z:
    java.util.List nh -> a
    java.lang.Object ni -> b
    com.google.android.gms.internal.ds$a a(java.lang.String,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.android.gms.internal.dt -> com.google.android.gms.internal.aa:
    com.google.android.gms.internal.dh$a i(android.os.Parcel) -> a
    com.google.android.gms.internal.dh$a[] z(int) -> a
    void a(com.google.android.gms.internal.dh$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.du -> com.google.android.gms.internal.ab:
    java.lang.Object f(java.lang.Object) -> a
    java.lang.String I(java.lang.String) -> a
    java.lang.Object c(java.lang.Object,java.lang.Object) -> a
    void n(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void b(boolean,java.lang.Object) -> b
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
    void p(boolean) -> b
com.google.android.gms.internal.dy -> com.google.android.gms.internal.ac:
    java.util.LinkedHashMap nk -> a
    int size -> b
    int nl -> c
    int nm -> d
    int no -> e
    int np -> f
    int nq -> g
    java.lang.Object put(java.lang.Object,java.lang.Object) -> b
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    int d(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> a
    void evictAll() -> a
    java.lang.String toString() -> toString
com.google.android.gms.internal.dz -> com.google.android.gms.internal.dz:
    com.google.android.gms.internal.ea CREATOR -> a
    int kZ -> b
    com.google.android.gms.internal.eb nr -> c
    int getVersionCode() -> a
    com.google.android.gms.internal.eb bL() -> b
    com.google.android.gms.internal.dz a(com.google.android.gms.internal.ee$b) -> a
    com.google.android.gms.internal.ee$b bM() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.ea -> com.google.android.gms.internal.ad:
    com.google.android.gms.internal.dz m(android.os.Parcel) -> a
    com.google.android.gms.internal.dz[] B(int) -> a
    void a(com.google.android.gms.internal.dz,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.eb -> com.google.android.gms.internal.eb:
    com.google.android.gms.internal.ec CREATOR -> a
    int kZ -> b
    java.util.HashMap ns -> c
    java.util.HashMap nt -> d
    java.util.ArrayList nu -> e
    void a(java.util.ArrayList) -> a
    int getVersionCode() -> a
    java.util.ArrayList bN() -> b
    com.google.android.gms.internal.eb b(java.lang.String,int) -> a
    int bO() -> c
    int bP() -> d
    java.lang.String a(java.lang.Integer) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object g(java.lang.Object) -> a
com.google.android.gms.internal.eb$a -> com.google.android.gms.internal.eb$a:
    com.google.android.gms.internal.ed CREATOR -> a
    int versionCode -> b
    java.lang.String nv -> c
    int nw -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.ec -> com.google.android.gms.internal.ae:
    com.google.android.gms.internal.eb n(android.os.Parcel) -> a
    com.google.android.gms.internal.eb[] C(int) -> a
    void a(com.google.android.gms.internal.eb,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ed -> com.google.android.gms.internal.af:
    com.google.android.gms.internal.eb$a o(android.os.Parcel) -> a
    com.google.android.gms.internal.eb$a[] D(int) -> a
    void a(com.google.android.gms.internal.eb$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ee -> com.google.android.gms.internal.ee:
    java.util.HashMap bQ() -> b
    java.lang.Object J(java.lang.String) -> a
    boolean a(com.google.android.gms.internal.ee$a) -> a
    boolean K(java.lang.String) -> b
    boolean L(java.lang.String) -> c
    boolean M(java.lang.String) -> d
    java.lang.Object a(com.google.android.gms.internal.ee$a,java.lang.Object) -> a
    java.util.HashMap bR() -> c
    java.util.HashMap bS() -> d
    java.lang.String toString() -> toString
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    void a(java.lang.StringBuilder,com.google.android.gms.internal.ee$a,java.lang.Object) -> a
    void a(java.lang.StringBuilder,com.google.android.gms.internal.ee$a,java.util.ArrayList) -> a
com.google.android.gms.internal.ee$a -> com.google.android.gms.internal.ee$a:
    int kZ -> j
    int nx -> a
    boolean ny -> b
    int nz -> c
    boolean nA -> d
    java.lang.String nB -> e
    int nC -> f
    java.lang.Class nD -> g
    java.lang.String nE -> h
    com.google.android.gms.internal.eh nF -> k
    com.google.android.gms.internal.ee$b nG -> l
    com.google.android.gms.internal.ef CREATOR -> i
    int getVersionCode() -> a
    int bO() -> b
    boolean bU() -> c
    int bP() -> d
    boolean bV() -> e
    java.lang.String bW() -> f
    int bX() -> g
    java.lang.Class bY() -> h
    java.lang.String bZ() -> i
    boolean ca() -> j
    void a(com.google.android.gms.internal.eh) -> a
    com.google.android.gms.internal.dz cb() -> k
    java.util.HashMap cc() -> l
    java.lang.Object g(java.lang.Object) -> a
    com.google.android.gms.internal.ee$a c(java.lang.String,int) -> a
    com.google.android.gms.internal.ee$a d(java.lang.String,int) -> b
    com.google.android.gms.internal.ee$a e(java.lang.String,int) -> c
    com.google.android.gms.internal.ee$a f(java.lang.String,int) -> d
    com.google.android.gms.internal.ee$a g(java.lang.String,int) -> e
    com.google.android.gms.internal.ee$a a(java.lang.String,int,java.lang.Class) -> a
    com.google.android.gms.internal.ee$a b(java.lang.String,int,java.lang.Class) -> b
    com.google.android.gms.internal.ee$a a(java.lang.String,int,com.google.android.gms.internal.ee$b,boolean) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    com.google.android.gms.internal.ee$b c(com.google.android.gms.internal.ee$a) -> a
com.google.android.gms.internal.ee$b -> com.google.android.gms.internal.ag:
    int bO() -> c
    int bP() -> d
    java.lang.Object g(java.lang.Object) -> a
com.google.android.gms.internal.ef -> com.google.android.gms.internal.ah:
    com.google.android.gms.internal.ee$a p(android.os.Parcel) -> a
    com.google.android.gms.internal.ee$a[] E(int) -> a
    void a(com.google.android.gms.internal.ee$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.eg -> com.google.android.gms.internal.aj:
    com.google.android.gms.internal.eh$b q(android.os.Parcel) -> a
    com.google.android.gms.internal.eh$b[] F(int) -> a
    void a(com.google.android.gms.internal.eh$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.eh -> com.google.android.gms.internal.eh:
    com.google.android.gms.internal.ei CREATOR -> a
    int kZ -> b
    java.util.HashMap nH -> c
    java.util.ArrayList nI -> d
    java.lang.String nJ -> e
    void cd() -> a
    java.util.HashMap b(java.util.ArrayList) -> a
    int getVersionCode() -> b
    java.util.ArrayList cf() -> c
    java.util.HashMap N(java.lang.String) -> a
    java.lang.String cg() -> d
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.eh$a -> com.google.android.gms.internal.eh$a:
    com.google.android.gms.internal.ej CREATOR -> a
    int versionCode -> b
    java.lang.String className -> c
    java.util.ArrayList nK -> d
    java.util.ArrayList b(java.util.HashMap) -> a
    java.util.HashMap ch() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.eh$b -> com.google.android.gms.internal.eh$b:
    com.google.android.gms.internal.eg CREATOR -> a
    int versionCode -> b
    java.lang.String nL -> c
    com.google.android.gms.internal.ee$a nM -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.ei -> com.google.android.gms.internal.ak:
    com.google.android.gms.internal.eh r(android.os.Parcel) -> a
    com.google.android.gms.internal.eh[] G(int) -> a
    void a(com.google.android.gms.internal.eh,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ej -> com.google.android.gms.internal.al:
    com.google.android.gms.internal.eh$a s(android.os.Parcel) -> a
    com.google.android.gms.internal.eh$a[] H(int) -> a
    void a(com.google.android.gms.internal.eh$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ek -> com.google.android.gms.internal.ek:
    int kZ -> b
    android.os.Parcel nN -> c
    int nO -> d
    com.google.android.gms.internal.eh nF -> e
    java.lang.String mClassName -> f
    int nP -> g
    int nQ -> h
    com.google.android.gms.internal.el CREATOR -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> a
    android.os.Parcel ci() -> e
    com.google.android.gms.internal.eh cj() -> f
    java.util.HashMap bQ() -> b
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    java.lang.String toString() -> toString
    void a(java.lang.StringBuilder,java.util.HashMap,android.os.Parcel) -> a
    java.util.HashMap c(java.util.HashMap) -> a
    void a(java.lang.StringBuilder,java.lang.String,com.google.android.gms.internal.ee$a,android.os.Parcel,int) -> a
    void a(java.lang.StringBuilder,com.google.android.gms.internal.ee$a,android.os.Parcel,int) -> a
    void b(java.lang.StringBuilder,com.google.android.gms.internal.ee$a,android.os.Parcel,int) -> b
    void b(java.lang.StringBuilder,com.google.android.gms.internal.ee$a,java.lang.Object) -> a
    void b(java.lang.StringBuilder,com.google.android.gms.internal.ee$a,java.util.ArrayList) -> a
    void a(java.lang.StringBuilder,int,java.lang.Object) -> a
    java.util.HashMap c(android.os.Bundle) -> a
com.google.android.gms.internal.el -> com.google.android.gms.internal.am:
    com.google.android.gms.internal.ek t(android.os.Parcel) -> a
    com.google.android.gms.internal.ek[] I(int) -> a
    void a(com.google.android.gms.internal.ek,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.em -> com.google.android.gms.internal.an:
    void a(java.lang.StringBuilder,java.lang.Object[]) -> a
    void a(java.lang.StringBuilder,int[]) -> a
    void a(java.lang.StringBuilder,long[]) -> a
    void a(java.lang.StringBuilder,float[]) -> a
    void a(java.lang.StringBuilder,double[]) -> a
    void a(java.lang.StringBuilder,boolean[]) -> a
    void a(java.lang.StringBuilder,java.lang.String[]) -> a
com.google.android.gms.internal.en -> com.google.android.gms.internal.ao:
    java.lang.String b(byte[]) -> a
    java.lang.String c(byte[]) -> b
com.google.android.gms.internal.ep -> com.google.android.gms.internal.ap:
    boolean J(int) -> a
com.google.android.gms.internal.eq -> com.google.android.gms.internal.aq:
    java.util.regex.Pattern nR -> a
    java.util.regex.Pattern nS -> b
    java.lang.String O(java.lang.String) -> a
com.google.android.gms.internal.er -> com.google.android.gms.internal.ar:
    void a(java.lang.StringBuilder,java.util.HashMap) -> a
com.google.android.gms.internal.es -> com.google.android.gms.internal.as:
    boolean ck() -> a
    boolean cm() -> b
    boolean cp() -> c
    boolean K(int) -> a
com.google.android.gms.internal.et -> com.google.android.gms.internal.at:
    com.google.android.gms.drive.metadata.MetadataField oU -> a
    com.google.android.gms.drive.metadata.MetadataField TITLE -> b
    com.google.android.gms.drive.metadata.MetadataField MIME_TYPE -> c
    com.google.android.gms.drive.metadata.MetadataField STARRED -> d
    com.google.android.gms.drive.metadata.MetadataField TRASHED -> e
    com.google.android.gms.drive.metadata.MetadataField oV -> f
    com.google.android.gms.drive.metadata.MetadataField oW -> g
    com.google.android.gms.drive.metadata.CollectionMetadataField PARENTS -> h
com.google.android.gms.internal.et$1 -> com.google.android.gms.internal.au:
com.google.android.gms.internal.eu -> com.google.android.gms.internal.av:
    com.google.android.gms.drive.metadata.OrderedMetadataField oX -> a
    com.google.android.gms.drive.metadata.OrderedMetadataField oY -> b
    com.google.android.gms.drive.metadata.OrderedMetadataField oZ -> c
    com.google.android.gms.drive.metadata.OrderedMetadataField pa -> d
com.google.android.gms.internal.ev -> com.google.android.gms.internal.aw:
    com.google.android.gms.internal.ev pb -> a
com.google.android.gms.internal.ey -> com.google.android.gms.internal.ey:
    boolean c(java.lang.Integer) -> b
com.google.android.gms.internal.fg -> com.google.android.gms.internal.ax:
    boolean isValid(int) -> a
com.google.android.gms.internal.fn -> com.google.android.gms.internal.fn:
    int kZ -> b
    java.lang.String ty -> c
    long ub -> d
    short tB -> e
    double tC -> f
    double tD -> g
    float tE -> h
    int tz -> i
    int tF -> j
    int tG -> k
    com.google.android.gms.internal.fo CREATOR -> a
    int getVersionCode() -> a
    short ds() -> b
    double getLatitude() -> c
    double getLongitude() -> d
    float dt() -> e
    java.lang.String getRequestId() -> f
    long getExpirationTime() -> g
    int du() -> h
    int getNotificationResponsiveness() -> i
    int dv() -> j
    void aa(java.lang.String) -> a
    void b(float) -> a
    void a(double,double) -> a
    int aE(int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String aF(int) -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.internal.fo -> com.google.android.gms.internal.ay:
    com.google.android.gms.internal.fn aa(android.os.Parcel) -> a
    com.google.android.gms.internal.fn[] aG(int) -> a
    void a(com.google.android.gms.internal.fn,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fq -> com.google.android.gms.internal.az:
com.google.android.gms.internal.fr -> com.google.android.gms.internal.ba:
com.google.android.gms.internal.fs -> com.google.android.gms.internal.fs:
    com.google.android.gms.internal.ft CREATOR -> a
    int kZ -> b
    int uc -> d
    java.util.List ud -> c
    java.lang.String ue -> e
    java.lang.String uf -> f
    boolean ug -> g
    java.util.Set uh -> h
    int dw() -> a
    java.lang.String dx() -> b
    java.lang.String dy() -> c
    boolean dz() -> d
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.ft -> com.google.android.gms.internal.bb:
    com.google.android.gms.internal.fs ab(android.os.Parcel) -> a
    com.google.android.gms.internal.fs[] aH(int) -> a
    void a(com.google.android.gms.internal.fs,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fu -> com.google.android.gms.internal.fu:
    com.google.android.gms.internal.fv CREATOR -> a
    int kZ -> b
    com.google.android.gms.location.LocationRequest ui -> c
    com.google.android.gms.internal.fs uj -> d
    com.google.android.gms.location.LocationRequest dA() -> a
    com.google.android.gms.internal.fs dB() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.fv -> com.google.android.gms.internal.bc:
    com.google.android.gms.internal.fu ac(android.os.Parcel) -> a
    com.google.android.gms.internal.fu[] aI(int) -> a
    void a(com.google.android.gms.internal.fu,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fw -> com.google.android.gms.internal.fw:
    com.google.android.gms.internal.fw uk -> a
    com.google.android.gms.internal.fw ul -> b
    com.google.android.gms.internal.fw um -> c
    com.google.android.gms.internal.fw un -> d
    com.google.android.gms.internal.fw uo -> e
    com.google.android.gms.internal.fw up -> f
    com.google.android.gms.internal.fw uq -> g
    com.google.android.gms.internal.fw ur -> h
    com.google.android.gms.internal.fw us -> i
    com.google.android.gms.internal.fw ut -> j
    com.google.android.gms.internal.fw uu -> k
    com.google.android.gms.internal.fw uv -> l
    com.google.android.gms.internal.fw uw -> m
    com.google.android.gms.internal.fw ux -> n
    com.google.android.gms.internal.fw uy -> o
    com.google.android.gms.internal.fw uz -> p
    com.google.android.gms.internal.fw uA -> q
    com.google.android.gms.internal.fw uB -> r
    com.google.android.gms.internal.fw uC -> s
    com.google.android.gms.internal.fw uD -> t
    com.google.android.gms.internal.fw uE -> u
    com.google.android.gms.internal.fw uF -> v
    com.google.android.gms.internal.fw uG -> w
    com.google.android.gms.internal.fw uH -> x
    com.google.android.gms.internal.fw uI -> y
    com.google.android.gms.internal.fw uJ -> z
    com.google.android.gms.internal.fw uK -> A
    com.google.android.gms.internal.fw uL -> B
    com.google.android.gms.internal.fw uM -> C
    com.google.android.gms.internal.fw uN -> D
    com.google.android.gms.internal.fw uO -> E
    com.google.android.gms.internal.fw uP -> F
    com.google.android.gms.internal.fw uQ -> G
    com.google.android.gms.internal.fw uR -> H
    com.google.android.gms.internal.fw uS -> I
    com.google.android.gms.internal.fw uT -> J
    com.google.android.gms.internal.fw uU -> K
    com.google.android.gms.internal.fw uV -> L
    com.google.android.gms.internal.fw uW -> M
    com.google.android.gms.internal.fw uX -> N
    com.google.android.gms.internal.fw uY -> O
    com.google.android.gms.internal.fw uZ -> P
    com.google.android.gms.internal.fw va -> Q
    com.google.android.gms.internal.fw vb -> R
    com.google.android.gms.internal.fw vc -> S
    com.google.android.gms.internal.fw vd -> T
    com.google.android.gms.internal.fw ve -> U
    com.google.android.gms.internal.fw vf -> V
    com.google.android.gms.internal.fw vg -> W
    com.google.android.gms.internal.fw vh -> X
    com.google.android.gms.internal.fw vi -> Y
    com.google.android.gms.internal.fw vj -> Z
    com.google.android.gms.internal.fw vk -> aa
    com.google.android.gms.internal.fw vl -> ab
    com.google.android.gms.internal.fw vm -> ac
    com.google.android.gms.internal.fw vn -> ad
    com.google.android.gms.internal.fw vo -> ae
    com.google.android.gms.internal.fw vp -> af
    com.google.android.gms.internal.fw vq -> ag
    com.google.android.gms.internal.fw vr -> ah
    com.google.android.gms.internal.fw vs -> ai
    com.google.android.gms.internal.fw vt -> aj
    com.google.android.gms.internal.fw vu -> ak
    com.google.android.gms.internal.fw vv -> al
    com.google.android.gms.internal.fw vw -> am
    com.google.android.gms.internal.fw vx -> an
    com.google.android.gms.internal.fw vy -> ao
    com.google.android.gms.internal.fw vz -> ap
    com.google.android.gms.internal.fw vA -> aq
    com.google.android.gms.internal.fw vB -> ar
    com.google.android.gms.internal.fw vC -> as
    com.google.android.gms.internal.fw vD -> at
    com.google.android.gms.internal.fw vE -> au
    com.google.android.gms.internal.fw vF -> av
    com.google.android.gms.internal.fw vG -> aw
    com.google.android.gms.internal.fw vH -> ax
    com.google.android.gms.internal.fw vI -> ay
    com.google.android.gms.internal.fw vJ -> az
    com.google.android.gms.internal.fw vK -> aA
    com.google.android.gms.internal.fw vL -> aB
    com.google.android.gms.internal.fw vM -> aC
    com.google.android.gms.internal.fw vN -> aD
    com.google.android.gms.internal.fw vO -> aE
    com.google.android.gms.internal.fw vP -> aF
    com.google.android.gms.internal.fw vQ -> aG
    com.google.android.gms.internal.fw vR -> aH
    com.google.android.gms.internal.fw vS -> aI
    com.google.android.gms.internal.fw vT -> aJ
    com.google.android.gms.internal.fw vU -> aK
    com.google.android.gms.internal.fw vV -> aL
    com.google.android.gms.internal.fw vW -> aM
    com.google.android.gms.internal.fw vX -> aN
    com.google.android.gms.internal.fw vY -> aO
    com.google.android.gms.internal.fw vZ -> aP
    com.google.android.gms.internal.fw wa -> aQ
    com.google.android.gms.internal.fw wb -> aR
    com.google.android.gms.internal.fw wc -> aS
    com.google.android.gms.internal.fw wd -> aT
    com.google.android.gms.internal.fw we -> aU
    com.google.android.gms.internal.fw wf -> aV
    com.google.android.gms.internal.fw wg -> aW
    com.google.android.gms.internal.fw wh -> aX
    com.google.android.gms.internal.fw wi -> aY
    com.google.android.gms.internal.fw wj -> aZ
    com.google.android.gms.internal.fw wk -> ba
    com.google.android.gms.internal.fw wl -> bb
    com.google.android.gms.internal.fw wm -> bc
    com.google.android.gms.internal.fw wn -> bd
    com.google.android.gms.internal.fw wo -> be
    com.google.android.gms.internal.fw wp -> bf
    com.google.android.gms.internal.fw wq -> bg
    com.google.android.gms.internal.fw wr -> bh
    com.google.android.gms.internal.fw ws -> bi
    com.google.android.gms.internal.fw wt -> bj
    com.google.android.gms.internal.fw wu -> bk
    com.google.android.gms.internal.fw wv -> bl
    com.google.android.gms.internal.fw ww -> bm
    com.google.android.gms.internal.fw wx -> bn
    com.google.android.gms.internal.fw wy -> bo
    com.google.android.gms.internal.fw wz -> bp
    com.google.android.gms.internal.fw wA -> bq
    com.google.android.gms.internal.fw wB -> br
    com.google.android.gms.internal.fw wC -> bs
    com.google.android.gms.internal.fw wD -> bt
    com.google.android.gms.internal.fw wE -> bu
    com.google.android.gms.internal.fx CREATOR -> bv
    int kZ -> bw
    java.lang.String wF -> bx
    com.google.android.gms.internal.fw ab(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.fx -> com.google.android.gms.internal.bd:
    com.google.android.gms.internal.fw ad(android.os.Parcel) -> a
    com.google.android.gms.internal.fw[] aJ(int) -> a
    void a(com.google.android.gms.internal.fw,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fz -> com.google.android.gms.internal.fz:
    com.google.android.gms.internal.ga CREATOR -> a
    com.google.android.gms.internal.fz wG -> c
    int kZ -> b
    com.google.android.gms.internal.gb[] wH -> d
    float[] wI -> e
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.google.android.gms.internal.gb[] dC() -> a
    float[] dD() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.ga -> com.google.android.gms.internal.be:
    com.google.android.gms.internal.fz ae(android.os.Parcel) -> a
    com.google.android.gms.internal.fz[] aK(int) -> a
    void a(com.google.android.gms.internal.fz,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.gb -> com.google.android.gms.internal.gb:
    com.google.android.gms.internal.gc CREATOR -> a
    int kZ -> b
    java.lang.String wJ -> c
    android.os.Bundle wK -> d
    com.google.android.gms.internal.gd wL -> e
    com.google.android.gms.maps.model.LatLng wM -> f
    float wN -> g
    com.google.android.gms.maps.model.LatLngBounds wO -> h
    java.lang.String wP -> i
    android.net.Uri wQ -> j
    boolean wR -> k
    float wS -> l
    int wT -> m
    long wU -> n
    java.util.List wV -> o
    java.util.Map wW -> p
    java.util.TimeZone wX -> q
    java.util.Locale wY -> r
    com.google.android.gms.internal.gf wZ -> s
    java.lang.String getId() -> a
    java.util.List dE() -> b
    com.google.android.gms.maps.model.LatLng dF() -> c
    float dG() -> d
    com.google.android.gms.maps.model.LatLngBounds dH() -> e
    android.net.Uri dI() -> f
    boolean dJ() -> g
    float getRating() -> h
    int dK() -> i
    long dL() -> j
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    android.os.Bundle dM() -> k
    com.google.android.gms.internal.gd dN() -> l
    java.lang.String dO() -> m
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void ac(java.lang.String) -> a
com.google.android.gms.internal.gc -> com.google.android.gms.internal.bf:
    com.google.android.gms.internal.gb af(android.os.Parcel) -> a
    com.google.android.gms.internal.gb[] aL(int) -> a
    void a(com.google.android.gms.internal.gb,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.gd -> com.google.android.gms.internal.gd:
    com.google.android.gms.internal.ge CREATOR -> a
    int versionCode -> b
    java.lang.String name -> c
    java.lang.String xa -> d
    java.lang.String xb -> e
    java.lang.String xc -> f
    java.util.List xd -> g
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.ge -> com.google.android.gms.internal.bg:
    com.google.android.gms.internal.gd ag(android.os.Parcel) -> a
    com.google.android.gms.internal.gd[] aM(int) -> a
    void a(com.google.android.gms.internal.gd,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.gf -> com.google.android.gms.internal.bh:
    int xe -> a
    int xf -> b
    java.util.concurrent.BlockingQueue xg -> c
    void b(java.lang.String,java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.gf$a -> com.google.android.gms.internal.bi:
    java.lang.String xh -> a
    java.lang.String mTag -> b
    com.google.android.gms.internal.gf xi -> c
com.google.android.gms.internal.gg -> com.google.android.gms.internal.gg:
    com.google.android.gms.internal.gh CREATOR -> a
    int versionCode -> b
    java.lang.String xj -> c
    java.lang.String xk -> d
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.gh -> com.google.android.gms.internal.bk:
    com.google.android.gms.internal.gg ah(android.os.Parcel) -> a
    com.google.android.gms.internal.gg[] aN(int) -> a
    void a(com.google.android.gms.internal.gg,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.gs -> com.google.android.gms.internal.gs:
    com.google.android.gms.internal.gu CREATOR -> a
    int kZ -> b
    java.lang.String jD -> c
    java.lang.String[] zG -> d
    java.lang.String[] zH -> e
    java.lang.String[] zI -> f
    java.lang.String zJ -> g
    java.lang.String zK -> h
    java.lang.String zL -> i
    java.lang.String zM -> j
    int getVersionCode() -> a
    java.lang.String getAccountName() -> b
    java.lang.String[] ew() -> c
    java.lang.String[] ex() -> d
    java.lang.String[] ey() -> e
    java.lang.String ez() -> f
    java.lang.String eA() -> g
    java.lang.String eB() -> h
    java.lang.String eC() -> i
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.gu -> com.google.android.gms.internal.bl:
    com.google.android.gms.internal.gs ai(android.os.Parcel) -> a
    com.google.android.gms.internal.gs[] aQ(int) -> a
    void a(com.google.android.gms.internal.gs,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.gv -> com.google.android.gms.internal.gv:
    com.google.android.gms.internal.gw CREATOR -> a
    java.util.HashMap zP -> b
    java.util.Set zQ -> c
    int kZ -> d
    com.google.android.gms.internal.gv zR -> e
    java.util.List zS -> f
    com.google.android.gms.internal.gv zT -> g
    java.lang.String zU -> h
    java.lang.String zV -> i
    java.lang.String zW -> j
    java.util.List zX -> k
    int zY -> l
    java.util.List zZ -> m
    com.google.android.gms.internal.gv Aa -> n
    java.util.List Ab -> o
    java.lang.String Ac -> p
    java.lang.String Ad -> q
    com.google.android.gms.internal.gv Ae -> r
    java.lang.String Af -> s
    java.lang.String Ag -> t
    java.lang.String Ah -> u
    java.util.List Ai -> v
    java.lang.String Aj -> w
    java.lang.String Ak -> x
    java.lang.String Al -> y
    java.lang.String pZ -> z
    java.lang.String Am -> A
    java.lang.String An -> B
    java.lang.String Ao -> C
    java.lang.String Ap -> D
    java.lang.String Aq -> E
    com.google.android.gms.internal.gv Ar -> F
    java.lang.String As -> G
    java.lang.String At -> H
    java.lang.String wJ -> I
    java.lang.String Au -> J
    com.google.android.gms.internal.gv Av -> K
    double tC -> L
    com.google.android.gms.internal.gv Aw -> M
    double tD -> N
    java.lang.String mName -> O
    com.google.android.gms.internal.gv Ax -> P
    java.util.List Ay -> Q
    java.lang.String Az -> R
    java.lang.String AA -> S
    java.lang.String AB -> T
    java.lang.String AC -> U
    com.google.android.gms.internal.gv AD -> V
    java.lang.String AE -> W
    java.lang.String AF -> X
    java.lang.String AG -> Y
    com.google.android.gms.internal.gv AH -> Z
    java.lang.String AI -> aa
    java.lang.String AJ -> ab
    java.lang.String wF -> ac
    java.lang.String iD -> ad
    java.lang.String AK -> ae
    java.lang.String AL -> af
    java.util.HashMap bQ() -> b
    java.util.Set eF() -> e
    int getVersionCode() -> f
    com.google.android.gms.internal.gv eG() -> g
    java.util.List getAdditionalName() -> h
    com.google.android.gms.internal.gv eH() -> i
    java.lang.String getAddressCountry() -> j
    java.lang.String getAddressLocality() -> k
    java.lang.String getAddressRegion() -> l
    java.util.List eI() -> m
    int getAttendeeCount() -> n
    java.util.List eJ() -> o
    com.google.android.gms.internal.gv eK() -> p
    java.util.List eL() -> q
    java.lang.String getBestRating() -> r
    java.lang.String getBirthDate() -> s
    com.google.android.gms.internal.gv eM() -> t
    java.lang.String getCaption() -> u
    java.lang.String getContentSize() -> v
    java.lang.String getContentUrl() -> w
    java.util.List eN() -> x
    java.lang.String getDateCreated() -> y
    java.lang.String getDateModified() -> z
    java.lang.String getDatePublished() -> A
    java.lang.String getDescription() -> B
    java.lang.String getDuration() -> C
    java.lang.String getEmbedUrl() -> D
    java.lang.String getEndDate() -> E
    java.lang.String getFamilyName() -> F
    java.lang.String getGender() -> G
    com.google.android.gms.internal.gv eO() -> H
    java.lang.String getGivenName() -> I
    java.lang.String getHeight() -> J
    java.lang.String getId() -> K
    java.lang.String getImage() -> L
    com.google.android.gms.internal.gv eP() -> M
    double getLatitude() -> N
    com.google.android.gms.internal.gv eQ() -> O
    double getLongitude() -> P
    java.lang.String getName() -> Q
    com.google.android.gms.internal.gv eR() -> R
    java.util.List eS() -> S
    java.lang.String getPlayerType() -> T
    java.lang.String getPostOfficeBoxNumber() -> U
    java.lang.String getPostalCode() -> V
    java.lang.String getRatingValue() -> W
    com.google.android.gms.internal.gv eT() -> X
    java.lang.String getStartDate() -> Y
    java.lang.String getStreetAddress() -> Z
    java.lang.String getText() -> aa
    com.google.android.gms.internal.gv eU() -> ab
    java.lang.String getThumbnailUrl() -> ac
    java.lang.String getTickerSymbol() -> ad
    java.lang.String getType() -> ae
    java.lang.String getUrl() -> af
    java.lang.String getWidth() -> ag
    java.lang.String getWorstRating() -> ah
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.ee$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    com.google.android.gms.internal.gv eV() -> ai
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.gw -> com.google.android.gms.internal.bn:
    com.google.android.gms.internal.gv aj(android.os.Parcel) -> a
    com.google.android.gms.internal.gv[] aR(int) -> a
    void a(com.google.android.gms.internal.gv,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.gx -> com.google.android.gms.internal.gx:
    com.google.android.gms.internal.gy CREATOR -> a
    java.util.HashMap zP -> b
    java.util.Set zQ -> c
    int kZ -> d
    java.lang.String wJ -> e
    com.google.android.gms.internal.gv AM -> f
    java.lang.String AE -> g
    com.google.android.gms.internal.gv AN -> h
    java.lang.String wF -> i
    java.util.HashMap bQ() -> b
    java.util.Set eF() -> e
    int getVersionCode() -> f
    java.lang.String getId() -> g
    com.google.android.gms.internal.gv eW() -> h
    java.lang.String getStartDate() -> i
    com.google.android.gms.internal.gv eX() -> j
    java.lang.String getType() -> k
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.ee$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    com.google.android.gms.internal.gx eY() -> l
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.gy -> com.google.android.gms.internal.bo:
    com.google.android.gms.internal.gx ak(android.os.Parcel) -> a
    com.google.android.gms.internal.gx[] aS(int) -> a
    void a(com.google.android.gms.internal.gx,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.h -> com.google.android.gms.internal.bp:
    com.google.android.gms.internal.d dN -> a
    void a(android.view.MotionEvent) -> a
com.google.android.gms.internal.ha -> com.google.android.gms.internal.ha:
    com.google.android.gms.internal.hb CREATOR -> a
    java.util.HashMap zP -> b
    java.util.Set zQ -> c
    int kZ -> d
    java.lang.String AP -> e
    com.google.android.gms.internal.ha$a AQ -> f
    java.lang.String AR -> g
    java.lang.String AS -> h
    int AT -> i
    com.google.android.gms.internal.ha$b AU -> j
    java.lang.String AV -> k
    java.lang.String pW -> l
    int eL -> m
    java.lang.String wJ -> n
    com.google.android.gms.internal.ha$c AW -> o
    boolean AX -> p
    java.lang.String AY -> q
    com.google.android.gms.internal.ha$d AZ -> r
    java.lang.String Ba -> s
    int Bb -> t
    java.util.List Bc -> u
    java.util.List Bd -> v
    int Be -> w
    int Bf -> x
    java.lang.String Bg -> y
    java.lang.String iD -> z
    java.util.List Bh -> A
    boolean Bi -> B
    java.util.HashMap bQ() -> b
    java.util.Set eF() -> e
    int getVersionCode() -> f
    java.lang.String getAboutMe() -> g
    com.google.android.gms.internal.ha$a fa() -> h
    java.lang.String getBirthday() -> i
    java.lang.String getBraggingRights() -> j
    int getCircledByCount() -> k
    com.google.android.gms.internal.ha$b fb() -> l
    java.lang.String getCurrentLocation() -> m
    java.lang.String getDisplayName() -> n
    int getGender() -> o
    java.lang.String getId() -> p
    com.google.android.gms.internal.ha$c fc() -> q
    boolean isPlusUser() -> r
    java.lang.String getLanguage() -> s
    com.google.android.gms.internal.ha$d fd() -> t
    java.lang.String getNickname() -> u
    int getObjectType() -> v
    java.util.List fe() -> w
    java.util.List ff() -> x
    int getPlusOneCount() -> y
    int getRelationshipStatus() -> z
    java.lang.String getTagline() -> A
    java.lang.String getUrl() -> B
    java.util.List fg() -> C
    boolean isVerified() -> D
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.ee$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    com.google.android.gms.internal.ha fh() -> E
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.ha$a -> com.google.android.gms.internal.ha$a:
    com.google.android.gms.internal.hc CREATOR -> a
    java.util.HashMap zP -> b
    java.util.Set zQ -> c
    int kZ -> d
    int Bj -> e
    int Bk -> f
    java.util.HashMap bQ() -> b
    java.util.Set eF() -> e
    int getVersionCode() -> f
    int getMax() -> g
    int getMin() -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.ee$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    com.google.android.gms.internal.ha$a fi() -> i
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.ha$b -> com.google.android.gms.internal.ha$b:
    com.google.android.gms.internal.hd CREATOR -> a
    java.util.HashMap zP -> b
    java.util.Set zQ -> c
    int kZ -> d
    com.google.android.gms.internal.ha$b$a Bl -> e
    com.google.android.gms.internal.ha$b$b Bm -> f
    int Bn -> g
    java.util.HashMap bQ() -> b
    java.util.Set eF() -> e
    int getVersionCode() -> f
    com.google.android.gms.internal.ha$b$a fj() -> g
    com.google.android.gms.internal.ha$b$b fk() -> h
    int getLayout() -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.ee$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    com.google.android.gms.internal.ha$b fl() -> j
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.ha$b$a -> com.google.android.gms.internal.ha$b$a:
    com.google.android.gms.internal.he CREATOR -> a
    java.util.HashMap zP -> b
    java.util.Set zQ -> c
    int kZ -> d
    int Bo -> e
    int Bp -> f
    java.util.HashMap bQ() -> b
    java.util.Set eF() -> e
    int getVersionCode() -> f
    int getLeftImageOffset() -> g
    int getTopImageOffset() -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.ee$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    com.google.android.gms.internal.ha$b$a fm() -> i
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.ha$b$b -> com.google.android.gms.internal.ha$b$b:
    com.google.android.gms.internal.hf CREATOR -> a
    java.util.HashMap zP -> b
    java.util.Set zQ -> c
    int kZ -> d
    int v -> e
    java.lang.String iD -> f
    int w -> g
    java.util.HashMap bQ() -> b
    java.util.Set eF() -> e
    int getVersionCode() -> f
    int getHeight() -> g
    java.lang.String getUrl() -> h
    int getWidth() -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.ee$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    com.google.android.gms.internal.ha$b$b fn() -> j
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.ha$c -> com.google.android.gms.internal.ha$c:
    com.google.android.gms.internal.hg CREATOR -> a
    java.util.HashMap zP -> b
    java.util.Set zQ -> c
    int kZ -> d
    java.lang.String iD -> e
    java.util.HashMap bQ() -> b
    java.util.Set eF() -> e
    int getVersionCode() -> f
    java.lang.String getUrl() -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.ee$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    com.google.android.gms.internal.ha$c fo() -> h
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.ha$d -> com.google.android.gms.internal.ha$d:
    com.google.android.gms.internal.hh CREATOR -> a
    java.util.HashMap zP -> b
    java.util.Set zQ -> c
    int kZ -> d
    java.lang.String Ap -> e
    java.lang.String Bq -> f
    java.lang.String As -> g
    java.lang.String Br -> h
    java.lang.String Bs -> i
    java.lang.String Bt -> j
    java.util.HashMap bQ() -> b
    java.util.Set eF() -> e
    int getVersionCode() -> f
    java.lang.String getFamilyName() -> g
    java.lang.String getFormatted() -> h
    java.lang.String getGivenName() -> i
    java.lang.String getHonorificPrefix() -> j
    java.lang.String getHonorificSuffix() -> k
    java.lang.String getMiddleName() -> l
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.ee$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    com.google.android.gms.internal.ha$d fp() -> m
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.ha$f -> com.google.android.gms.internal.ha$f:
    com.google.android.gms.internal.hi CREATOR -> a
    java.util.HashMap zP -> b
    java.util.Set zQ -> c
    int kZ -> d
    java.lang.String Bu -> e
    java.lang.String pZ -> f
    java.lang.String Ao -> g
    java.lang.String Bv -> h
    java.lang.String mName -> i
    boolean Bw -> j
    java.lang.String AE -> k
    java.lang.String oa -> l
    int lP -> m
    java.util.HashMap bQ() -> b
    java.util.Set eF() -> e
    int getVersionCode() -> f
    java.lang.String getDepartment() -> g
    java.lang.String getDescription() -> h
    java.lang.String getEndDate() -> i
    java.lang.String getLocation() -> j
    java.lang.String getName() -> k
    boolean isPrimary() -> l
    java.lang.String getStartDate() -> m
    java.lang.String getTitle() -> n
    int getType() -> o
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.ee$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    com.google.android.gms.internal.ha$f fq() -> p
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.ha$g -> com.google.android.gms.internal.ha$g:
    com.google.android.gms.internal.hj CREATOR -> a
    java.util.HashMap zP -> b
    java.util.Set zQ -> c
    int kZ -> d
    boolean Bw -> e
    java.lang.String mValue -> f
    java.util.HashMap bQ() -> b
    java.util.Set eF() -> e
    int getVersionCode() -> f
    boolean isPrimary() -> g
    java.lang.String getValue() -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.ee$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    com.google.android.gms.internal.ha$g fr() -> i
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.ha$h -> com.google.android.gms.internal.ha$h:
    com.google.android.gms.internal.hk CREATOR -> a
    java.util.HashMap zP -> b
    java.util.Set zQ -> c
    int kZ -> d
    java.lang.String Bx -> e
    int By -> f
    int lP -> g
    java.lang.String mValue -> h
    java.util.HashMap bQ() -> b
    java.util.Set eF() -> e
    int getVersionCode() -> f
    java.lang.String getLabel() -> g
    int fs() -> h
    int getType() -> i
    java.lang.String getValue() -> j
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object J(java.lang.String) -> a
    boolean K(java.lang.String) -> b
    boolean a(com.google.android.gms.internal.ee$a) -> a
    java.lang.Object b(com.google.android.gms.internal.ee$a) -> b
    com.google.android.gms.internal.ha$h ft() -> k
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.hb -> com.google.android.gms.internal.bq:
    com.google.android.gms.internal.ha al(android.os.Parcel) -> a
    com.google.android.gms.internal.ha[] aT(int) -> a
    void a(com.google.android.gms.internal.ha,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hc -> com.google.android.gms.internal.br:
    com.google.android.gms.internal.ha$a am(android.os.Parcel) -> a
    com.google.android.gms.internal.ha$a[] aU(int) -> a
    void a(com.google.android.gms.internal.ha$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hd -> com.google.android.gms.internal.bs:
    com.google.android.gms.internal.ha$b an(android.os.Parcel) -> a
    com.google.android.gms.internal.ha$b[] aV(int) -> a
    void a(com.google.android.gms.internal.ha$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.he -> com.google.android.gms.internal.bt:
    com.google.android.gms.internal.ha$b$a ao(android.os.Parcel) -> a
    com.google.android.gms.internal.ha$b$a[] aW(int) -> a
    void a(com.google.android.gms.internal.ha$b$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hf -> com.google.android.gms.internal.bu:
    com.google.android.gms.internal.ha$b$b ap(android.os.Parcel) -> a
    com.google.android.gms.internal.ha$b$b[] aX(int) -> a
    void a(com.google.android.gms.internal.ha$b$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hg -> com.google.android.gms.internal.bv:
    com.google.android.gms.internal.ha$c aq(android.os.Parcel) -> a
    com.google.android.gms.internal.ha$c[] aY(int) -> a
    void a(com.google.android.gms.internal.ha$c,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hh -> com.google.android.gms.internal.bw:
    com.google.android.gms.internal.ha$d ar(android.os.Parcel) -> a
    com.google.android.gms.internal.ha$d[] aZ(int) -> a
    void a(com.google.android.gms.internal.ha$d,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hi -> com.google.android.gms.internal.bx:
    com.google.android.gms.internal.ha$f as(android.os.Parcel) -> a
    com.google.android.gms.internal.ha$f[] ba(int) -> a
    void a(com.google.android.gms.internal.ha$f,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hj -> com.google.android.gms.internal.by:
    com.google.android.gms.internal.ha$g at(android.os.Parcel) -> a
    com.google.android.gms.internal.ha$g[] bb(int) -> a
    void a(com.google.android.gms.internal.ha$g,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hk -> com.google.android.gms.internal.ca:
    com.google.android.gms.internal.ha$h au(android.os.Parcel) -> a
    com.google.android.gms.internal.ha$h[] bc(int) -> a
    void a(com.google.android.gms.internal.ha$h,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hr -> com.google.android.gms.internal.cc:
    byte[] buffer -> a
    int CQ -> b
    int position -> c
    com.google.android.gms.internal.hr b(byte[],int,int) -> a
    void d(int,int) -> a
    void b(int,java.lang.String) -> a
    void c(int,long) -> a
    void bt(int) -> a
    void am(java.lang.String) -> a
    void l(long) -> a
    int e(int,int) -> b
    int d(int,java.lang.String) -> b
    int d(int,long) -> b
    int bu(int) -> b
    int an(java.lang.String) -> b
    int m(long) -> b
    int fJ() -> a
    void fK() -> b
    void b(byte) -> a
    void bv(int) -> c
    void j(byte[]) -> a
    void c(byte[],int,int) -> b
    void f(int,int) -> c
    int bw(int) -> d
    void bx(int) -> e
    int by(int) -> f
    void n(long) -> c
    int o(long) -> d
    long p(long) -> e
com.google.android.gms.internal.hr$a -> com.google.android.gms.internal.cd:
com.google.android.gms.internal.ht -> com.google.android.gms.internal.ce:
    int oK -> f
    int cw() -> a
    void a(com.google.android.gms.internal.hr) -> a
    byte[] a(com.google.android.gms.internal.ht) -> a
    void a(com.google.android.gms.internal.ht,byte[],int,int) -> a
    java.lang.String toString() -> toString
com.google.android.gms.internal.hu -> com.google.android.gms.internal.cf:
    java.lang.String b(com.google.android.gms.internal.ht) -> a
    void a(java.lang.String,java.lang.Class,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer) -> a
    java.lang.String ao(java.lang.String) -> a
    java.lang.String ap(java.lang.String) -> b
    java.lang.String O(java.lang.String) -> c
    void a(byte[],java.lang.StringBuffer) -> a
com.google.android.gms.internal.hv -> com.google.android.gms.internal.cg:
    int CR -> a
    int CS -> b
    int CT -> c
    int CU -> d
    int[] CV -> e
    long[] CW -> f
    float[] CX -> g
    double[] CY -> h
    boolean[] CZ -> i
    java.lang.String[] Da -> j
    byte[][] Db -> k
    byte[] Dc -> l
    int g(int,int) -> a
com.google.android.gms.internal.q -> com.google.android.gms.internal.ch:
com.google.android.gms.internal.v -> com.google.android.gms.internal.v:
    com.google.android.gms.internal.w CREATOR -> a
    int versionCode -> b
    long ex -> c
    android.os.Bundle extras -> d
    int ey -> e
    java.util.List ez -> f
    boolean eA -> g
    int tagForChildDirectedTreatment -> h
    boolean eB -> i
    java.lang.String eC -> j
    com.google.android.gms.internal.ai eD -> k
    android.location.Location eE -> l
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.w -> com.google.android.gms.internal.ci:
    com.google.android.gms.internal.v a(android.os.Parcel) -> a
    com.google.android.gms.internal.v[] b(int) -> a
    void a(com.google.android.gms.internal.v,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.x -> com.google.android.gms.internal.x:
    com.google.android.gms.internal.y CREATOR -> a
    int versionCode -> b
    java.lang.String eF -> c
    int height -> d
    int heightPixels -> e
    boolean eG -> f
    int width -> g
    int widthPixels -> h
    com.google.android.gms.internal.x[] eH -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.y -> com.google.android.gms.internal.cj:
    com.google.android.gms.internal.x b(android.os.Parcel) -> a
    com.google.android.gms.internal.x[] c(int) -> a
    void a(com.google.android.gms.internal.x,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.ActivityRecognitionResult -> com.google.android.gms.location.ActivityRecognitionResult:
    com.google.android.gms.location.ActivityRecognitionResultCreator CREATOR -> a
    int kZ -> e
    java.util.List tt -> b
    long tu -> c
    long tv -> d
    java.lang.String toString() -> toString
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.location.ActivityRecognitionResultCreator -> com.google.android.gms.location.a:
    com.google.android.gms.location.ActivityRecognitionResult createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.location.ActivityRecognitionResult[] newArray(int) -> a
    void a(com.google.android.gms.location.ActivityRecognitionResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.DetectedActivity -> com.google.android.gms.location.DetectedActivity:
    com.google.android.gms.location.DetectedActivityCreator CREATOR -> a
    int kZ -> d
    int tw -> b
    int tx -> c
    int getType() -> a
    int aA(int) -> a
    int getVersionCode() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.location.DetectedActivityCreator -> com.google.android.gms.location.b:
    com.google.android.gms.location.DetectedActivity createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.location.DetectedActivity[] newArray(int) -> a
    void a(com.google.android.gms.location.DetectedActivity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.LocationRequest -> com.google.android.gms.location.LocationRequest:
    int kZ -> i
    int mPriority -> a
    long tH -> b
    long tI -> c
    boolean tJ -> d
    long tA -> e
    int tK -> f
    float tL -> g
    com.google.android.gms.location.LocationRequestCreator CREATOR -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String aC(int) -> a
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int getVersionCode() -> a
com.google.android.gms.location.LocationRequestCreator -> com.google.android.gms.location.c:
    com.google.android.gms.location.LocationRequest createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.location.LocationRequest[] newArray(int) -> a
    void a(com.google.android.gms.location.LocationRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.CameraUpdate -> com.google.android.gms.maps.a:
    com.google.android.gms.dynamic.b xl -> a
    com.google.android.gms.dynamic.b dP() -> a
com.google.android.gms.maps.CameraUpdateFactory -> com.google.android.gms.maps.b:
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate xm -> a
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate dQ() -> a
    void a(com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate) -> a
    com.google.android.gms.maps.CameraUpdate zoomTo(float) -> a
    com.google.android.gms.maps.CameraUpdate newLatLngZoom(com.google.android.gms.maps.model.LatLng,float) -> a
com.google.android.gms.maps.GoogleMap -> com.google.android.gms.maps.c:
    com.google.android.gms.maps.internal.IGoogleMapDelegate xn -> a
    com.google.android.gms.maps.UiSettings xo -> b
    com.google.android.gms.maps.internal.IGoogleMapDelegate dR() -> a
    void moveCamera(com.google.android.gms.maps.CameraUpdate) -> a
    void animateCamera(com.google.android.gms.maps.CameraUpdate,int,com.google.android.gms.maps.GoogleMap$CancelableCallback) -> a
    com.google.android.gms.maps.model.Marker addMarker(com.google.android.gms.maps.model.MarkerOptions) -> a
    void setBuildingsEnabled(boolean) -> a
    com.google.android.gms.maps.UiSettings getUiSettings() -> b
com.google.android.gms.maps.GoogleMap$CancelableCallback -> com.google.android.gms.maps.d:
    void onFinish() -> a
    void onCancel() -> b
com.google.android.gms.maps.GoogleMap$a -> com.google.android.gms.maps.e:
    com.google.android.gms.maps.GoogleMap$CancelableCallback xE -> a
    void onFinish() -> a
    void onCancel() -> b
com.google.android.gms.maps.GoogleMapOptions -> com.google.android.gms.maps.GoogleMapOptions:
    com.google.android.gms.maps.GoogleMapOptionsCreator CREATOR -> a
    int kZ -> b
    java.lang.Boolean xF -> c
    java.lang.Boolean xG -> d
    int xH -> e
    com.google.android.gms.maps.model.CameraPosition xI -> f
    java.lang.Boolean xJ -> g
    java.lang.Boolean xK -> h
    java.lang.Boolean xL -> i
    java.lang.Boolean xM -> j
    java.lang.Boolean xN -> k
    java.lang.Boolean xO -> l
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> a
    byte dS() -> b
    byte dT() -> c
    byte dU() -> d
    byte dV() -> e
    byte dW() -> f
    byte dX() -> g
    byte dY() -> h
    byte dZ() -> i
    com.google.android.gms.maps.GoogleMapOptions zOrderOnTop(boolean) -> a
    com.google.android.gms.maps.GoogleMapOptions useViewLifecycleInFragment(boolean) -> b
    com.google.android.gms.maps.GoogleMapOptions mapType(int) -> a
    com.google.android.gms.maps.GoogleMapOptions camera(com.google.android.gms.maps.model.CameraPosition) -> a
    com.google.android.gms.maps.GoogleMapOptions zoomControlsEnabled(boolean) -> c
    com.google.android.gms.maps.GoogleMapOptions compassEnabled(boolean) -> d
    com.google.android.gms.maps.GoogleMapOptions scrollGesturesEnabled(boolean) -> e
    com.google.android.gms.maps.GoogleMapOptions zoomGesturesEnabled(boolean) -> f
    com.google.android.gms.maps.GoogleMapOptions tiltGesturesEnabled(boolean) -> g
    com.google.android.gms.maps.GoogleMapOptions rotateGesturesEnabled(boolean) -> h
    int getMapType() -> j
    com.google.android.gms.maps.model.CameraPosition getCamera() -> k
    com.google.android.gms.maps.GoogleMapOptions createFromAttributes(android.content.Context,android.util.AttributeSet) -> a
com.google.android.gms.maps.GoogleMapOptionsCreator -> com.google.android.gms.maps.f:
    com.google.android.gms.maps.GoogleMapOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.GoogleMapOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.GoogleMapOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.MapFragment -> com.google.android.gms.maps.MapFragment:
    com.google.android.gms.maps.MapFragment$b xP -> a
    com.google.android.gms.maps.GoogleMap xQ -> b
    com.google.android.gms.maps.internal.IMapFragmentDelegate ea() -> a
    com.google.android.gms.maps.GoogleMap getMap() -> b
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
com.google.android.gms.maps.MapFragment$a -> com.google.android.gms.maps.g:
    android.app.Fragment xR -> a
    com.google.android.gms.maps.internal.IMapFragmentDelegate xS -> b
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> a
    void onPause() -> b
    void onDestroyView() -> c
    void onDestroy() -> d
    void onLowMemory() -> e
    void onSaveInstanceState(android.os.Bundle) -> b
    com.google.android.gms.maps.internal.IMapFragmentDelegate ea() -> f
com.google.android.gms.maps.MapFragment$b -> com.google.android.gms.maps.h:
    android.app.Fragment xR -> b
    com.google.android.gms.dynamic.d xT -> a
    android.app.Activity gr -> c
    void a(com.google.android.gms.dynamic.d) -> a
    void eb() -> g
    void setActivity(android.app.Activity) -> a
    void a(com.google.android.gms.maps.MapFragment$b,android.app.Activity) -> a
com.google.android.gms.maps.MapsInitializer -> com.google.android.gms.maps.i:
    void initialize(android.content.Context) -> a
com.google.android.gms.maps.UiSettings -> com.google.android.gms.maps.j:
    com.google.android.gms.maps.internal.IUiSettingsDelegate yd -> a
    void setZoomControlsEnabled(boolean) -> a
    void setTiltGesturesEnabled(boolean) -> b
    void setRotateGesturesEnabled(boolean) -> c
com.google.android.gms.maps.a -> com.google.android.gms.maps.k:
    void a(com.google.android.gms.maps.GoogleMapOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate -> com.google.android.gms.maps.a.a:
    com.google.android.gms.dynamic.b zoomIn() -> a
    com.google.android.gms.dynamic.b zoomOut() -> b
    com.google.android.gms.dynamic.b scrollBy(float,float) -> a
    com.google.android.gms.dynamic.b zoomTo(float) -> a
    com.google.android.gms.dynamic.b zoomBy(float) -> b
    com.google.android.gms.dynamic.b zoomByWithFocus(float,int,int) -> a
    com.google.android.gms.dynamic.b newCameraPosition(com.google.android.gms.maps.model.CameraPosition) -> a
    com.google.android.gms.dynamic.b newLatLng(com.google.android.gms.maps.model.LatLng) -> a
    com.google.android.gms.dynamic.b newLatLngZoom(com.google.android.gms.maps.model.LatLng,float) -> a
    com.google.android.gms.dynamic.b newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int) -> a
    com.google.android.gms.dynamic.b newLatLngBoundsWithSize(com.google.android.gms.maps.model.LatLngBounds,int,int,int) -> a
com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate$a -> com.google.android.gms.maps.a.b:
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate L(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate$a$a -> com.google.android.gms.maps.a.c:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.dynamic.b zoomIn() -> a
    com.google.android.gms.dynamic.b zoomOut() -> b
    com.google.android.gms.dynamic.b scrollBy(float,float) -> a
    com.google.android.gms.dynamic.b zoomTo(float) -> a
    com.google.android.gms.dynamic.b zoomBy(float) -> b
    com.google.android.gms.dynamic.b zoomByWithFocus(float,int,int) -> a
    com.google.android.gms.dynamic.b newCameraPosition(com.google.android.gms.maps.model.CameraPosition) -> a
    com.google.android.gms.dynamic.b newLatLng(com.google.android.gms.maps.model.LatLng) -> a
    com.google.android.gms.dynamic.b newLatLngZoom(com.google.android.gms.maps.model.LatLng,float) -> a
    com.google.android.gms.dynamic.b newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int) -> a
    com.google.android.gms.dynamic.b newLatLngBoundsWithSize(com.google.android.gms.maps.model.LatLngBounds,int,int,int) -> a
com.google.android.gms.maps.internal.IGoogleMapDelegate -> com.google.android.gms.maps.a.d:
    com.google.android.gms.maps.model.CameraPosition getCameraPosition() -> a
    float getMaxZoomLevel() -> b
    float getMinZoomLevel() -> c
    void moveCamera(com.google.android.gms.dynamic.b) -> a
    void animateCamera(com.google.android.gms.dynamic.b) -> b
    void animateCameraWithCallback(com.google.android.gms.dynamic.b,com.google.android.gms.maps.internal.b) -> a
    void animateCameraWithDurationAndCallback(com.google.android.gms.dynamic.b,int,com.google.android.gms.maps.internal.b) -> a
    void stopAnimation() -> d
    com.google.android.gms.maps.model.internal.IPolylineDelegate addPolyline(com.google.android.gms.maps.model.PolylineOptions) -> a
    com.google.android.gms.maps.model.internal.e addPolygon(com.google.android.gms.maps.model.PolygonOptions) -> a
    com.google.android.gms.maps.model.internal.d addMarker(com.google.android.gms.maps.model.MarkerOptions) -> a
    com.google.android.gms.maps.model.internal.c addGroundOverlay(com.google.android.gms.maps.model.GroundOverlayOptions) -> a
    com.google.android.gms.maps.model.internal.f addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions) -> a
    void clear() -> e
    int getMapType() -> f
    void setMapType(int) -> a
    boolean isTrafficEnabled() -> g
    void setTrafficEnabled(boolean) -> a
    boolean isIndoorEnabled() -> h
    boolean setIndoorEnabled(boolean) -> b
    boolean isMyLocationEnabled() -> i
    void setMyLocationEnabled(boolean) -> c
    android.location.Location getMyLocation() -> j
    void setLocationSource(com.google.android.gms.maps.internal.ILocationSourceDelegate) -> a
    com.google.android.gms.maps.internal.IUiSettingsDelegate getUiSettings() -> k
    com.google.android.gms.maps.internal.IProjectionDelegate getProjection() -> l
    void setOnCameraChangeListener(com.google.android.gms.maps.internal.e) -> a
    void setOnMapClickListener(com.google.android.gms.maps.internal.h) -> a
    void setOnMapLongClickListener(com.google.android.gms.maps.internal.j) -> a
    void setOnMarkerClickListener(com.google.android.gms.maps.internal.k) -> a
    void setOnMarkerDragListener(com.google.android.gms.maps.internal.l) -> a
    void setOnInfoWindowClickListener(com.google.android.gms.maps.internal.f) -> a
    void setInfoWindowAdapter(com.google.android.gms.maps.internal.d) -> a
    com.google.android.gms.dynamic.b getTestingHelper() -> m
    com.google.android.gms.maps.model.internal.b addCircle(com.google.android.gms.maps.model.CircleOptions) -> a
    void setOnMyLocationChangeListener(com.google.android.gms.maps.internal.n) -> a
    void setOnMyLocationButtonClickListener(com.google.android.gms.maps.internal.m) -> a
    void snapshot(com.google.android.gms.maps.internal.o,com.google.android.gms.dynamic.b) -> a
    void setPadding(int,int,int,int) -> a
    boolean isBuildingsEnabled() -> n
    void setBuildingsEnabled(boolean) -> d
    void setOnMapLoadedCallback(com.google.android.gms.maps.internal.i) -> a
com.google.android.gms.maps.internal.IGoogleMapDelegate$a -> com.google.android.gms.maps.a.e:
    com.google.android.gms.maps.internal.IGoogleMapDelegate O(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IGoogleMapDelegate$a$a -> com.google.android.gms.maps.a.f:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.model.CameraPosition getCameraPosition() -> a
    float getMaxZoomLevel() -> b
    float getMinZoomLevel() -> c
    void moveCamera(com.google.android.gms.dynamic.b) -> a
    void animateCamera(com.google.android.gms.dynamic.b) -> b
    void animateCameraWithCallback(com.google.android.gms.dynamic.b,com.google.android.gms.maps.internal.b) -> a
    void animateCameraWithDurationAndCallback(com.google.android.gms.dynamic.b,int,com.google.android.gms.maps.internal.b) -> a
    void stopAnimation() -> d
    com.google.android.gms.maps.model.internal.IPolylineDelegate addPolyline(com.google.android.gms.maps.model.PolylineOptions) -> a
    com.google.android.gms.maps.model.internal.e addPolygon(com.google.android.gms.maps.model.PolygonOptions) -> a
    com.google.android.gms.maps.model.internal.d addMarker(com.google.android.gms.maps.model.MarkerOptions) -> a
    com.google.android.gms.maps.model.internal.c addGroundOverlay(com.google.android.gms.maps.model.GroundOverlayOptions) -> a
    com.google.android.gms.maps.model.internal.f addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions) -> a
    void clear() -> e
    int getMapType() -> f
    void setMapType(int) -> a
    boolean isTrafficEnabled() -> g
    void setTrafficEnabled(boolean) -> a
    boolean isIndoorEnabled() -> h
    boolean setIndoorEnabled(boolean) -> b
    boolean isMyLocationEnabled() -> i
    void setMyLocationEnabled(boolean) -> c
    android.location.Location getMyLocation() -> j
    void setLocationSource(com.google.android.gms.maps.internal.ILocationSourceDelegate) -> a
    com.google.android.gms.maps.internal.IUiSettingsDelegate getUiSettings() -> k
    com.google.android.gms.maps.internal.IProjectionDelegate getProjection() -> l
    void setOnCameraChangeListener(com.google.android.gms.maps.internal.e) -> a
    void setOnMapClickListener(com.google.android.gms.maps.internal.h) -> a
    void setOnMapLongClickListener(com.google.android.gms.maps.internal.j) -> a
    void setOnMarkerClickListener(com.google.android.gms.maps.internal.k) -> a
    void setOnMarkerDragListener(com.google.android.gms.maps.internal.l) -> a
    void setOnInfoWindowClickListener(com.google.android.gms.maps.internal.f) -> a
    void setInfoWindowAdapter(com.google.android.gms.maps.internal.d) -> a
    com.google.android.gms.dynamic.b getTestingHelper() -> m
    com.google.android.gms.maps.model.internal.b addCircle(com.google.android.gms.maps.model.CircleOptions) -> a
    void setOnMyLocationChangeListener(com.google.android.gms.maps.internal.n) -> a
    void setOnMyLocationButtonClickListener(com.google.android.gms.maps.internal.m) -> a
    void snapshot(com.google.android.gms.maps.internal.o,com.google.android.gms.dynamic.b) -> a
    void setPadding(int,int,int,int) -> a
    boolean isBuildingsEnabled() -> n
    void setBuildingsEnabled(boolean) -> d
    void setOnMapLoadedCallback(com.google.android.gms.maps.internal.i) -> a
com.google.android.gms.maps.internal.ILocationSourceDelegate -> com.google.android.gms.maps.a.g:
    void activate(com.google.android.gms.maps.internal.g) -> a
    void deactivate() -> a
com.google.android.gms.maps.internal.ILocationSourceDelegate$a -> com.google.android.gms.maps.a.h:
    com.google.android.gms.maps.internal.ILocationSourceDelegate Q(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.ILocationSourceDelegate$a$a -> com.google.android.gms.maps.a.i:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void activate(com.google.android.gms.maps.internal.g) -> a
    void deactivate() -> a
com.google.android.gms.maps.internal.IMapFragmentDelegate -> com.google.android.gms.maps.a.j:
    com.google.android.gms.maps.internal.IGoogleMapDelegate getMap() -> a
    void onInflate(com.google.android.gms.dynamic.b,com.google.android.gms.maps.GoogleMapOptions,android.os.Bundle) -> a
    void onCreate(android.os.Bundle) -> a
    com.google.android.gms.dynamic.b onCreateView(com.google.android.gms.dynamic.b,com.google.android.gms.dynamic.b,android.os.Bundle) -> a
    void onResume() -> b
    void onPause() -> c
    void onDestroyView() -> d
    void onDestroy() -> e
    void onLowMemory() -> f
    void onSaveInstanceState(android.os.Bundle) -> b
    boolean isReady() -> g
com.google.android.gms.maps.internal.IMapFragmentDelegate$a -> com.google.android.gms.maps.a.k:
    com.google.android.gms.maps.internal.IMapFragmentDelegate R(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IMapFragmentDelegate$a$a -> com.google.android.gms.maps.a.l:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.internal.IGoogleMapDelegate getMap() -> a
    void onInflate(com.google.android.gms.dynamic.b,com.google.android.gms.maps.GoogleMapOptions,android.os.Bundle) -> a
    void onCreate(android.os.Bundle) -> a
    com.google.android.gms.dynamic.b onCreateView(com.google.android.gms.dynamic.b,com.google.android.gms.dynamic.b,android.os.Bundle) -> a
    void onResume() -> b
    void onPause() -> c
    void onDestroyView() -> d
    void onDestroy() -> e
    void onLowMemory() -> f
    void onSaveInstanceState(android.os.Bundle) -> b
    boolean isReady() -> g
com.google.android.gms.maps.internal.IMapViewDelegate -> com.google.android.gms.maps.a.m:
    com.google.android.gms.maps.internal.IGoogleMapDelegate getMap() -> a
    void onCreate(android.os.Bundle) -> a
    void onResume() -> b
    void onPause() -> c
    void onDestroy() -> d
    void onLowMemory() -> e
    void onSaveInstanceState(android.os.Bundle) -> b
    com.google.android.gms.dynamic.b getView() -> f
com.google.android.gms.maps.internal.IMapViewDelegate$a -> com.google.android.gms.maps.a.n:
    com.google.android.gms.maps.internal.IMapViewDelegate S(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IMapViewDelegate$a$a -> com.google.android.gms.maps.a.o:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.internal.IGoogleMapDelegate getMap() -> a
    void onCreate(android.os.Bundle) -> a
    void onResume() -> b
    void onPause() -> c
    void onDestroy() -> d
    void onLowMemory() -> e
    void onSaveInstanceState(android.os.Bundle) -> b
    com.google.android.gms.dynamic.b getView() -> f
com.google.android.gms.maps.internal.IProjectionDelegate -> com.google.android.gms.maps.a.p:
    com.google.android.gms.maps.model.LatLng fromScreenLocation(com.google.android.gms.dynamic.b) -> a
    com.google.android.gms.dynamic.b toScreenLocation(com.google.android.gms.maps.model.LatLng) -> a
    com.google.android.gms.maps.model.VisibleRegion getVisibleRegion() -> a
com.google.android.gms.maps.internal.IProjectionDelegate$a -> com.google.android.gms.maps.a.q:
    com.google.android.gms.maps.internal.IProjectionDelegate ad(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IProjectionDelegate$a$a -> com.google.android.gms.maps.a.r:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.model.LatLng fromScreenLocation(com.google.android.gms.dynamic.b) -> a
    com.google.android.gms.dynamic.b toScreenLocation(com.google.android.gms.maps.model.LatLng) -> a
    com.google.android.gms.maps.model.VisibleRegion getVisibleRegion() -> a
com.google.android.gms.maps.internal.IUiSettingsDelegate -> com.google.android.gms.maps.a.s:
    void setZoomControlsEnabled(boolean) -> a
    void setCompassEnabled(boolean) -> b
    void setMyLocationButtonEnabled(boolean) -> c
    void setScrollGesturesEnabled(boolean) -> d
    void setZoomGesturesEnabled(boolean) -> e
    void setTiltGesturesEnabled(boolean) -> f
    void setRotateGesturesEnabled(boolean) -> g
    void setAllGesturesEnabled(boolean) -> h
    boolean isZoomControlsEnabled() -> a
    boolean isCompassEnabled() -> b
    boolean isMyLocationButtonEnabled() -> c
    boolean isScrollGesturesEnabled() -> d
    boolean isZoomGesturesEnabled() -> e
    boolean isTiltGesturesEnabled() -> f
    boolean isRotateGesturesEnabled() -> g
com.google.android.gms.maps.internal.IUiSettingsDelegate$a -> com.google.android.gms.maps.a.t:
    com.google.android.gms.maps.internal.IUiSettingsDelegate af(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IUiSettingsDelegate$a$a -> com.google.android.gms.maps.a.u:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void setZoomControlsEnabled(boolean) -> a
    void setCompassEnabled(boolean) -> b
    void setMyLocationButtonEnabled(boolean) -> c
    void setScrollGesturesEnabled(boolean) -> d
    void setZoomGesturesEnabled(boolean) -> e
    void setTiltGesturesEnabled(boolean) -> f
    void setRotateGesturesEnabled(boolean) -> g
    void setAllGesturesEnabled(boolean) -> h
    boolean isZoomControlsEnabled() -> a
    boolean isCompassEnabled() -> b
    boolean isMyLocationButtonEnabled() -> c
    boolean isScrollGesturesEnabled() -> d
    boolean isZoomGesturesEnabled() -> e
    boolean isTiltGesturesEnabled() -> f
    boolean isRotateGesturesEnabled() -> g
com.google.android.gms.maps.internal.a -> com.google.android.gms.maps.a.v:
    java.lang.Boolean a(byte) -> a
    byte c(java.lang.Boolean) -> a
com.google.android.gms.maps.internal.b -> com.google.android.gms.maps.a.w:
    void onFinish() -> a
    void onCancel() -> b
com.google.android.gms.maps.internal.b$a -> com.google.android.gms.maps.a.x:
    com.google.android.gms.maps.internal.b M(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.b$a$a -> com.google.android.gms.maps.a.y:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void onFinish() -> a
    void onCancel() -> b
com.google.android.gms.maps.internal.c -> com.google.android.gms.maps.a.z:
    void e(com.google.android.gms.dynamic.b) -> a
    com.google.android.gms.maps.internal.IMapFragmentDelegate f(com.google.android.gms.dynamic.b) -> b
    com.google.android.gms.maps.internal.IMapViewDelegate a(com.google.android.gms.dynamic.b,com.google.android.gms.maps.GoogleMapOptions) -> a
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate ed() -> a
    com.google.android.gms.maps.model.internal.a ee() -> b
    void a(com.google.android.gms.dynamic.b,int) -> a
com.google.android.gms.maps.internal.c$a -> com.google.android.gms.maps.a.aa:
    com.google.android.gms.maps.internal.c N(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.c$a$a -> com.google.android.gms.maps.a.ab:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void e(com.google.android.gms.dynamic.b) -> a
    com.google.android.gms.maps.internal.IMapFragmentDelegate f(com.google.android.gms.dynamic.b) -> b
    com.google.android.gms.maps.internal.IMapViewDelegate a(com.google.android.gms.dynamic.b,com.google.android.gms.maps.GoogleMapOptions) -> a
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate ed() -> a
    com.google.android.gms.maps.model.internal.a ee() -> b
    void a(com.google.android.gms.dynamic.b,int) -> a
com.google.android.gms.maps.internal.d -> com.google.android.gms.maps.a.ac:
    com.google.android.gms.dynamic.b f(com.google.android.gms.maps.model.internal.d) -> a
    com.google.android.gms.dynamic.b g(com.google.android.gms.maps.model.internal.d) -> b
com.google.android.gms.maps.internal.d$a -> com.google.android.gms.maps.a.ad:
    com.google.android.gms.maps.internal.d P(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.d$a$a -> com.google.android.gms.maps.a.ae:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.dynamic.b f(com.google.android.gms.maps.model.internal.d) -> a
    com.google.android.gms.dynamic.b g(com.google.android.gms.maps.model.internal.d) -> b
com.google.android.gms.maps.internal.e -> com.google.android.gms.maps.a.af:
    void onCameraChange(com.google.android.gms.maps.model.CameraPosition) -> a
com.google.android.gms.maps.internal.e$a -> com.google.android.gms.maps.a.ag:
    com.google.android.gms.maps.internal.e T(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.e$a$a -> com.google.android.gms.maps.a.ah:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void onCameraChange(com.google.android.gms.maps.model.CameraPosition) -> a
com.google.android.gms.maps.internal.f -> com.google.android.gms.maps.a.ai:
    void e(com.google.android.gms.maps.model.internal.d) -> a
com.google.android.gms.maps.internal.f$a -> com.google.android.gms.maps.a.aj:
    com.google.android.gms.maps.internal.f U(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.f$a$a -> com.google.android.gms.maps.a.ak:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void e(com.google.android.gms.maps.model.internal.d) -> a
com.google.android.gms.maps.internal.g -> com.google.android.gms.maps.a.al:
    void g(com.google.android.gms.dynamic.b) -> a
com.google.android.gms.maps.internal.g$a -> com.google.android.gms.maps.a.am:
    com.google.android.gms.maps.internal.g V(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.g$a$a -> com.google.android.gms.maps.a.an:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void g(com.google.android.gms.dynamic.b) -> a
com.google.android.gms.maps.internal.h -> com.google.android.gms.maps.a.ao:
    void onMapClick(com.google.android.gms.maps.model.LatLng) -> a
com.google.android.gms.maps.internal.h$a -> com.google.android.gms.maps.a.ap:
    com.google.android.gms.maps.internal.h W(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.h$a$a -> com.google.android.gms.maps.a.aq:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void onMapClick(com.google.android.gms.maps.model.LatLng) -> a
com.google.android.gms.maps.internal.i -> com.google.android.gms.maps.a.ar:
    void onMapLoaded() -> a
com.google.android.gms.maps.internal.i$a -> com.google.android.gms.maps.a.as:
    com.google.android.gms.maps.internal.i X(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.i$a$a -> com.google.android.gms.maps.a.at:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void onMapLoaded() -> a
com.google.android.gms.maps.internal.j -> com.google.android.gms.maps.a.au:
    void onMapLongClick(com.google.android.gms.maps.model.LatLng) -> a
com.google.android.gms.maps.internal.j$a -> com.google.android.gms.maps.a.av:
    com.google.android.gms.maps.internal.j Y(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.j$a$a -> com.google.android.gms.maps.a.aw:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void onMapLongClick(com.google.android.gms.maps.model.LatLng) -> a
com.google.android.gms.maps.internal.k -> com.google.android.gms.maps.a.ax:
    boolean a(com.google.android.gms.maps.model.internal.d) -> a
com.google.android.gms.maps.internal.k$a -> com.google.android.gms.maps.a.ay:
    com.google.android.gms.maps.internal.k Z(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.k$a$a -> com.google.android.gms.maps.a.az:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    boolean a(com.google.android.gms.maps.model.internal.d) -> a
com.google.android.gms.maps.internal.l -> com.google.android.gms.maps.a.ba:
    void b(com.google.android.gms.maps.model.internal.d) -> a
    void d(com.google.android.gms.maps.model.internal.d) -> b
    void c(com.google.android.gms.maps.model.internal.d) -> c
com.google.android.gms.maps.internal.l$a -> com.google.android.gms.maps.a.bb:
    com.google.android.gms.maps.internal.l aa(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.l$a$a -> com.google.android.gms.maps.a.bc:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void b(com.google.android.gms.maps.model.internal.d) -> a
    void d(com.google.android.gms.maps.model.internal.d) -> b
    void c(com.google.android.gms.maps.model.internal.d) -> c
com.google.android.gms.maps.internal.m -> com.google.android.gms.maps.a.bd:
    boolean onMyLocationButtonClick() -> a
com.google.android.gms.maps.internal.m$a -> com.google.android.gms.maps.a.be:
    com.google.android.gms.maps.internal.m ab(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.m$a$a -> com.google.android.gms.maps.a.bf:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onMyLocationButtonClick() -> a
com.google.android.gms.maps.internal.n -> com.google.android.gms.maps.a.bg:
    void d(com.google.android.gms.dynamic.b) -> a
com.google.android.gms.maps.internal.n$a -> com.google.android.gms.maps.a.bh:
    com.google.android.gms.maps.internal.n ac(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.n$a$a -> com.google.android.gms.maps.a.bi:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void d(com.google.android.gms.dynamic.b) -> a
com.google.android.gms.maps.internal.o -> com.google.android.gms.maps.a.bj:
    void onSnapshotReady(android.graphics.Bitmap) -> a
    void c(com.google.android.gms.dynamic.b) -> a
com.google.android.gms.maps.internal.o$a -> com.google.android.gms.maps.a.bk:
    com.google.android.gms.maps.internal.o ae(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.o$a$a -> com.google.android.gms.maps.a.bl:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void onSnapshotReady(android.graphics.Bitmap) -> a
    void c(com.google.android.gms.dynamic.b) -> a
com.google.android.gms.maps.internal.p -> com.google.android.gms.maps.a.bm:
    void a(android.os.Bundle,java.lang.String,android.os.Parcelable) -> a
com.google.android.gms.maps.internal.q -> com.google.android.gms.maps.a.bn:
    android.content.Context ye -> a
    com.google.android.gms.maps.internal.c yf -> b
    com.google.android.gms.maps.internal.c u(android.content.Context) -> a
    boolean ef() -> a
    java.lang.Class eg() -> b
    void v(android.content.Context) -> b
    com.google.android.gms.maps.internal.c w(android.content.Context) -> c
    android.content.Context getRemoteContext(android.content.Context) -> d
    java.lang.Object a(java.lang.ClassLoader,java.lang.String) -> a
    java.lang.Object c(java.lang.Class) -> a
com.google.android.gms.maps.internal.r -> com.google.android.gms.maps.a.bo:
    boolean yg -> a
    boolean eh() -> a
com.google.android.gms.maps.model.BitmapDescriptor -> com.google.android.gms.maps.model.a:
    com.google.android.gms.dynamic.b xl -> a
    com.google.android.gms.dynamic.b dP() -> a
com.google.android.gms.maps.model.BitmapDescriptorFactory -> com.google.android.gms.maps.model.b:
    com.google.android.gms.maps.model.internal.a yh -> a
    com.google.android.gms.maps.model.internal.a ei() -> a
    void a(com.google.android.gms.maps.model.internal.a) -> a
    com.google.android.gms.maps.model.BitmapDescriptor fromResource(int) -> a
com.google.android.gms.maps.model.CameraPosition -> com.google.android.gms.maps.model.CameraPosition:
    com.google.android.gms.maps.model.CameraPositionCreator CREATOR -> a
    int kZ -> f
    com.google.android.gms.maps.model.LatLng target -> b
    float zoom -> c
    float tilt -> d
    float bearing -> e
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int getVersionCode() -> a
    com.google.android.gms.maps.model.CameraPosition$Builder builder() -> b
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.android.gms.maps.model.CameraPosition createFromAttributes(android.content.Context,android.util.AttributeSet) -> a
com.google.android.gms.maps.model.CameraPosition$Builder -> com.google.android.gms.maps.model.c:
    com.google.android.gms.maps.model.LatLng yi -> a
    float yj -> b
    float yk -> c
    float yl -> d
    com.google.android.gms.maps.model.CameraPosition$Builder target(com.google.android.gms.maps.model.LatLng) -> a
    com.google.android.gms.maps.model.CameraPosition$Builder zoom(float) -> a
    com.google.android.gms.maps.model.CameraPosition$Builder tilt(float) -> b
    com.google.android.gms.maps.model.CameraPosition$Builder bearing(float) -> c
    com.google.android.gms.maps.model.CameraPosition build() -> a
com.google.android.gms.maps.model.CameraPositionCreator -> com.google.android.gms.maps.model.d:
    com.google.android.gms.maps.model.CameraPosition createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.CameraPosition[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.CameraPosition,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.CircleOptions -> com.google.android.gms.maps.model.CircleOptions:
    com.google.android.gms.maps.model.CircleOptionsCreator CREATOR -> a
    int kZ -> b
    com.google.android.gms.maps.model.LatLng yn -> c
    double yo -> d
    float yp -> e
    int yq -> f
    int yr -> g
    float ys -> h
    boolean yt -> i
    int getVersionCode() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.google.android.gms.maps.model.LatLng getCenter() -> b
    double getRadius() -> c
    float getStrokeWidth() -> d
    int getStrokeColor() -> e
    int getFillColor() -> f
    float getZIndex() -> g
    boolean isVisible() -> h
com.google.android.gms.maps.model.CircleOptionsCreator -> com.google.android.gms.maps.model.e:
    com.google.android.gms.maps.model.CircleOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.CircleOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.CircleOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.GroundOverlayOptions -> com.google.android.gms.maps.model.GroundOverlayOptions:
    com.google.android.gms.maps.model.GroundOverlayOptionsCreator CREATOR -> a
    int kZ -> b
    com.google.android.gms.maps.model.BitmapDescriptor yv -> c
    com.google.android.gms.maps.model.LatLng yw -> d
    float yx -> e
    float yy -> f
    com.google.android.gms.maps.model.LatLngBounds yz -> g
    float yl -> h
    float ys -> i
    boolean yt -> j
    float yA -> k
    float yB -> l
    float yC -> m
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    android.os.IBinder ej() -> a
    int getVersionCode() -> b
    com.google.android.gms.maps.model.LatLng getLocation() -> c
    float getWidth() -> d
    float getHeight() -> e
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> f
    float getBearing() -> g
    float getZIndex() -> h
    float getTransparency() -> i
    float getAnchorU() -> j
    float getAnchorV() -> k
    boolean isVisible() -> l
com.google.android.gms.maps.model.GroundOverlayOptionsCreator -> com.google.android.gms.maps.model.f:
    com.google.android.gms.maps.model.GroundOverlayOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.GroundOverlayOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.GroundOverlayOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.LatLng -> com.google.android.gms.maps.model.LatLng:
    com.google.android.gms.maps.model.LatLngCreator CREATOR -> a
    int kZ -> d
    double latitude -> b
    double longitude -> c
    int getVersionCode() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.LatLngBounds -> com.google.android.gms.maps.model.LatLngBounds:
    com.google.android.gms.maps.model.LatLngBoundsCreator CREATOR -> a
    int kZ -> d
    com.google.android.gms.maps.model.LatLng southwest -> b
    com.google.android.gms.maps.model.LatLng northeast -> c
    int getVersionCode() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.LatLngBoundsCreator -> com.google.android.gms.maps.model.g:
    com.google.android.gms.maps.model.LatLngBounds createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.LatLngBounds[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.LatLngBounds,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.LatLngCreator -> com.google.android.gms.maps.model.h:
    com.google.android.gms.maps.model.LatLng createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.LatLng[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.LatLng,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.Marker -> com.google.android.gms.maps.model.i:
    com.google.android.gms.maps.model.internal.d yH -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.MarkerOptions -> com.google.android.gms.maps.model.MarkerOptions:
    com.google.android.gms.maps.model.MarkerOptionsCreator CREATOR -> a
    int kZ -> b
    com.google.android.gms.maps.model.LatLng yI -> c
    java.lang.String oa -> d
    java.lang.String yJ -> e
    com.google.android.gms.maps.model.BitmapDescriptor yK -> f
    float yB -> g
    float yC -> h
    boolean yL -> i
    boolean yt -> j
    boolean yM -> k
    float yN -> l
    float yO -> m
    float yP -> n
    float mAlpha -> o
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    android.os.IBinder ek() -> b
    com.google.android.gms.maps.model.MarkerOptions position(com.google.android.gms.maps.model.LatLng) -> a
    com.google.android.gms.maps.model.MarkerOptions icon(com.google.android.gms.maps.model.BitmapDescriptor) -> a
    com.google.android.gms.maps.model.LatLng getPosition() -> c
    java.lang.String getTitle() -> d
    java.lang.String getSnippet() -> e
    float getAnchorU() -> f
    float getAnchorV() -> g
    boolean isDraggable() -> h
    boolean isVisible() -> i
    boolean isFlat() -> j
    float getRotation() -> k
    float getInfoWindowAnchorU() -> l
    float getInfoWindowAnchorV() -> m
    float getAlpha() -> n
com.google.android.gms.maps.model.MarkerOptionsCreator -> com.google.android.gms.maps.model.j:
    com.google.android.gms.maps.model.MarkerOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.MarkerOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.MarkerOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.PolygonOptions -> com.google.android.gms.maps.model.PolygonOptions:
    com.google.android.gms.maps.model.PolygonOptionsCreator CREATOR -> a
    int kZ -> b
    java.util.List yR -> c
    java.util.List yS -> d
    float yp -> e
    int yq -> f
    int yr -> g
    float ys -> h
    boolean yt -> i
    boolean yT -> j
    int getVersionCode() -> a
    java.util.List el() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.util.List getPoints() -> c
    float getStrokeWidth() -> d
    int getStrokeColor() -> e
    int getFillColor() -> f
    float getZIndex() -> g
    boolean isVisible() -> h
    boolean isGeodesic() -> i
com.google.android.gms.maps.model.PolygonOptionsCreator -> com.google.android.gms.maps.model.k:
    com.google.android.gms.maps.model.PolygonOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.PolygonOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.PolygonOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.PolylineOptions -> com.google.android.gms.maps.model.PolylineOptions:
    com.google.android.gms.maps.model.PolylineOptionsCreator CREATOR -> a
    int kZ -> b
    java.util.List yR -> c
    float yx -> d
    int kn -> e
    float ys -> f
    boolean yt -> g
    boolean yT -> h
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    java.util.List getPoints() -> b
    float getWidth() -> c
    int getColor() -> d
    float getZIndex() -> e
    boolean isVisible() -> f
    boolean isGeodesic() -> g
com.google.android.gms.maps.model.PolylineOptionsCreator -> com.google.android.gms.maps.model.l:
    com.google.android.gms.maps.model.PolylineOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.PolylineOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.PolylineOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.RuntimeRemoteException -> com.google.android.gms.maps.model.m:
com.google.android.gms.maps.model.Tile -> com.google.android.gms.maps.model.Tile:
    com.google.android.gms.maps.model.TileCreator CREATOR -> a
    int kZ -> e
    int width -> b
    int height -> c
    byte[] data -> d
    int getVersionCode() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.google.android.gms.maps.model.TileCreator -> com.google.android.gms.maps.model.n:
    com.google.android.gms.maps.model.Tile createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.Tile[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.Tile,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.TileOverlayOptions -> com.google.android.gms.maps.model.TileOverlayOptions:
    com.google.android.gms.maps.model.TileOverlayOptionsCreator CREATOR -> a
    int kZ -> b
    com.google.android.gms.maps.model.internal.g yW -> c
    com.google.android.gms.maps.model.TileProvider yX -> d
    boolean yt -> e
    float ys -> f
    boolean yY -> g
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    android.os.IBinder em() -> b
    float getZIndex() -> c
    boolean isVisible() -> d
    boolean getFadeIn() -> e
    com.google.android.gms.maps.model.internal.g a(com.google.android.gms.maps.model.TileOverlayOptions) -> a
com.google.android.gms.maps.model.TileOverlayOptions$1 -> com.google.android.gms.maps.model.o:
    com.google.android.gms.maps.model.internal.g yZ -> c
    com.google.android.gms.maps.model.TileOverlayOptions za -> a
com.google.android.gms.maps.model.TileOverlayOptionsCreator -> com.google.android.gms.maps.model.p:
    com.google.android.gms.maps.model.TileOverlayOptions createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.TileOverlayOptions[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.TileOverlayOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.TileProvider -> com.google.android.gms.maps.model.q:
    com.google.android.gms.maps.model.Tile NO_TILE -> b
com.google.android.gms.maps.model.VisibleRegion -> com.google.android.gms.maps.model.VisibleRegion:
    com.google.android.gms.maps.model.VisibleRegionCreator CREATOR -> a
    int kZ -> g
    com.google.android.gms.maps.model.LatLng nearLeft -> b
    com.google.android.gms.maps.model.LatLng nearRight -> c
    com.google.android.gms.maps.model.LatLng farLeft -> d
    com.google.android.gms.maps.model.LatLng farRight -> e
    com.google.android.gms.maps.model.LatLngBounds latLngBounds -> f
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int getVersionCode() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.VisibleRegionCreator -> com.google.android.gms.maps.model.r:
    com.google.android.gms.maps.model.VisibleRegion createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.maps.model.VisibleRegion[] newArray(int) -> a
    void a(com.google.android.gms.maps.model.VisibleRegion,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.a -> com.google.android.gms.maps.model.s:
    void a(com.google.android.gms.maps.model.CameraPosition,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.b -> com.google.android.gms.maps.model.t:
    void a(com.google.android.gms.maps.model.CircleOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.c -> com.google.android.gms.maps.model.u:
    void a(com.google.android.gms.maps.model.GroundOverlayOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.d -> com.google.android.gms.maps.model.v:
    void a(com.google.android.gms.maps.model.LatLngBounds,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.e -> com.google.android.gms.maps.model.w:
    void a(com.google.android.gms.maps.model.LatLng,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.f -> com.google.android.gms.maps.model.x:
    void a(com.google.android.gms.maps.model.MarkerOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.g -> com.google.android.gms.maps.model.y:
    void a(com.google.android.gms.maps.model.PolygonOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.h -> com.google.android.gms.maps.model.z:
    void a(com.google.android.gms.maps.model.PolylineOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.i -> com.google.android.gms.maps.model.aa:
    void a(com.google.android.gms.maps.model.Tile,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.internal.IPolylineDelegate -> com.google.android.gms.maps.model.a.a:
    void remove() -> a
    java.lang.String getId() -> b
    void setPoints(java.util.List) -> a
    java.util.List getPoints() -> c
    void setWidth(float) -> a
    float getWidth() -> d
    void setColor(int) -> a
    int getColor() -> e
    void setZIndex(float) -> b
    float getZIndex() -> f
    void setVisible(boolean) -> a
    boolean isVisible() -> g
    void setGeodesic(boolean) -> b
    boolean isGeodesic() -> h
    boolean equalsRemote(com.google.android.gms.maps.model.internal.IPolylineDelegate) -> a
    int hashCodeRemote() -> i
com.google.android.gms.maps.model.internal.IPolylineDelegate$a -> com.google.android.gms.maps.model.a.b:
    com.google.android.gms.maps.model.internal.IPolylineDelegate al(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.model.internal.IPolylineDelegate$a$a -> com.google.android.gms.maps.model.a.c:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void remove() -> a
    java.lang.String getId() -> b
    void setPoints(java.util.List) -> a
    java.util.List getPoints() -> c
    void setWidth(float) -> a
    float getWidth() -> d
    void setColor(int) -> a
    int getColor() -> e
    void setZIndex(float) -> b
    float getZIndex() -> f
    void setVisible(boolean) -> a
    boolean isVisible() -> g
    void setGeodesic(boolean) -> b
    boolean isGeodesic() -> h
    boolean equalsRemote(com.google.android.gms.maps.model.internal.IPolylineDelegate) -> a
    int hashCodeRemote() -> i
com.google.android.gms.maps.model.internal.a -> com.google.android.gms.maps.model.a.d:
    com.google.android.gms.dynamic.b aO(int) -> a
    com.google.android.gms.dynamic.b ad(java.lang.String) -> a
    com.google.android.gms.dynamic.b ae(java.lang.String) -> b
    com.google.android.gms.dynamic.b en() -> a
    com.google.android.gms.dynamic.b c(float) -> a
    com.google.android.gms.dynamic.b a(android.graphics.Bitmap) -> a
    com.google.android.gms.dynamic.b af(java.lang.String) -> c
com.google.android.gms.maps.model.internal.a$a -> com.google.android.gms.maps.model.a.e:
    com.google.android.gms.maps.model.internal.a ag(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.model.internal.a$a$a -> com.google.android.gms.maps.model.a.f:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.dynamic.b aO(int) -> a
    com.google.android.gms.dynamic.b ad(java.lang.String) -> a
    com.google.android.gms.dynamic.b ae(java.lang.String) -> b
    com.google.android.gms.dynamic.b en() -> a
    com.google.android.gms.dynamic.b c(float) -> a
    com.google.android.gms.dynamic.b a(android.graphics.Bitmap) -> a
    com.google.android.gms.dynamic.b af(java.lang.String) -> c
com.google.android.gms.maps.model.internal.b -> com.google.android.gms.maps.model.a.g:
    void remove() -> a
    java.lang.String getId() -> b
    void setCenter(com.google.android.gms.maps.model.LatLng) -> a
    com.google.android.gms.maps.model.LatLng getCenter() -> c
    void setRadius(double) -> a
    double getRadius() -> d
    void setStrokeWidth(float) -> a
    float getStrokeWidth() -> e
    void setStrokeColor(int) -> a
    int getStrokeColor() -> f
    void setFillColor(int) -> b
    int getFillColor() -> g
    void setZIndex(float) -> b
    float getZIndex() -> h
    void setVisible(boolean) -> a
    boolean isVisible() -> i
    boolean a(com.google.android.gms.maps.model.internal.b) -> a
    int hashCodeRemote() -> j
com.google.android.gms.maps.model.internal.b$a -> com.google.android.gms.maps.model.a.h:
    com.google.android.gms.maps.model.internal.b ah(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.model.internal.b$a$a -> com.google.android.gms.maps.model.a.i:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void remove() -> a
    java.lang.String getId() -> b
    void setCenter(com.google.android.gms.maps.model.LatLng) -> a
    com.google.android.gms.maps.model.LatLng getCenter() -> c
    void setRadius(double) -> a
    double getRadius() -> d
    void setStrokeWidth(float) -> a
    float getStrokeWidth() -> e
    void setStrokeColor(int) -> a
    int getStrokeColor() -> f
    void setFillColor(int) -> b
    int getFillColor() -> g
    void setZIndex(float) -> b
    float getZIndex() -> h
    void setVisible(boolean) -> a
    boolean isVisible() -> i
    boolean a(com.google.android.gms.maps.model.internal.b) -> a
    int hashCodeRemote() -> j
com.google.android.gms.maps.model.internal.c -> com.google.android.gms.maps.model.a.j:
    void remove() -> a
    java.lang.String getId() -> b
    void setPosition(com.google.android.gms.maps.model.LatLng) -> a
    com.google.android.gms.maps.model.LatLng getPosition() -> c
    void setDimensions(float) -> a
    void a(float,float) -> a
    float getWidth() -> d
    float getHeight() -> e
    void setPositionFromBounds(com.google.android.gms.maps.model.LatLngBounds) -> a
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> f
    void setBearing(float) -> b
    float getBearing() -> g
    void setZIndex(float) -> c
    float getZIndex() -> h
    void setVisible(boolean) -> a
    boolean isVisible() -> i
    void setTransparency(float) -> d
    float getTransparency() -> j
    boolean a(com.google.android.gms.maps.model.internal.c) -> a
    int hashCodeRemote() -> k
    void h(com.google.android.gms.dynamic.b) -> a
com.google.android.gms.maps.model.internal.c$a -> com.google.android.gms.maps.model.a.k:
    com.google.android.gms.maps.model.internal.c ai(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.model.internal.c$a$a -> com.google.android.gms.maps.model.a.l:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void remove() -> a
    java.lang.String getId() -> b
    void setPosition(com.google.android.gms.maps.model.LatLng) -> a
    com.google.android.gms.maps.model.LatLng getPosition() -> c
    void setDimensions(float) -> a
    void a(float,float) -> a
    float getWidth() -> d
    float getHeight() -> e
    void setPositionFromBounds(com.google.android.gms.maps.model.LatLngBounds) -> a
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> f
    void setBearing(float) -> b
    float getBearing() -> g
    void setZIndex(float) -> c
    float getZIndex() -> h
    void setVisible(boolean) -> a
    boolean isVisible() -> i
    void setTransparency(float) -> d
    float getTransparency() -> j
    boolean a(com.google.android.gms.maps.model.internal.c) -> a
    int hashCodeRemote() -> k
    void h(com.google.android.gms.dynamic.b) -> a
com.google.android.gms.maps.model.internal.d -> com.google.android.gms.maps.model.a.m:
    void remove() -> a
    java.lang.String getId() -> b
    void setPosition(com.google.android.gms.maps.model.LatLng) -> a
    com.google.android.gms.maps.model.LatLng getPosition() -> c
    void setTitle(java.lang.String) -> a
    java.lang.String getTitle() -> d
    void setSnippet(java.lang.String) -> b
    java.lang.String getSnippet() -> e
    void setDraggable(boolean) -> a
    boolean isDraggable() -> f
    void showInfoWindow() -> g
    void hideInfoWindow() -> h
    boolean isInfoWindowShown() -> i
    void setVisible(boolean) -> b
    boolean isVisible() -> j
    boolean h(com.google.android.gms.maps.model.internal.d) -> a
    int hashCodeRemote() -> k
    void i(com.google.android.gms.dynamic.b) -> a
    void setAnchor(float,float) -> a
    void setFlat(boolean) -> c
    boolean isFlat() -> l
    void setRotation(float) -> a
    float getRotation() -> m
    void setInfoWindowAnchor(float,float) -> b
    void setAlpha(float) -> b
    float getAlpha() -> n
com.google.android.gms.maps.model.internal.d$a -> com.google.android.gms.maps.model.a.n:
    com.google.android.gms.maps.model.internal.d aj(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.model.internal.d$a$a -> com.google.android.gms.maps.model.a.o:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void remove() -> a
    java.lang.String getId() -> b
    void setPosition(com.google.android.gms.maps.model.LatLng) -> a
    com.google.android.gms.maps.model.LatLng getPosition() -> c
    void setTitle(java.lang.String) -> a
    java.lang.String getTitle() -> d
    void setSnippet(java.lang.String) -> b
    java.lang.String getSnippet() -> e
    void setDraggable(boolean) -> a
    boolean isDraggable() -> f
    void showInfoWindow() -> g
    void hideInfoWindow() -> h
    boolean isInfoWindowShown() -> i
    void setVisible(boolean) -> b
    boolean isVisible() -> j
    boolean h(com.google.android.gms.maps.model.internal.d) -> a
    int hashCodeRemote() -> k
    void i(com.google.android.gms.dynamic.b) -> a
    void setAnchor(float,float) -> a
    void setFlat(boolean) -> c
    boolean isFlat() -> l
    void setRotation(float) -> a
    float getRotation() -> m
    void setInfoWindowAnchor(float,float) -> b
    void setAlpha(float) -> b
    float getAlpha() -> n
com.google.android.gms.maps.model.internal.e -> com.google.android.gms.maps.model.a.p:
    void remove() -> a
    java.lang.String getId() -> b
    void setPoints(java.util.List) -> a
    java.util.List getPoints() -> c
    void setHoles(java.util.List) -> b
    java.util.List getHoles() -> d
    void setStrokeWidth(float) -> a
    float getStrokeWidth() -> e
    void setStrokeColor(int) -> a
    int getStrokeColor() -> f
    void setFillColor(int) -> b
    int getFillColor() -> g
    void setZIndex(float) -> b
    float getZIndex() -> h
    void setVisible(boolean) -> a
    boolean isVisible() -> i
    void setGeodesic(boolean) -> b
    boolean isGeodesic() -> j
    boolean a(com.google.android.gms.maps.model.internal.e) -> a
    int hashCodeRemote() -> k
com.google.android.gms.maps.model.internal.e$a -> com.google.android.gms.maps.model.a.q:
    com.google.android.gms.maps.model.internal.e ak(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.model.internal.e$a$a -> com.google.android.gms.maps.model.a.r:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void remove() -> a
    java.lang.String getId() -> b
    void setPoints(java.util.List) -> a
    java.util.List getPoints() -> c
    void setHoles(java.util.List) -> b
    java.util.List getHoles() -> d
    void setStrokeWidth(float) -> a
    float getStrokeWidth() -> e
    void setStrokeColor(int) -> a
    int getStrokeColor() -> f
    void setFillColor(int) -> b
    int getFillColor() -> g
    void setZIndex(float) -> b
    float getZIndex() -> h
    void setVisible(boolean) -> a
    boolean isVisible() -> i
    void setGeodesic(boolean) -> b
    boolean isGeodesic() -> j
    boolean a(com.google.android.gms.maps.model.internal.e) -> a
    int hashCodeRemote() -> k
com.google.android.gms.maps.model.internal.f -> com.google.android.gms.maps.model.a.s:
    void remove() -> a
    void clearTileCache() -> b
    java.lang.String getId() -> c
    void setZIndex(float) -> a
    float getZIndex() -> d
    void setVisible(boolean) -> a
    boolean isVisible() -> e
    boolean a(com.google.android.gms.maps.model.internal.f) -> a
    int hashCodeRemote() -> f
    void setFadeIn(boolean) -> b
    boolean getFadeIn() -> g
com.google.android.gms.maps.model.internal.f$a -> com.google.android.gms.maps.model.a.t:
    com.google.android.gms.maps.model.internal.f am(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.model.internal.f$a$a -> com.google.android.gms.maps.model.a.u:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    void remove() -> a
    void clearTileCache() -> b
    java.lang.String getId() -> c
    void setZIndex(float) -> a
    float getZIndex() -> d
    void setVisible(boolean) -> a
    boolean isVisible() -> e
    boolean a(com.google.android.gms.maps.model.internal.f) -> a
    int hashCodeRemote() -> f
    void setFadeIn(boolean) -> b
    boolean getFadeIn() -> g
com.google.android.gms.maps.model.internal.g -> com.google.android.gms.maps.model.a.v:
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> a
com.google.android.gms.maps.model.internal.g$a -> com.google.android.gms.maps.model.a.w:
    com.google.android.gms.maps.model.internal.g an(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.model.internal.g$a$a -> com.google.android.gms.maps.model.a.x:
    android.os.IBinder dU -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> a
com.google.android.gms.maps.model.j -> com.google.android.gms.maps.model.ab:
    void a(com.google.android.gms.maps.model.TileOverlayOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.k -> com.google.android.gms.maps.model.ac:
    void a(com.google.android.gms.maps.model.VisibleRegion,android.os.Parcel,int) -> a
com.google.android.gms.plus.model.moments.ItemScope -> com.google.android.gms.b.a.a.a:
com.google.android.gms.plus.model.moments.Moment -> com.google.android.gms.b.a.a.b:
com.google.android.gms.plus.model.people.Person -> com.google.android.gms.b.a.b.a:
com.google.android.gms.plus.model.people.Person$AgeRange -> com.google.android.gms.b.a.b.b:
com.google.android.gms.plus.model.people.Person$Cover -> com.google.android.gms.b.a.b.c:
com.google.android.gms.plus.model.people.Person$Cover$CoverInfo -> com.google.android.gms.b.a.b.d:
com.google.android.gms.plus.model.people.Person$Cover$CoverPhoto -> com.google.android.gms.b.a.b.e:
com.google.android.gms.plus.model.people.Person$Image -> com.google.android.gms.b.a.b.f:
com.google.android.gms.plus.model.people.Person$Name -> com.google.android.gms.b.a.b.g:
com.google.android.gms.plus.model.people.Person$Organizations -> com.google.android.gms.b.a.b.h:
com.google.android.gms.plus.model.people.Person$PlacesLived -> com.google.android.gms.b.a.b.i:
com.google.android.gms.plus.model.people.Person$Urls -> com.google.android.gms.b.a.b.j:
com.google.android.gms.wallet.Address -> com.google.android.gms.wallet.Address:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> l
    java.lang.String name -> a
    java.lang.String BA -> b
    java.lang.String BB -> c
    java.lang.String BC -> d
    java.lang.String ia -> e
    java.lang.String BD -> f
    java.lang.String BE -> g
    java.lang.String BF -> h
    java.lang.String BG -> i
    boolean BH -> j
    java.lang.String BI -> k
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.Cart -> com.google.android.gms.wallet.Cart:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> d
    java.lang.String BJ -> a
    java.lang.String BK -> b
    java.util.ArrayList BL -> c
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.CountrySpecification -> com.google.android.gms.wallet.CountrySpecification:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> b
    java.lang.String ia -> a
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.FullWallet -> com.google.android.gms.wallet.FullWallet:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> h
    java.lang.String BN -> a
    java.lang.String BO -> b
    com.google.android.gms.wallet.ProxyCard BP -> c
    java.lang.String BQ -> d
    com.google.android.gms.wallet.Address BR -> e
    com.google.android.gms.wallet.Address BS -> f
    java.lang.String[] BT -> g
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.FullWalletRequest -> com.google.android.gms.wallet.FullWalletRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> d
    java.lang.String BN -> a
    java.lang.String BO -> b
    com.google.android.gms.wallet.Cart BU -> c
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.LineItem -> com.google.android.gms.wallet.LineItem:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> g
    java.lang.String description -> a
    java.lang.String BW -> b
    java.lang.String BX -> c
    java.lang.String BJ -> d
    int BY -> e
    java.lang.String BK -> f
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.LoyaltyWalletObject -> com.google.android.gms.wallet.LoyaltyWalletObject:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> i
    java.lang.String Ca -> a
    java.lang.String Cb -> b
    java.lang.String Cc -> c
    java.lang.String Cd -> d
    java.lang.String Ce -> e
    java.lang.String Cf -> f
    java.lang.String Cg -> g
    java.lang.String Ch -> h
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.MaskedWallet -> com.google.android.gms.wallet.MaskedWallet:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> i
    java.lang.String BN -> a
    java.lang.String BO -> b
    java.lang.String[] BT -> c
    java.lang.String BQ -> d
    com.google.android.gms.wallet.Address BR -> e
    com.google.android.gms.wallet.Address BS -> f
    com.google.android.gms.wallet.LoyaltyWalletObject[] Ci -> g
    com.google.android.gms.wallet.OfferWalletObject[] Cj -> h
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.MaskedWalletRequest -> com.google.android.gms.wallet.MaskedWalletRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> n
    java.lang.String BO -> a
    boolean Ck -> b
    boolean Cl -> c
    boolean Cm -> d
    java.lang.String Cn -> e
    java.lang.String BK -> f
    java.lang.String Co -> g
    com.google.android.gms.wallet.Cart BU -> h
    boolean Cp -> i
    boolean Cq -> j
    com.google.android.gms.wallet.CountrySpecification[] Cr -> k
    boolean Cs -> l
    boolean Ct -> m
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.NotifyTransactionStatusRequest -> com.google.android.gms.wallet.NotifyTransactionStatusRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> a
    java.lang.String BN -> b
    int status -> c
    java.lang.String Cv -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.OfferWalletObject -> com.google.android.gms.wallet.OfferWalletObject:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> c
    java.lang.String Ca -> a
    java.lang.String Cx -> b
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.ProxyCard -> com.google.android.gms.wallet.ProxyCard:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kZ -> e
    java.lang.String Cy -> a
    java.lang.String Cz -> b
    int CA -> c
    int CB -> d
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.a -> com.google.android.gms.wallet.a:
    com.google.android.gms.wallet.Address av(android.os.Parcel) -> a
    com.google.android.gms.wallet.Address[] bd(int) -> a
    void a(com.google.android.gms.wallet.Address,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.b -> com.google.android.gms.wallet.b:
    com.google.android.gms.wallet.Cart aw(android.os.Parcel) -> a
    com.google.android.gms.wallet.Cart[] be(int) -> a
    void a(com.google.android.gms.wallet.Cart,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.c -> com.google.android.gms.wallet.c:
    com.google.android.gms.wallet.CountrySpecification ax(android.os.Parcel) -> a
    com.google.android.gms.wallet.CountrySpecification[] bf(int) -> a
    void a(com.google.android.gms.wallet.CountrySpecification,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.d -> com.google.android.gms.wallet.d:
    com.google.android.gms.wallet.FullWallet ay(android.os.Parcel) -> a
    com.google.android.gms.wallet.FullWallet[] bg(int) -> a
    void a(com.google.android.gms.wallet.FullWallet,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.e -> com.google.android.gms.wallet.e:
    com.google.android.gms.wallet.FullWalletRequest az(android.os.Parcel) -> a
    com.google.android.gms.wallet.FullWalletRequest[] bh(int) -> a
    void a(com.google.android.gms.wallet.FullWalletRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.f -> com.google.android.gms.wallet.f:
    com.google.android.gms.wallet.LineItem aA(android.os.Parcel) -> a
    com.google.android.gms.wallet.LineItem[] bi(int) -> a
    void a(com.google.android.gms.wallet.LineItem,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.g -> com.google.android.gms.wallet.g:
    com.google.android.gms.wallet.LoyaltyWalletObject aB(android.os.Parcel) -> a
    com.google.android.gms.wallet.LoyaltyWalletObject[] bj(int) -> a
    void a(com.google.android.gms.wallet.LoyaltyWalletObject,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.h -> com.google.android.gms.wallet.h:
    com.google.android.gms.wallet.MaskedWallet aC(android.os.Parcel) -> a
    com.google.android.gms.wallet.MaskedWallet[] bk(int) -> a
    void a(com.google.android.gms.wallet.MaskedWallet,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.i -> com.google.android.gms.wallet.i:
    com.google.android.gms.wallet.MaskedWalletRequest aD(android.os.Parcel) -> a
    com.google.android.gms.wallet.MaskedWalletRequest[] bl(int) -> a
    void a(com.google.android.gms.wallet.MaskedWalletRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.j -> com.google.android.gms.wallet.j:
    com.google.android.gms.wallet.NotifyTransactionStatusRequest aE(android.os.Parcel) -> a
    com.google.android.gms.wallet.NotifyTransactionStatusRequest[] bm(int) -> a
    void a(com.google.android.gms.wallet.NotifyTransactionStatusRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.k -> com.google.android.gms.wallet.k:
    com.google.android.gms.wallet.OfferWalletObject aF(android.os.Parcel) -> a
    com.google.android.gms.wallet.OfferWalletObject[] bn(int) -> a
    void a(com.google.android.gms.wallet.OfferWalletObject,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.l -> com.google.android.gms.wallet.l:
    com.google.android.gms.wallet.ProxyCard aG(android.os.Parcel) -> a
    com.google.android.gms.wallet.ProxyCard[] bo(int) -> a
    void a(com.google.android.gms.wallet.ProxyCard,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.parse.BackgroundTask -> com.parse.BackgroundTask:
    com.parse.ParseCallback callback -> callback
    java.lang.Object result -> result
    com.parse.ParseException exception -> exception
    java.lang.Object run() -> run
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void executeInThisThread() -> executeInThisThread
    int executeTask(com.parse.BackgroundTask) -> executeTask
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.parse.BuildConfig -> com.parse.BuildConfig:
    boolean DEBUG -> DEBUG
com.parse.Capture -> com.parse.Capture:
    java.lang.Object value -> value
    java.lang.Object get() -> get
    void set(java.lang.Object) -> set
com.parse.ConnectivityNotifier -> com.parse.ConnectivityNotifier:
    java.lang.String TAG -> TAG
    com.parse.ConnectivityNotifier singleton -> singleton
    java.util.Set listeners -> listeners
    boolean hasRegisteredReceiver -> hasRegisteredReceiver
    java.lang.Object lock -> lock
    com.parse.ConnectivityNotifier getNotifier() -> getNotifier
    void addListener(com.parse.ConnectivityNotifier$ConnectivityListener,android.content.Context) -> addListener
    void removeListener(com.parse.ConnectivityNotifier$ConnectivityListener) -> removeListener
    boolean tryToRegisterForNetworkStatusNotifications() -> tryToRegisterForNetworkStatusNotifications
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean isConnected() -> isConnected
com.parse.ConnectivityNotifier$ConnectivityListener -> com.parse.ConnectivityNotifier$ConnectivityListener:
    void networkConnectivityStatusChanged(android.content.Intent) -> networkConnectivityStatusChanged
com.parse.Continuation -> com.parse.Continuation:
    java.lang.Object then(com.parse.Task) -> then
com.parse.CountCallback -> com.parse.CountCallback:
    void done(int,com.parse.ParseException) -> done
    void internalDone(java.lang.Integer,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.CountingMultipartEntity -> com.parse.CountingMultipartEntity:
    com.parse.ProgressCallback progressCallback -> progressCallback
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.CountingMultipartEntity$CountingOutputStream -> com.parse.CountingMultipartEntity$CountingOutputStream:
    com.parse.ProgressCallback progressCallback -> progressCallback
    long uploadedSize -> uploadedSize
    long totalSize -> totalSize
    boolean hasReportedDone -> hasReportedDone
    void write(byte[],int,int) -> write
    void write(int) -> write
    void notifyCallback() -> notifyCallback
com.parse.DeleteCallback -> com.parse.DeleteCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.FindCallback -> com.parse.FindCallback:
    void done(java.util.List,com.parse.ParseException) -> done
    void internalDone(java.util.List,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.FunctionCallback -> com.parse.FunctionCallback:
    void done(java.lang.Object,com.parse.ParseException) -> done
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.GcmBroadcastReceiver -> com.parse.GcmBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.GcmRegistrar -> com.parse.GcmRegistrar:
    java.lang.String TAG -> TAG
    java.lang.String REGISTRATION_ID_EXTRA -> REGISTRATION_ID_EXTRA
    java.lang.String ERROR_EXTRA -> ERROR_EXTRA
    java.lang.String SENDER_ID -> SENDER_ID
    java.lang.String REGISTER_ACTION -> REGISTER_ACTION
    java.lang.String REGISTER_RESPONSE_ACTION -> REGISTER_RESPONSE_ACTION
    java.lang.Object lock -> lock
    com.parse.GcmRegistrar$Request request -> request
    android.content.Context context -> context
    com.parse.GcmRegistrar getInstance() -> getInstance
    void updateAsync() -> updateAsync
    void register() -> register
    void update() -> update
    void sendRegistrationRequest() -> sendRegistrationRequest
    boolean isRegistrationIntent(android.content.Intent) -> isRegistrationIntent
    void handleRegistrationIntent(android.content.Intent) -> handleRegistrationIntent
    int getRequestIdentifier() -> getRequestIdentifier
    java.lang.Object access$0(com.parse.GcmRegistrar) -> access$0
    void access$1(com.parse.GcmRegistrar,com.parse.GcmRegistrar$Request) -> access$1
com.parse.GcmRegistrar$1 -> com.parse.GcmRegistrar$1:
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.GcmRegistrar$2 -> com.parse.GcmRegistrar$2:
    com.parse.GcmRegistrar this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.GcmRegistrar$Request -> com.parse.GcmRegistrar$Request:
    java.lang.String RETRY_ACTION -> RETRY_ACTION
    int MAX_RETRIES -> MAX_RETRIES
    int BACKOFF_INTERVAL_MS -> BACKOFF_INTERVAL_MS
    android.content.Context context -> context
    java.lang.String senderId -> senderId
    java.util.Random random -> random
    int identifier -> identifier
    com.parse.Task$TaskCompletionSource tcs -> tcs
    android.app.PendingIntent appIntent -> appIntent
    java.util.concurrent.atomic.AtomicInteger tries -> tries
    android.app.PendingIntent retryIntent -> retryIntent
    android.content.BroadcastReceiver retryReceiver -> retryReceiver
    com.parse.GcmRegistrar$Request createAndSend(android.content.Context,java.lang.String) -> createAndSend
    com.parse.Task getTask() -> getTask
    void send() -> send
    void onReceiveResponseIntent(android.content.Intent) -> onReceiveResponseIntent
    void finish(java.lang.String,java.lang.String) -> finish
    int access$0(com.parse.GcmRegistrar$Request) -> access$0
    void access$1(com.parse.GcmRegistrar$Request) -> access$1
com.parse.GcmRegistrar$Request$1 -> com.parse.GcmRegistrar$Request$1:
    com.parse.GcmRegistrar$Request this$1 -> this$1
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.GcmRegistrar$Singleton -> com.parse.GcmRegistrar$Singleton:
    com.parse.GcmRegistrar INSTANCE -> INSTANCE
com.parse.GetCallback -> com.parse.GetCallback:
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseObject,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.GetDataCallback -> com.parse.GetDataCallback:
    void done(byte[],com.parse.ParseException) -> done
    void internalDone(byte[],com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.KnownParseObjectDecoder -> com.parse.KnownParseObjectDecoder:
    java.util.Map fetchedObjects -> fetchedObjects
    com.parse.ParseObject decodePointer(java.lang.String,java.lang.String) -> decodePointer
com.parse.LocalIdManager -> com.parse.LocalIdManager:
    com.parse.LocalIdManager defaultInstance -> defaultInstance
    java.io.File diskPath -> diskPath
    java.util.Random random -> random
    com.parse.LocalIdManager getDefaultInstance() -> getDefaultInstance
    boolean isLocalId(java.lang.String) -> isLocalId
    com.parse.LocalIdManager$MapEntry getMapEntry(java.lang.String) -> getMapEntry
    void putMapEntry(java.lang.String,com.parse.LocalIdManager$MapEntry) -> putMapEntry
    void removeMapEntry(java.lang.String) -> removeMapEntry
    java.lang.String createLocalId() -> createLocalId
    void retainLocalIdOnDisk(java.lang.String) -> retainLocalIdOnDisk
    void releaseLocalIdOnDisk(java.lang.String) -> releaseLocalIdOnDisk
    java.lang.String getObjectId(java.lang.String) -> getObjectId
    void setObjectId(java.lang.String,java.lang.String) -> setObjectId
    boolean clear() -> clear
com.parse.LocalIdManager$MapEntry -> com.parse.LocalIdManager$MapEntry:
    java.lang.String objectId -> objectId
    int retainCount -> retainCount
    com.parse.LocalIdManager this$0 -> this$0
com.parse.LocationCallback -> com.parse.LocationCallback:
    void done(com.parse.ParseGeoPoint,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseGeoPoint,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.LocationNotifier -> com.parse.LocationNotifier:
    java.lang.String testProviderName -> testProviderName
    android.location.Location fakeLocation -> fakeLocation
    com.parse.Task getCurrentLocationAsync(long,android.location.Criteria) -> getCurrentLocationAsync
    void setFakeLocation(android.location.Location) -> setFakeLocation
com.parse.LocationNotifier$1 -> com.parse.LocationNotifier$1:
    com.parse.Capture val$timeoutFuture -> val$timeoutFuture
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    android.location.LocationManager val$manager -> val$manager
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.parse.LocationNotifier$2 -> com.parse.LocationNotifier$2:
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    android.location.LocationManager val$manager -> val$manager
    android.location.LocationListener val$listener -> val$listener
    void run() -> run
com.parse.LockSet -> com.parse.LockSet:
    java.util.WeakHashMap stableIds -> stableIds
    long nextStableId -> nextStableId
    java.util.Set locks -> locks
    java.lang.Long getStableId(java.util.concurrent.locks.Lock) -> getStableId
    void lock() -> lock
    void unlock() -> unlock
    java.lang.Long access$0(java.util.concurrent.locks.Lock) -> access$0
com.parse.LockSet$1 -> com.parse.LockSet$1:
    com.parse.LockSet this$0 -> this$0
    int compare(java.util.concurrent.locks.Lock,java.util.concurrent.locks.Lock) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.parse.LogInCallback -> com.parse.LogInCallback:
    void done(com.parse.ParseUser,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseUser,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.ManifestInfo -> com.parse.ManifestInfo:
    java.lang.String TAG -> TAG
    java.lang.Object lock -> lock
    long lastModified -> lastModified
    int versionCode -> versionCode
    int iconId -> iconId
    java.lang.String displayName -> displayName
    com.parse.PushType pushType -> pushType
    long getLastModified() -> getLastModified
    int getVersionCode() -> getVersionCode
    java.lang.String getDisplayName() -> getDisplayName
    int getIconId() -> getIconId
    void setPushType(com.parse.PushType) -> setPushType
    com.parse.PushType getPushType() -> getPushType
    java.lang.String getNonePushTypeLogMessage() -> getNonePushTypeLogMessage
    android.content.Context getContext() -> getContext
    java.lang.String getPackageName() -> getPackageName
    android.content.pm.PackageManager getPackageManager() -> getPackageManager
    android.content.pm.ApplicationInfo getApplicationInfo() -> getApplicationInfo
    android.content.pm.PackageInfo getPackageInfo(java.lang.String) -> getPackageInfo
    android.content.pm.ServiceInfo getServiceInfo(java.lang.Class) -> getServiceInfo
    android.content.pm.ActivityInfo getReceiverInfo(java.lang.Class) -> getReceiverInfo
    boolean hasPermissions(java.lang.String[]) -> hasPermissions
    boolean checkResolveInfo(java.lang.Class,java.util.List) -> checkResolveInfo
    boolean checkReceiver(java.lang.Class,java.lang.String,android.content.Intent[]) -> checkReceiver
    boolean hasAnyGcmSpecificDeclaration() -> hasAnyGcmSpecificDeclaration
    boolean deviceSupportsGcm() -> deviceSupportsGcm
    com.parse.ManifestInfo$ManifestCheckResult gcmSupportLevel() -> gcmSupportLevel
    com.parse.ManifestInfo$ManifestCheckResult ppnsSupportLevel() -> ppnsSupportLevel
    java.lang.String getGcmManifestMessage() -> getGcmManifestMessage
    java.lang.String getPpnsManifestMessage() -> getPpnsManifestMessage
com.parse.ManifestInfo$ManifestCheckResult -> com.parse.ManifestInfo$ManifestCheckResult:
    com.parse.ManifestInfo$ManifestCheckResult HAS_ALL_DECLARATIONS -> HAS_ALL_DECLARATIONS
    com.parse.ManifestInfo$ManifestCheckResult MISSING_OPTIONAL_DECLARATIONS -> MISSING_OPTIONAL_DECLARATIONS
    com.parse.ManifestInfo$ManifestCheckResult MISSING_REQUIRED_DECLARATIONS -> MISSING_REQUIRED_DECLARATIONS
    com.parse.ManifestInfo$ManifestCheckResult[] ENUM$VALUES -> ENUM$VALUES
    com.parse.ManifestInfo$ManifestCheckResult[] values() -> values
    com.parse.ManifestInfo$ManifestCheckResult valueOf(java.lang.String) -> valueOf
com.parse.NoObjectsEncodingStrategy -> com.parse.NoObjectsEncodingStrategy:
    com.parse.NoObjectsEncodingStrategy instance -> instance
    com.parse.NoObjectsEncodingStrategy get() -> get
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.Parse -> com.parse.Parse:
    java.lang.String TAG -> TAG
    android.content.Context applicationContext -> applicationContext
    java.lang.String applicationId -> applicationId
    java.lang.String clientKey -> clientKey
    int LOG_LEVEL_VERBOSE -> LOG_LEVEL_VERBOSE
    int LOG_LEVEL_DEBUG -> LOG_LEVEL_DEBUG
    int LOG_LEVEL_INFO -> LOG_LEVEL_INFO
    int LOG_LEVEL_WARNING -> LOG_LEVEL_WARNING
    int LOG_LEVEL_ERROR -> LOG_LEVEL_ERROR
    int LOG_LEVEL_NONE -> LOG_LEVEL_NONE
    int logLevel -> logLevel
    int maxParseFileSize -> maxParseFileSize
    int maxKeyValueCacheBytes -> maxKeyValueCacheBytes
    int maxKeyValueCacheFiles -> maxKeyValueCacheFiles
    com.parse.ParseCommandCache commandCache -> commandCache
    java.lang.Object lock -> lock
    java.text.DateFormat dateFormat -> dateFormat
    java.util.concurrent.Executor uiThreadExecutor -> uiThreadExecutor
    void initialize(android.content.Context,java.lang.String,java.lang.String) -> initialize
    android.content.Context getApplicationContext() -> getApplicationContext
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void log(int,java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void logV(java.lang.String,java.lang.String,java.lang.Throwable) -> logV
    void logV(java.lang.String,java.lang.String) -> logV
    void logD(java.lang.String,java.lang.String,java.lang.Throwable) -> logD
    void logD(java.lang.String,java.lang.String) -> logD
    void logI(java.lang.String,java.lang.String,java.lang.Throwable) -> logI
    void logI(java.lang.String,java.lang.String) -> logI
    void logW(java.lang.String,java.lang.String,java.lang.Throwable) -> logW
    void logW(java.lang.String,java.lang.String) -> logW
    void logE(java.lang.String,java.lang.String,java.lang.Throwable) -> logE
    void logE(java.lang.String,java.lang.String) -> logE
    void setContextIfNeeded(android.content.Context) -> setContextIfNeeded
    java.io.File getParseDir() -> getParseDir
    java.io.File getParseCacheDir(java.lang.String) -> getParseCacheDir
    void recursiveDelete(java.io.File) -> recursiveDelete
    void checkCacheApplicationId() -> checkCacheApplicationId
    java.io.File getKeyValueCacheDir() -> getKeyValueCacheDir
    java.io.File getKeyValueCacheFile(java.lang.String) -> getKeyValueCacheFile
    long getKeyValueCacheAge(java.io.File) -> getKeyValueCacheAge
    java.io.File createKeyValueCacheFile(java.lang.String) -> createKeyValueCacheFile
    void clearCacheDir() -> clearCacheDir
    void saveToKeyValueCache(java.lang.String,java.lang.String) -> saveToKeyValueCache
    void clearFromKeyValueCache(java.lang.String) -> clearFromKeyValueCache
    java.lang.String loadFromKeyValueCache(java.lang.String,long) -> loadFromKeyValueCache
    java.lang.Object jsonFromKeyValueCache(java.lang.String,long) -> jsonFromKeyValueCache
    com.parse.ParseCommandCache getCommandCache() -> getCommandCache
    void checkInit() -> checkInit
    void checkContext() -> checkContext
    boolean hasPermission(java.lang.String) -> hasPermission
    void requirePermission(java.lang.String) -> requirePermission
    boolean isValidType(java.lang.Object) -> isValidType
    java.lang.Object encode(java.lang.Object,com.parse.ParseObjectEncodingStrategy) -> encode
    java.util.Date stringToDate(java.lang.String) -> stringToDate
    java.lang.String dateToString(java.util.Date) -> dateToString
    org.json.JSONObject encodeDate(java.util.Date) -> encodeDate
    java.lang.Iterable keys(org.json.JSONObject) -> keys
    boolean isContainerObject(java.lang.Object) -> isContainerObject
    java.lang.Number addNumbers(java.lang.Number,java.lang.Number) -> addNumbers
    java.lang.Number subtractNumbers(java.lang.Number,java.lang.Number) -> subtractNumbers
    int compareNumbers(java.lang.Number,java.lang.Number) -> compareNumbers
    java.lang.String join(java.util.Collection,java.lang.String) -> join
    java.lang.Object waitForTask(com.parse.Task) -> waitForTask
    com.parse.Task callbackOnMainThreadAsync(com.parse.Task,com.parse.ParseCallback) -> callbackOnMainThreadAsync
    com.parse.Task callbackOnMainThreadAsync(com.parse.Task,com.parse.ParseCallback,boolean) -> callbackOnMainThreadAsync
com.parse.Parse$1 -> com.parse.Parse$1:
    void execute(java.lang.Runnable) -> execute
com.parse.Parse$2 -> com.parse.Parse$2:
    void run() -> run
com.parse.Parse$3 -> com.parse.Parse$3:
    java.lang.String val$suffix -> val$suffix
    boolean accept(java.io.File,java.lang.String) -> accept
com.parse.Parse$4 -> com.parse.Parse$4:
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.parse.Parse$5 -> com.parse.Parse$5:
    org.json.JSONObject val$finalObject -> val$finalObject
    java.util.Iterator iterator() -> iterator
com.parse.Parse$6 -> com.parse.Parse$6:
    boolean val$reportCancellation -> val$reportCancellation
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParseCallback val$callback -> val$callback
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Parse$6$1 -> com.parse.Parse$6$1:
    com.parse.Parse$6 this$1 -> this$1
    com.parse.Task val$task -> val$task
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParseCallback val$callback -> val$callback
    void run() -> run
com.parse.ParseACL -> com.parse.ParseACL:
    java.lang.String PUBLIC_KEY -> PUBLIC_KEY
    java.lang.String UNRESOLVED_KEY -> UNRESOLVED_KEY
    com.parse.ParseACL defaultACL -> defaultACL
    boolean defaultACLUsesCurrentUser -> defaultACLUsesCurrentUser
    java.lang.ref.WeakReference lastCurrentUser -> lastCurrentUser
    com.parse.ParseACL defaultACLWithCurrentUser -> defaultACLWithCurrentUser
    boolean shared -> shared
    com.parse.ParseUser unresolvedUser -> unresolvedUser
    org.json.JSONObject permissionsById -> permissionsById
    com.parse.ParseACL copy() -> copy
    boolean isShared() -> isShared
    void setShared(boolean) -> setShared
    org.json.JSONObject toJSONObject() -> toJSONObject
    com.parse.ParseACL createACLFromJSONObject(org.json.JSONObject) -> createACLFromJSONObject
    void resolveUser(com.parse.ParseUser) -> resolveUser
    boolean hasUnresolvedUser() -> hasUnresolvedUser
    void setAccess(java.lang.String,java.lang.String,boolean) -> setAccess
    boolean getAccess(java.lang.String,java.lang.String) -> getAccess
    void setPublicReadAccess(boolean) -> setPublicReadAccess
    boolean getPublicReadAccess() -> getPublicReadAccess
    void setPublicWriteAccess(boolean) -> setPublicWriteAccess
    boolean getPublicWriteAccess() -> getPublicWriteAccess
    void setReadAccess(java.lang.String,boolean) -> setReadAccess
    boolean getReadAccess(java.lang.String) -> getReadAccess
    void setWriteAccess(java.lang.String,boolean) -> setWriteAccess
    boolean getWriteAccess(java.lang.String) -> getWriteAccess
    void setReadAccess(com.parse.ParseUser,boolean) -> setReadAccess
    void setUnresolvedReadAccess(com.parse.ParseUser,boolean) -> setUnresolvedReadAccess
    void setUnresolvedWriteAccess(com.parse.ParseUser,boolean) -> setUnresolvedWriteAccess
    void prepareUnresolvedUser(com.parse.ParseUser) -> prepareUnresolvedUser
    boolean getReadAccess(com.parse.ParseUser) -> getReadAccess
    void setWriteAccess(com.parse.ParseUser,boolean) -> setWriteAccess
    boolean getWriteAccess(com.parse.ParseUser) -> getWriteAccess
    boolean getRoleReadAccess(java.lang.String) -> getRoleReadAccess
    void setRoleReadAccess(java.lang.String,boolean) -> setRoleReadAccess
    boolean getRoleWriteAccess(java.lang.String) -> getRoleWriteAccess
    void setRoleWriteAccess(java.lang.String,boolean) -> setRoleWriteAccess
    void validateRoleState(com.parse.ParseRole) -> validateRoleState
    boolean getRoleReadAccess(com.parse.ParseRole) -> getRoleReadAccess
    void setRoleReadAccess(com.parse.ParseRole,boolean) -> setRoleReadAccess
    boolean getRoleWriteAccess(com.parse.ParseRole) -> getRoleWriteAccess
    void setRoleWriteAccess(com.parse.ParseRole,boolean) -> setRoleWriteAccess
    void setDefaultACL(com.parse.ParseACL,boolean) -> setDefaultACL
    com.parse.ParseACL getDefaultACL() -> getDefaultACL
    void access$0(com.parse.ParseACL,com.parse.ParseUser) -> access$0
com.parse.ParseACL$UserResolutionListener -> com.parse.ParseACL$UserResolutionListener:
    java.lang.ref.WeakReference parent -> parent
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
com.parse.ParseAddOperation -> com.parse.ParseAddOperation:
    java.util.ArrayList objects -> objects
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseAddUniqueOperation -> com.parse.ParseAddUniqueOperation:
    java.util.LinkedHashSet objects -> objects
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseAnalytics -> com.parse.ParseAnalytics:
    java.lang.String TAG -> TAG
    void trackAppOpened(android.content.Intent) -> trackAppOpened
    void trackEvent(java.lang.String) -> trackEvent
    void trackEvent(java.lang.String,java.util.Map) -> trackEvent
    void trackAppOpened(java.lang.String) -> trackAppOpened
com.parse.ParseAnonymousUtils -> com.parse.ParseAnonymousUtils:
    com.parse.auth.AnonymousAuthenticationProvider provider -> provider
    java.lang.String ANONYMOUS_AUTH_TYPE -> ANONYMOUS_AUTH_TYPE
    void initialize() -> initialize
    boolean isLinked(com.parse.ParseUser) -> isLinked
    void logIn(com.parse.LogInCallback) -> logIn
    void lazyLogIn() -> lazyLogIn
com.parse.ParseBroadcastReceiver -> com.parse.ParseBroadcastReceiver:
    java.lang.String TAG -> TAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.ParseCallback -> com.parse.ParseCallback:
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.ParseClassName -> com.parse.ParseClassName:
    java.lang.String value() -> value
com.parse.ParseCloud -> com.parse.ParseCloud:
    com.parse.ParseCommand constructCallCommand(java.lang.String,java.util.Map) -> constructCallCommand
    java.lang.Object convertCloudResponse(java.lang.Object) -> convertCloudResponse
    com.parse.Task callFunctionAsync(java.lang.String,java.util.Map) -> callFunctionAsync
    java.lang.Object callFunction(java.lang.String,java.util.Map) -> callFunction
    void callFunctionInBackground(java.lang.String,java.util.Map,com.parse.FunctionCallback) -> callFunctionInBackground
    java.lang.Object access$0(java.lang.Object) -> access$0
com.parse.ParseCloud$1 -> com.parse.ParseCloud$1:
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommand -> com.parse.ParseCommand:
    java.util.concurrent.ScheduledExecutorService networkThreadPool -> networkThreadPool
    org.apache.http.client.HttpClient testClient -> testClient
    java.lang.String op -> op
    org.json.JSONObject params -> params
    java.lang.String localId -> localId
    java.lang.String sessionToken -> sessionToken
    org.apache.http.client.HttpClient client -> client
    org.apache.http.client.methods.HttpPost post -> post
    boolean retryEnabled -> retryEnabled
    int attemptsMade -> attemptsMade
    long delay -> delay
    java.util.concurrent.atomic.AtomicReference currentTask -> currentTask
    int SOCKET_TIMEOUT -> SOCKET_TIMEOUT
    int CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    int INITIAL_DELAY -> INITIAL_DELAY
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,org.json.JSONArray) -> put
    void put(java.lang.String,org.json.JSONObject) -> put
    void setOp(java.lang.String) -> setOp
    java.lang.String getLocalId() -> getLocalId
    void setLocalId(java.lang.String) -> setLocalId
    org.json.JSONObject toJSONObject() -> toJSONObject
    java.lang.String getCacheKey() -> getCacheKey
    java.lang.String toDeterministicString(java.lang.Object) -> toDeterministicString
    void addToStringer(org.json.JSONStringer,java.lang.Object) -> addToStringer
    com.parse.Task performAsync() -> performAsync
    com.parse.ParseException connectionFailed(java.lang.String,java.lang.Exception) -> connectionFailed
    void preparePost() -> preparePost
    com.parse.Task performAsync(boolean) -> performAsync
    com.parse.Task sendRequestWithRetriesAsync() -> sendRequestWithRetriesAsync
    void maybeSetupHttpProxy() -> maybeSetupHttpProxy
    com.parse.Task sendRequestAsync(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost) -> sendRequestAsync
    void calculateNextDelay() -> calculateNextDelay
    void enableRetrying() -> enableRetrying
    void setInitialDelay(double) -> setInitialDelay
    void cancel() -> cancel
    void getLocalPointersIn(java.lang.Object,java.util.ArrayList) -> getLocalPointersIn
    void maybeChangeServerOperation() -> maybeChangeServerOperation
    void resolveLocalIds() -> resolveLocalIds
    void retainLocalIds() -> retainLocalIds
    void releaseLocalIds() -> releaseLocalIds
    org.apache.http.client.methods.HttpPost access$0(com.parse.ParseCommand) -> access$0
    com.parse.Task access$1(com.parse.ParseCommand) -> access$1
    java.util.concurrent.atomic.AtomicReference access$2(com.parse.ParseCommand) -> access$2
    int access$3(com.parse.ParseCommand) -> access$3
    void access$4(com.parse.ParseCommand,int) -> access$4
    boolean access$5(com.parse.ParseCommand) -> access$5
    long access$6(com.parse.ParseCommand) -> access$6
    void access$7(com.parse.ParseCommand) -> access$7
com.parse.ParseCommand$1 -> com.parse.ParseCommand$1:
    com.parse.ParseCommand this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseCommand$2 -> com.parse.ParseCommand$2:
    com.parse.ParseCommand this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommand$3 -> com.parse.ParseCommand$3:
    com.parse.ParseCommand this$0 -> this$0
    boolean val$saveToCache -> val$saveToCache
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommand$4 -> com.parse.ParseCommand$4:
    com.parse.ParseCommand this$0 -> this$0
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommand$5 -> com.parse.ParseCommand$5:
    com.parse.ParseCommand this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
    com.parse.ParseCommand access$1(com.parse.ParseCommand$5) -> access$1
com.parse.ParseCommand$5$1 -> com.parse.ParseCommand$5$1:
    com.parse.ParseCommand$5 this$1 -> this$1
    com.parse.Task$TaskCompletionSource val$delayTaskSource -> val$delayTaskSource
    void run() -> run
com.parse.ParseCommand$5$2 -> com.parse.ParseCommand$5$2:
    com.parse.ParseCommand$5 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommand$6 -> com.parse.ParseCommand$6:
    com.parse.ParseCommand this$0 -> this$0
    org.apache.http.client.HttpClient val$client -> val$client
    org.apache.http.client.methods.HttpPost val$post -> val$post
    org.json.JSONObject call() -> call
    java.lang.Object call() -> call
com.parse.ParseCommandCache -> com.parse.ParseCommandCache:
    java.lang.String TAG -> TAG
    java.io.File cachePath -> cachePath
    int timeoutMaxRetries -> timeoutMaxRetries
    double timeoutRetryWaitSeconds -> timeoutRetryWaitSeconds
    int maxCacheSizeBytes -> maxCacheSizeBytes
    int filenameCounter -> filenameCounter
    boolean shouldStop -> shouldStop
    boolean connected -> connected
    boolean unprocessedCommandsExist -> unprocessedCommandsExist
    java.util.HashMap pendingTasks -> pendingTasks
    java.lang.Object lock -> lock
    boolean running -> running
    java.lang.Object runningLock -> runningLock
    java.util.logging.Logger log -> log
    com.parse.ParseCommandCache$TestHelper testHelper -> testHelper
    com.parse.ConnectivityNotifier$ConnectivityListener connectivityListener -> connectivityListener
    void setTimeoutMaxRetries(int) -> setTimeoutMaxRetries
    void setTimeoutRetryWaitSeconds(double) -> setTimeoutRetryWaitSeconds
    void setMaxCacheSizeBytes(int) -> setMaxCacheSizeBytes
    void resume() -> resume
    void pause() -> pause
    void removeFile(java.io.File) -> removeFile
    void simulateReboot() -> simulateReboot
    void fakeObjectUpdate() -> fakeObjectUpdate
    com.parse.Task runEventuallyAsync(com.parse.ParseCommand,com.parse.ParseObject) -> runEventuallyAsync
    com.parse.Task runEventuallyInternalAsync(com.parse.ParseCommand,boolean,com.parse.ParseObject) -> runEventuallyInternalAsync
    int pendingCount() -> pendingCount
    void clear() -> clear
    void setConnected(boolean) -> setConnected
    java.lang.Object waitForTaskWithoutLock(com.parse.Task) -> waitForTaskWithoutLock
    void maybeRunAllCommandsNow(int) -> maybeRunAllCommandsNow
    void runLoop() -> runLoop
    com.parse.ParseCommandCache$TestHelper getTestHelper() -> getTestHelper
    void access$0(com.parse.ParseCommandCache) -> access$0
    java.lang.Object access$1() -> access$1
com.parse.ParseCommandCache$1 -> com.parse.ParseCommandCache$1:
    com.parse.ParseCommandCache this$0 -> this$0
    void networkConnectivityStatusChanged(android.content.Intent) -> networkConnectivityStatusChanged
com.parse.ParseCommandCache$2 -> com.parse.ParseCommandCache$2:
    com.parse.ParseCommandCache this$0 -> this$0
    void run() -> run
com.parse.ParseCommandCache$3 -> com.parse.ParseCommandCache$3:
    com.parse.ParseCommandCache this$0 -> this$0
    com.parse.Capture val$finished -> val$finished
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommandCache$4 -> com.parse.ParseCommandCache$4:
    com.parse.ParseCommandCache this$0 -> this$0
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    java.lang.String val$localId -> val$localId
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseCommandCache$TestHelper -> com.parse.ParseCommandCache$TestHelper:
    int MAX_EVENTS -> MAX_EVENTS
    int COMMAND_SUCCESSFUL -> COMMAND_SUCCESSFUL
    int COMMAND_FAILED -> COMMAND_FAILED
    int COMMAND_ENQUEUED -> COMMAND_ENQUEUED
    int COMMAND_NOT_ENQUEUED -> COMMAND_NOT_ENQUEUED
    int OBJECT_UPDATED -> OBJECT_UPDATED
    int OBJECT_REMOVED -> OBJECT_REMOVED
    java.util.HashMap events -> events
    com.parse.ParseCommandCache this$0 -> this$0
    void clear() -> clear
    int unexpectedEvents() -> unexpectedEvents
    void notify(int) -> notify
    boolean waitFor(int) -> waitFor
com.parse.ParseDecoder -> com.parse.ParseDecoder:
    java.util.List convertJSONArrayToList(org.json.JSONArray) -> convertJSONArrayToList
    java.util.Map convertJSONObjectToMap(org.json.JSONObject) -> convertJSONObjectToMap
    com.parse.ParseObject decodePointer(java.lang.String,java.lang.String) -> decodePointer
    java.lang.Object decode(java.lang.Object) -> decode
com.parse.ParseDeleteOperation -> com.parse.ParseDeleteOperation:
    com.parse.ParseDeleteOperation defaultInstance -> defaultInstance
    com.parse.ParseDeleteOperation getInstance() -> getInstance
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseException -> com.parse.ParseException:
    long serialVersionUID -> serialVersionUID
    int code -> code
    int OTHER_CAUSE -> OTHER_CAUSE
    int INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    int CONNECTION_FAILED -> CONNECTION_FAILED
    int OBJECT_NOT_FOUND -> OBJECT_NOT_FOUND
    int INVALID_QUERY -> INVALID_QUERY
    int INVALID_CLASS_NAME -> INVALID_CLASS_NAME
    int MISSING_OBJECT_ID -> MISSING_OBJECT_ID
    int INVALID_KEY_NAME -> INVALID_KEY_NAME
    int INVALID_POINTER -> INVALID_POINTER
    int INVALID_JSON -> INVALID_JSON
    int COMMAND_UNAVAILABLE -> COMMAND_UNAVAILABLE
    int NOT_INITIALIZED -> NOT_INITIALIZED
    int INCORRECT_TYPE -> INCORRECT_TYPE
    int INVALID_CHANNEL_NAME -> INVALID_CHANNEL_NAME
    int PUSH_MISCONFIGURED -> PUSH_MISCONFIGURED
    int OBJECT_TOO_LARGE -> OBJECT_TOO_LARGE
    int OPERATION_FORBIDDEN -> OPERATION_FORBIDDEN
    int CACHE_MISS -> CACHE_MISS
    int INVALID_NESTED_KEY -> INVALID_NESTED_KEY
    int INVALID_FILE_NAME -> INVALID_FILE_NAME
    int INVALID_ACL -> INVALID_ACL
    int TIMEOUT -> TIMEOUT
    int INVALID_EMAIL_ADDRESS -> INVALID_EMAIL_ADDRESS
    int DUPLICATE_VALUE -> DUPLICATE_VALUE
    int INVALID_ROLE_NAME -> INVALID_ROLE_NAME
    int EXCEEDED_QUOTA -> EXCEEDED_QUOTA
    int SCRIPT_ERROR -> SCRIPT_ERROR
    int VALIDATION_ERROR -> VALIDATION_ERROR
    int FILE_DELETE_ERROR -> FILE_DELETE_ERROR
    int USERNAME_MISSING -> USERNAME_MISSING
    int PASSWORD_MISSING -> PASSWORD_MISSING
    int USERNAME_TAKEN -> USERNAME_TAKEN
    int EMAIL_TAKEN -> EMAIL_TAKEN
    int EMAIL_MISSING -> EMAIL_MISSING
    int EMAIL_NOT_FOUND -> EMAIL_NOT_FOUND
    int SESSION_MISSING -> SESSION_MISSING
    int MUST_CREATE_USER_THROUGH_SIGNUP -> MUST_CREATE_USER_THROUGH_SIGNUP
    int ACCOUNT_ALREADY_LINKED -> ACCOUNT_ALREADY_LINKED
    int LINKED_ID_MISSING -> LINKED_ID_MISSING
    int INVALID_LINKED_SESSION -> INVALID_LINKED_SESSION
    int UNSUPPORTED_SERVICE -> UNSUPPORTED_SERVICE
    int getCode() -> getCode
com.parse.ParseFacebookUtils -> com.parse.ParseFacebookUtils:
    com.parse.auth.FacebookAuthenticationProvider provider -> provider
    boolean isInitialized -> isInitialized
    com.facebook.android.Facebook getFacebook() -> getFacebook
    com.facebook.Session getSession() -> getSession
    boolean isLinked(com.parse.ParseUser) -> isLinked
    void initialize(java.lang.String) -> initialize
    void checkInitialization() -> checkInitialization
    void unlink(com.parse.ParseUser) -> unlink
    void unlinkInBackground(com.parse.ParseUser) -> unlinkInBackground
    void unlinkInBackground(com.parse.ParseUser,com.parse.SaveCallback) -> unlinkInBackground
    void link(com.parse.ParseUser,java.lang.String,java.lang.String,java.util.Date) -> link
    void link(com.parse.ParseUser,java.lang.String,java.lang.String,java.util.Date,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,java.util.Collection,android.app.Activity,int,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,java.util.Collection,android.app.Activity,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,java.util.Collection,android.app.Activity,int) -> link
    void link(com.parse.ParseUser,java.util.Collection,android.app.Activity) -> link
    void link(com.parse.ParseUser,android.app.Activity,int,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,android.app.Activity,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,android.app.Activity,int) -> link
    void link(com.parse.ParseUser,android.app.Activity) -> link
    void logIn(java.lang.String,java.lang.String,java.util.Date,com.parse.LogInCallback) -> logIn
    void logIn(java.util.Collection,android.app.Activity,int,com.parse.LogInCallback) -> logIn
    void logIn(android.app.Activity,int,com.parse.LogInCallback) -> logIn
    void logIn(java.util.Collection,android.app.Activity,com.parse.LogInCallback) -> logIn
    void logIn(android.app.Activity,com.parse.LogInCallback) -> logIn
    void finishAuthentication(int,int,android.content.Intent) -> finishAuthentication
    void saveLatestSessionData(com.parse.ParseUser,com.parse.SaveCallback) -> saveLatestSessionData
    void saveLatestSessionData(com.parse.ParseUser) -> saveLatestSessionData
    boolean shouldExtendAccessToken(com.parse.ParseUser) -> shouldExtendAccessToken
    void extendAccessToken(com.parse.ParseUser,android.content.Context,com.parse.SaveCallback) -> extendAccessToken
    boolean extendAccessTokenIfNeeded(com.parse.ParseUser,android.content.Context,com.parse.SaveCallback) -> extendAccessTokenIfNeeded
    com.parse.auth.FacebookAuthenticationProvider access$0() -> access$0
com.parse.ParseFacebookUtils$1 -> com.parse.ParseFacebookUtils$1:
    com.parse.ParseUser val$user -> val$user
    com.parse.SaveCallback val$callback -> val$callback
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
com.parse.ParseFacebookUtils$Permissions -> com.parse.ParseFacebookUtils$Permissions:
com.parse.ParseFacebookUtils$Permissions$Extended -> com.parse.ParseFacebookUtils$Permissions$Extended:
    java.lang.String READ_FRIEND_LISTS -> READ_FRIEND_LISTS
    java.lang.String READ_INSIGHTS -> READ_INSIGHTS
    java.lang.String READ_MAILBOX -> READ_MAILBOX
    java.lang.String READ_REQUESTS -> READ_REQUESTS
    java.lang.String READ_STREAM -> READ_STREAM
    java.lang.String XMPP_LOGIN -> XMPP_LOGIN
    java.lang.String ADS_MANAGEMENT -> ADS_MANAGEMENT
    java.lang.String CREATE_EVENT -> CREATE_EVENT
    java.lang.String MANAGE_FRIEND_LISTS -> MANAGE_FRIEND_LISTS
    java.lang.String MANAGE_NOTIFICATIONS -> MANAGE_NOTIFICATIONS
    java.lang.String OFFLINE_ACCESS -> OFFLINE_ACCESS
    java.lang.String PUBLISH_CHECKINS -> PUBLISH_CHECKINS
    java.lang.String PUBLISH_STREAM -> PUBLISH_STREAM
    java.lang.String RSVP_EVENT -> RSVP_EVENT
    java.lang.String PUBLISH_ACTIONS -> PUBLISH_ACTIONS
com.parse.ParseFacebookUtils$Permissions$Friends -> com.parse.ParseFacebookUtils$Permissions$Friends:
    java.lang.String ABOUT_ME -> ABOUT_ME
    java.lang.String ACTIVITIES -> ACTIVITIES
    java.lang.String BIRTHDAY -> BIRTHDAY
    java.lang.String CHECKINS -> CHECKINS
    java.lang.String EDUCATION_HISTORY -> EDUCATION_HISTORY
    java.lang.String EVENTS -> EVENTS
    java.lang.String GROUPS -> GROUPS
    java.lang.String HOMETOWN -> HOMETOWN
    java.lang.String INTERESTS -> INTERESTS
    java.lang.String LIKES -> LIKES
    java.lang.String LOCATION -> LOCATION
    java.lang.String NOTES -> NOTES
    java.lang.String ONLINE_PRESENCE -> ONLINE_PRESENCE
    java.lang.String PHOTOS -> PHOTOS
    java.lang.String QUESTIONS -> QUESTIONS
    java.lang.String RELATIONSHIPS -> RELATIONSHIPS
    java.lang.String RELATIONSHIP_DETAILS -> RELATIONSHIP_DETAILS
    java.lang.String RELIGION_POLITICS -> RELIGION_POLITICS
    java.lang.String STATUS -> STATUS
    java.lang.String VIDEOS -> VIDEOS
    java.lang.String WEBSITE -> WEBSITE
    java.lang.String WORK_HISTORY -> WORK_HISTORY
com.parse.ParseFacebookUtils$Permissions$Page -> com.parse.ParseFacebookUtils$Permissions$Page:
    java.lang.String MANAGE_PAGES -> MANAGE_PAGES
com.parse.ParseFacebookUtils$Permissions$User -> com.parse.ParseFacebookUtils$Permissions$User:
    java.lang.String ABOUT_ME -> ABOUT_ME
    java.lang.String ACTIVITIES -> ACTIVITIES
    java.lang.String BIRTHDAY -> BIRTHDAY
    java.lang.String CHECKINS -> CHECKINS
    java.lang.String EDUCATION_HISTORY -> EDUCATION_HISTORY
    java.lang.String EVENTS -> EVENTS
    java.lang.String GROUPS -> GROUPS
    java.lang.String HOMETOWN -> HOMETOWN
    java.lang.String INTERESTS -> INTERESTS
    java.lang.String LIKES -> LIKES
    java.lang.String LOCATION -> LOCATION
    java.lang.String NOTES -> NOTES
    java.lang.String ONLINE_PRESENCE -> ONLINE_PRESENCE
    java.lang.String PHOTOS -> PHOTOS
    java.lang.String QUESTIONS -> QUESTIONS
    java.lang.String RELATIONSHIPS -> RELATIONSHIPS
    java.lang.String RELATIONSHIP_DETAILS -> RELATIONSHIP_DETAILS
    java.lang.String RELIGION_POLITICS -> RELIGION_POLITICS
    java.lang.String STATUS -> STATUS
    java.lang.String VIDEOS -> VIDEOS
    java.lang.String WEBSITE -> WEBSITE
    java.lang.String WORK_HISTORY -> WORK_HISTORY
    java.lang.String EMAIL -> EMAIL
com.parse.ParseFieldOperation -> com.parse.ParseFieldOperation:
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
com.parse.ParseFieldOperations -> com.parse.ParseFieldOperations:
    java.util.Map opDecoderMap -> opDecoderMap
    void registerDecoder(java.lang.String,com.parse.ParseFieldOperations$ParseFieldOperationFactory) -> registerDecoder
    void registerDefaultDecoders() -> registerDefaultDecoders
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
    java.util.ArrayList jsonArrayAsArrayList(org.json.JSONArray) -> jsonArrayAsArrayList
com.parse.ParseFieldOperations$1 -> com.parse.ParseFieldOperations$1:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$2 -> com.parse.ParseFieldOperations$2:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$3 -> com.parse.ParseFieldOperations$3:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$4 -> com.parse.ParseFieldOperations$4:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$5 -> com.parse.ParseFieldOperations$5:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$6 -> com.parse.ParseFieldOperations$6:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$7 -> com.parse.ParseFieldOperations$7:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$8 -> com.parse.ParseFieldOperations$8:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$ParseFieldOperationFactory -> com.parse.ParseFieldOperations$ParseFieldOperationFactory:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFile -> com.parse.ParseFile:
    boolean dirty -> dirty
    java.lang.String name -> name
    java.lang.String url -> url
    byte[] data -> data
    org.apache.http.client.methods.HttpPost fileUploadPost -> fileUploadPost
    com.parse.TaskQueue taskQueue -> taskQueue
    java.util.Set currentTasks -> currentTasks
    java.io.File getCacheDir() -> getCacheDir
    void clearCache() -> clearCache
    java.io.File getFile() -> getFile
    java.lang.String getName() -> getName
    boolean isDirty() -> isDirty
    boolean isDataAvailable() -> isDataAvailable
    java.lang.String getUrl() -> getUrl
    com.parse.ParseCommand constructFileUploadCommand(java.lang.String) -> constructFileUploadCommand
    void prepareFileUploadPost(org.json.JSONObject,com.parse.ProgressCallback) -> prepareFileUploadPost
    com.parse.Task handleFileUploadResultAsync(org.json.JSONObject,com.parse.ProgressCallback) -> handleFileUploadResultAsync
    void save() -> save
    void save(com.parse.ProgressCallback) -> save
    com.parse.Task saveAsync(com.parse.ProgressCallback,com.parse.Task) -> saveAsync
    com.parse.Task saveAsync(com.parse.ProgressCallback) -> saveAsync
    void saveInBackground(com.parse.SaveCallback,com.parse.ProgressCallback) -> saveInBackground
    void saveInBackground(com.parse.SaveCallback) -> saveInBackground
    void saveInBackground() -> saveInBackground
    byte[] getData() -> getData
    com.parse.Task getDataAsync(com.parse.ProgressCallback,com.parse.Task) -> getDataAsync
    com.parse.Task getDataAsync(com.parse.ProgressCallback) -> getDataAsync
    void getDataInBackground(com.parse.GetDataCallback,com.parse.ProgressCallback) -> getDataInBackground
    void getDataInBackground(com.parse.GetDataCallback) -> getDataInBackground
    void cancel() -> cancel
    com.parse.ParseCommand access$0(com.parse.ParseFile,java.lang.String) -> access$0
    com.parse.Task access$1(com.parse.ParseFile,org.json.JSONObject,com.parse.ProgressCallback) -> access$1
    void access$2(com.parse.ParseFile,boolean) -> access$2
    java.util.Set access$3(com.parse.ParseFile) -> access$3
    java.lang.String access$4(com.parse.ParseFile) -> access$4
    com.parse.Task access$5(com.parse.ParseFile,com.parse.ProgressCallback,com.parse.Task) -> access$5
com.parse.ParseFile$1 -> com.parse.ParseFile$1:
    com.parse.ParseFile this$0 -> this$0
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
    com.parse.ParseFile access$1(com.parse.ParseFile$1) -> access$1
com.parse.ParseFile$1$1 -> com.parse.ParseFile$1$1:
    com.parse.ParseFile$1 this$1 -> this$1
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParseCommand call() -> call
    java.lang.Object call() -> call
com.parse.ParseFile$1$1$1 -> com.parse.ParseFile$1$1$1:
    com.parse.ParseFile$1$1 this$2 -> this$2
    com.parse.ParseCommand val$command -> val$command
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$1$2 -> com.parse.ParseFile$1$2:
    com.parse.ParseFile$1 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$1$3 -> com.parse.ParseFile$1$3:
    com.parse.ParseFile$1 this$1 -> this$1
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$1$4 -> com.parse.ParseFile$1$4:
    com.parse.ParseFile$1 this$1 -> this$1
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$1$5 -> com.parse.ParseFile$1$5:
    com.parse.ParseFile$1 this$1 -> this$1
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$2 -> com.parse.ParseFile$2:
    com.parse.ParseFile this$0 -> this$0
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$3 -> com.parse.ParseFile$3:
    com.parse.ParseFile this$0 -> this$0
    byte[] then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$4 -> com.parse.ParseFile$4:
    com.parse.ParseFile this$0 -> this$0
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
    com.parse.ParseFile access$1(com.parse.ParseFile$4) -> access$1
com.parse.ParseFile$4$1 -> com.parse.ParseFile$4$1:
    com.parse.ParseFile$4 this$1 -> this$1
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$4$2 -> com.parse.ParseFile$4$2:
    com.parse.ParseFile$4 this$1 -> this$1
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFile$5 -> com.parse.ParseFile$5:
    com.parse.ParseFile this$0 -> this$0
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseFileUtils -> com.parse.ParseFileUtils:
    byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    java.io.FileInputStream openInputStream(java.io.File) -> openInputStream
    void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    java.io.FileOutputStream openOutputStream(java.io.File) -> openOutputStream
com.parse.ParseGeoPoint -> com.parse.ParseGeoPoint:
    double EARTH_MEAN_RADIUS_KM -> EARTH_MEAN_RADIUS_KM
    double EARTH_MEAN_RADIUS_MILE -> EARTH_MEAN_RADIUS_MILE
    double latitude -> latitude
    double longitude -> longitude
    void setLatitude(double) -> setLatitude
    double getLatitude() -> getLatitude
    void setLongitude(double) -> setLongitude
    double getLongitude() -> getLongitude
    double distanceInRadiansTo(com.parse.ParseGeoPoint) -> distanceInRadiansTo
    double distanceInKilometersTo(com.parse.ParseGeoPoint) -> distanceInKilometersTo
    double distanceInMilesTo(com.parse.ParseGeoPoint) -> distanceInMilesTo
    void getCurrentLocationInBackground(long,com.parse.LocationCallback) -> getCurrentLocationInBackground
    void getCurrentLocationInBackground(long,android.location.Criteria,com.parse.LocationCallback) -> getCurrentLocationInBackground
com.parse.ParseIOUtils -> com.parse.ParseIOUtils:
    int EOF -> EOF
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int SKIP_BUFFER_SIZE -> SKIP_BUFFER_SIZE
    byte[] SKIP_BYTE_BUFFER -> SKIP_BYTE_BUFFER
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    int copy(java.io.InputStream,java.io.OutputStream) -> copy
    long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    long copyLarge(java.io.InputStream,java.io.OutputStream,byte[]) -> copyLarge
    long copyLarge(java.io.InputStream,java.io.OutputStream,long,long) -> copyLarge
    long skip(java.io.InputStream,long) -> skip
    long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[]) -> copyLarge
    void skipFully(java.io.InputStream,long) -> skipFully
    void closeQuietly(java.io.InputStream) -> closeQuietly
    void closeQuietly(java.io.OutputStream) -> closeQuietly
com.parse.ParseImageView -> com.parse.ParseImageView:
    com.parse.ParseFile file -> file
    android.graphics.drawable.Drawable placeholder -> placeholder
    boolean isLoaded -> isLoaded
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setPlaceholder(android.graphics.drawable.Drawable) -> setPlaceholder
    void setParseFile(com.parse.ParseFile) -> setParseFile
    void loadInBackground() -> loadInBackground
    void loadInBackground(com.parse.GetDataCallback) -> loadInBackground
    com.parse.ParseFile access$0(com.parse.ParseImageView) -> access$0
com.parse.ParseImageView$1 -> com.parse.ParseImageView$1:
    com.parse.ParseImageView this$0 -> this$0
    com.parse.ParseFile val$loadingFile -> val$loadingFile
    com.parse.GetDataCallback val$completionCallback -> val$completionCallback
    void done(byte[],com.parse.ParseException) -> done
com.parse.ParseIncrementOperation -> com.parse.ParseIncrementOperation:
    java.lang.Number amount -> amount
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseInstallation -> com.parse.ParseInstallation:
    java.lang.String TAG -> TAG
    java.lang.Object installationLock -> installationLock
    com.parse.ParseInstallation currentInstallation -> currentInstallation
    java.lang.String installationId -> installationId
    java.lang.String INSTALLATION_ID_LOCATION -> INSTALLATION_ID_LOCATION
    java.lang.String STORAGE_LOCATION -> STORAGE_LOCATION
    java.util.List readonlyFields -> readonlyFields
    void setDefaultValues() -> setDefaultValues
    boolean hasCurrentInstallation() -> hasCurrentInstallation
    com.parse.ParseInstallation getCurrentInstallation() -> getCurrentInstallation
    com.parse.ParseQuery getQuery() -> getQuery
    java.lang.String getOrCreateCurrentInstallationId() -> getOrCreateCurrentInstallationId
    void setCurrentInstallationId(java.lang.String) -> setCurrentInstallationId
    java.lang.String getInstallationId() -> getInstallationId
    void checkKeyIsMutable(java.lang.String) -> checkKeyIsMutable
    void put(java.lang.String,java.lang.Object) -> put
    void remove(java.lang.String) -> remove
    com.parse.Task saveAsync(com.parse.Task) -> saveAsync
    void saveEventually(com.parse.SaveCallback) -> saveEventually
    com.parse.Task fetchAsync(com.parse.Task) -> fetchAsync
    void handleSaveResult(java.lang.String,org.json.JSONObject,java.util.Map) -> handleSaveResult
    void handleFetchResult(org.json.JSONObject) -> handleFetchResult
    void maybeUpdateInstallationIdOnDisk() -> maybeUpdateInstallationIdOnDisk
    void updateTimezone() -> updateTimezone
    void updateVersionInfo() -> updateVersionInfo
    void updateDeviceInfo() -> updateDeviceInfo
    com.parse.PushType getPushType() -> getPushType
    void setPushType(com.parse.PushType) -> setPushType
    void removePushType() -> removePushType
    java.lang.String getDeviceToken() -> getDeviceToken
    boolean isDeviceTokenStale() -> isDeviceTokenStale
    void setDeviceTokenLastModified(long) -> setDeviceTokenLastModified
    void setDeviceToken(java.lang.String) -> setDeviceToken
    void removeDeviceToken() -> removeDeviceToken
    void maybeFlushToDisk(com.parse.ParseInstallation) -> maybeFlushToDisk
    void clearCurrentInstallationFromMemory() -> clearCurrentInstallationFromMemory
    void clearCurrentInstallationFromDisk(android.content.Context) -> clearCurrentInstallationFromDisk
    boolean needsDefaultACL() -> needsDefaultACL
    com.parse.Task access$0(com.parse.ParseInstallation,com.parse.Task) -> access$0
com.parse.ParseInstallation$1 -> com.parse.ParseInstallation$1:
    com.parse.ParseInstallation this$0 -> this$0
    com.parse.Task val$toAwait -> val$toAwait
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseJSONCacheItem -> com.parse.ParseJSONCacheItem:
    org.json.JSONObject json -> json
    java.lang.String hashValue -> hashValue
    boolean equals(com.parse.ParseJSONCacheItem) -> equals
    java.lang.String getHashValue() -> getHashValue
    java.lang.Object getJSONObject() -> getJSONObject
com.parse.ParseMulticastDelegate -> com.parse.ParseMulticastDelegate:
    java.util.List callbacks -> callbacks
    void subscribe(com.parse.ParseCallback) -> subscribe
    void unsubscribe(com.parse.ParseCallback) -> unsubscribe
    void invoke(java.lang.Object,com.parse.ParseException) -> invoke
    void clear() -> clear
com.parse.ParseNotificationManager -> com.parse.ParseNotificationManager:
    java.lang.String TAG -> TAG
    java.lang.Object lock -> lock
    java.util.concurrent.atomic.AtomicInteger notificationCount -> notificationCount
    boolean shouldShowNotifications -> shouldShowNotifications
    android.util.SparseIntArray iconIds -> iconIds
    com.parse.ParseNotificationManager getInstance() -> getInstance
    boolean getShouldShowNotifications() -> getShouldShowNotifications
    void setShouldShowNotifications(boolean) -> setShouldShowNotifications
    int getNotificationCount() -> getNotificationCount
    boolean isValidIconId(android.content.Context,int) -> isValidIconId
    android.app.Notification createNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.Class,int,android.os.Bundle) -> createNotification
    void showNotification(android.content.Context,android.app.Notification) -> showNotification
    void showNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.Class,int,android.os.Bundle) -> showNotification
com.parse.ParseNotificationManager$Singleton -> com.parse.ParseNotificationManager$Singleton:
    com.parse.ParseNotificationManager INSTANCE -> INSTANCE
    com.parse.ParseNotificationManager access$0() -> access$0
com.parse.ParseObject -> com.parse.ParseObject:
    java.lang.String TAG -> TAG
    java.lang.String server -> server
    java.lang.String API_VERSION -> API_VERSION
    java.lang.String AUTO_CLASS_NAME -> AUTO_CLASS_NAME
    java.lang.String VERSION_NAME -> VERSION_NAME
    java.util.Map classNames -> classNames
    java.util.Map objectTypes -> objectTypes
    java.text.DateFormat impreciseDateFormat -> impreciseDateFormat
    boolean dirty -> dirty
    java.lang.String objectId -> objectId
    java.lang.String localId -> localId
    java.lang.String className -> className
    com.parse.ParseMulticastDelegate saveEvent -> saveEvent
    java.util.Map serverData -> serverData
    java.util.LinkedList operationSetQueue -> operationSetQueue
    java.util.Map estimatedData -> estimatedData
    java.util.Map dataAvailability -> dataAvailability
    java.lang.Object mutex -> mutex
    com.parse.TaskQueue taskQueue -> taskQueue
    java.util.Map hashedObjects -> hashedObjects
    boolean hasBeenFetched -> hasBeenFetched
    java.util.Date updatedAt -> updatedAt
    java.util.Date createdAt -> createdAt
    java.lang.ThreadLocal isCreatingPointer -> isCreatingPointer
    com.parse.ParseObject create(java.lang.String) -> create
    com.parse.ParseObject create(java.lang.Class) -> create
    com.parse.ParseObject createWithoutData(java.lang.String,java.lang.String) -> createWithoutData
    com.parse.ParseObject createWithoutData(java.lang.Class,java.lang.String) -> createWithoutData
    boolean isAccessible(java.lang.reflect.Member) -> isAccessible
    void registerSubclass(java.lang.Class) -> registerSubclass
    void unregisterSubclass(java.lang.String) -> unregisterSubclass
    java.lang.String getApplicationId() -> getApplicationId
    com.parse.Task enqueueForAll(java.util.List,com.parse.Continuation) -> enqueueForAll
    java.util.Date impreciseParseDate(java.lang.String) -> impreciseParseDate
    org.json.JSONObject getDiskObject(android.content.Context,java.lang.String) -> getDiskObject
    org.json.JSONObject getDiskObject(java.io.File) -> getDiskObject
    void saveDiskObject(android.content.Context,java.lang.String,org.json.JSONObject) -> saveDiskObject
    void saveDiskObject(java.io.File,org.json.JSONObject) -> saveDiskObject
    void deleteDiskObject(android.content.Context,java.lang.String) -> deleteDiskObject
    void saveToDisk(android.content.Context,java.lang.String) -> saveToDisk
    void addToHashedObjects(java.lang.Object) -> addToHashedObjects
    com.parse.ParseObject getFromDisk(android.content.Context,java.lang.String) -> getFromDisk
    com.parse.ParseObject fromJSONObjectForDataFile(org.json.JSONObject,com.parse.ParseDecoder,boolean) -> fromJSONObjectForDataFile
    com.parse.ParseObject fromJSON(org.json.JSONObject,java.lang.String,boolean) -> fromJSON
    com.parse.ParseObject fromJSON(org.json.JSONObject,java.lang.String,boolean,com.parse.ParseDecoder) -> fromJSON
    java.lang.String getClassName() -> getClassName
    java.util.Set keySet() -> keySet
    java.util.Date getUpdatedAt() -> getUpdatedAt
    java.util.Date getCreatedAt() -> getCreatedAt
    void copyChangesFrom(com.parse.ParseObject) -> copyChangesFrom
    void mergeFromObject(com.parse.ParseObject) -> mergeFromObject
    void revert() -> revert
    void mergeAfterFetch(org.json.JSONObject,com.parse.ParseDecoder,boolean) -> mergeAfterFetch
    void mergeAfterSave(org.json.JSONObject,com.parse.ParseDecoder,boolean,java.util.Map) -> mergeAfterSave
    java.util.Map collectFetchedObjects() -> collectFetchedObjects
    void mergeFromServer(org.json.JSONObject,com.parse.ParseDecoder,boolean) -> mergeFromServer
    org.json.JSONObject toRest(com.parse.ParseObjectEncodingStrategy) -> toRest
    com.parse.ParseObject fromREST(org.json.JSONObject,com.parse.ParseDecoder) -> fromREST
    void mergeREST(org.json.JSONObject,com.parse.ParseDecoder) -> mergeREST
    boolean hasDirtyChildren() -> hasDirtyChildren
    boolean isDirty() -> isDirty
    boolean isDirty(boolean) -> isDirty
    boolean isDirty(java.lang.String) -> isDirty
    void checkpointAllMutableContainers() -> checkpointAllMutableContainers
    void checkpointMutableContainer(java.lang.Object) -> checkpointMutableContainer
    void checkForChangesToMutableContainer(java.lang.String,java.lang.Object) -> checkForChangesToMutableContainer
    void checkForChangesToMutableContainers() -> checkForChangesToMutableContainers
    java.lang.String getObjectId() -> getObjectId
    java.lang.String getOrCreateLocalId() -> getOrCreateLocalId
    void setObjectId(java.lang.String) -> setObjectId
    void setObjectIdInternal(java.lang.String) -> setObjectIdInternal
    void findUnsavedChildren(java.lang.Object,java.util.List) -> findUnsavedChildren
    com.parse.ParseCommand constructSaveCommand(java.util.Map,com.parse.ParseObjectEncodingStrategy,java.lang.String) -> constructSaveCommand
    org.json.JSONObject toJSONObjectForDataFile(boolean,com.parse.ParseObjectEncodingStrategy) -> toJSONObjectForDataFile
    org.json.JSONObject toJSONObjectForSaving(java.util.Map,com.parse.ParseObjectEncodingStrategy) -> toJSONObjectForSaving
    void handleSaveResult(java.lang.String,org.json.JSONObject,java.util.Map) -> handleSaveResult
    java.util.Map startSave() -> startSave
    void validateSave() -> validateSave
    void save() -> save
    com.parse.Task saveAsync(com.parse.Task) -> saveAsync
    com.parse.Task saveAsync() -> saveAsync
    void saveInBackground(com.parse.SaveCallback) -> saveInBackground
    void saveInBackground() -> saveInBackground
    void saveEventually() -> saveEventually
    void saveEventually(com.parse.SaveCallback) -> saveEventually
    void deleteEventually() -> deleteEventually
    void deleteEventually(com.parse.DeleteCallback) -> deleteEventually
    void handleFetchResult(org.json.JSONObject) -> handleFetchResult
    void refresh() -> refresh
    void refreshInBackground(com.parse.RefreshCallback) -> refreshInBackground
    com.parse.ParseObject fetch() -> fetch
    com.parse.Task fetchAsync(com.parse.Task) -> fetchAsync
    com.parse.Task fetchAsync() -> fetchAsync
    void fetchInBackground(com.parse.GetCallback) -> fetchInBackground
    com.parse.Task fetchIfNeededAsync() -> fetchIfNeededAsync
    com.parse.ParseObject fetchIfNeeded() -> fetchIfNeeded
    void fetchIfNeededInBackground(com.parse.GetCallback) -> fetchIfNeededInBackground
    com.parse.ParseCommand constructDeleteCommand(boolean,java.lang.String) -> constructDeleteCommand
    void validateDelete() -> validateDelete
    com.parse.Task deleteAsync(com.parse.Task) -> deleteAsync
    com.parse.Task deleteAsync() -> deleteAsync
    void delete() -> delete
    void deleteInBackground(com.parse.DeleteCallback) -> deleteInBackground
    void deleteInBackground() -> deleteInBackground
    com.parse.Task deleteAllAsync(java.util.List,java.lang.String) -> deleteAllAsync
    void deleteAll(java.util.List) -> deleteAll
    void deleteAllInBackground(java.util.List,com.parse.DeleteCallback) -> deleteAllInBackground
    void collectDirtyChildren(java.lang.Object,java.util.List,java.util.List,java.util.IdentityHashMap,java.util.IdentityHashMap) -> collectDirtyChildren
    void collectDirtyChildren(java.lang.Object,java.util.List,java.util.List) -> collectDirtyChildren
    boolean canBeSerializedAsValue(java.lang.Object) -> canBeSerializedAsValue
    boolean canBeSerialized() -> canBeSerialized
    com.parse.Task deepSaveAsync(java.lang.Object,java.lang.String) -> deepSaveAsync
    com.parse.Task saveAllAsync(java.util.List) -> saveAllAsync
    void saveAll(java.util.List) -> saveAll
    com.parse.Task fetchAllIfNeededAsync(java.util.List,com.parse.Task) -> fetchAllIfNeededAsync
    com.parse.Task fetchAllIfNeededAsync(java.util.List) -> fetchAllIfNeededAsync
    java.util.List fetchAllIfNeeded(java.util.List) -> fetchAllIfNeeded
    void fetchAllIfNeededInBackground(java.util.List,com.parse.FindCallback) -> fetchAllIfNeededInBackground
    com.parse.Task fetchAllAsync(java.util.List,com.parse.Task) -> fetchAllAsync
    com.parse.Task fetchAllAsync(java.util.List) -> fetchAllAsync
    java.util.List fetchAll(java.util.List) -> fetchAll
    void fetchAllInBackground(java.util.List,com.parse.FindCallback) -> fetchAllInBackground
    void saveAllInBackground(java.util.List,com.parse.SaveCallback) -> saveAllInBackground
    void saveAllInBackground(java.util.List) -> saveAllInBackground
    void remove(java.lang.String) -> remove
    boolean has(java.lang.String) -> has
    java.util.Map currentOperations() -> currentOperations
    void applyOperations(java.util.Map,java.util.Map) -> applyOperations
    void rebuildEstimatedData() -> rebuildEstimatedData
    void performOperation(java.lang.String,com.parse.ParseFieldOperation) -> performOperation
    void put(java.lang.String,java.lang.Object) -> put
    void increment(java.lang.String) -> increment
    void increment(java.lang.String,java.lang.Number) -> increment
    void add(java.lang.String,java.lang.Object) -> add
    void addAll(java.lang.String,java.util.Collection) -> addAll
    void addUnique(java.lang.String,java.lang.Object) -> addUnique
    void addAllUnique(java.lang.String,java.util.Collection) -> addAllUnique
    void removeAll(java.lang.String,java.util.Collection) -> removeAll
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.String getString(java.lang.String) -> getString
    byte[] getBytes(java.lang.String) -> getBytes
    java.lang.Number getNumber(java.lang.String) -> getNumber
    org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    java.util.List getList(java.lang.String) -> getList
    java.util.Map getMap(java.lang.String) -> getMap
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    int getInt(java.lang.String) -> getInt
    double getDouble(java.lang.String) -> getDouble
    long getLong(java.lang.String) -> getLong
    boolean getBoolean(java.lang.String) -> getBoolean
    java.util.Date getDate(java.lang.String) -> getDate
    com.parse.ParseObject getParseObject(java.lang.String) -> getParseObject
    com.parse.ParseUser getParseUser(java.lang.String) -> getParseUser
    com.parse.ParseFile getParseFile(java.lang.String) -> getParseFile
    com.parse.ParseGeoPoint getParseGeoPoint(java.lang.String) -> getParseGeoPoint
    com.parse.ParseACL getACL() -> getACL
    com.parse.ParseACL getACL(boolean) -> getACL
    void setACL(com.parse.ParseACL) -> setACL
    boolean isDataAvailable() -> isDataAvailable
    boolean isDataAvailable(java.lang.String) -> isDataAvailable
    com.parse.ParseRelation getRelation(java.lang.String) -> getRelation
    java.lang.Object get(java.lang.String) -> get
    void checkGetAccess(java.lang.String) -> checkGetAccess
    boolean hasSameId(com.parse.ParseObject) -> hasSameId
    void registerSaveListener(com.parse.GetCallback) -> registerSaveListener
    void unregisterSaveListener(com.parse.GetCallback) -> unregisterSaveListener
    java.lang.String getClassName(java.lang.Class) -> getClassName
    void setDefaultValues() -> setDefaultValues
    boolean needsDefaultACL() -> needsDefaultACL
    void registerParseSubclasses() -> registerParseSubclasses
    java.lang.String access$0(com.parse.ParseObject) -> access$0
    boolean access$1(com.parse.ParseObject,java.lang.String) -> access$1
    com.parse.ParseACL access$2(com.parse.ParseObject,boolean) -> access$2
    java.util.Map access$3(com.parse.ParseObject) -> access$3
    com.parse.Task access$4(java.lang.Object,java.lang.String) -> access$4
    java.lang.String access$5(com.parse.ParseObject) -> access$5
    com.parse.ParseCommand access$6(com.parse.ParseObject,boolean,java.lang.String) -> access$6
    com.parse.Task access$7(com.parse.ParseObject,com.parse.Task) -> access$7
    boolean access$8(com.parse.ParseObject) -> access$8
    com.parse.Task access$9(java.util.List,com.parse.Task) -> access$9
    com.parse.Task access$10(java.util.List,com.parse.Task) -> access$10
com.parse.ParseObject$1 -> com.parse.ParseObject$1:
    java.lang.Boolean initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.parse.ParseObject$10 -> com.parse.ParseObject$10:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Capture val$succeeded -> val$succeeded
    com.parse.ParseCommandCache val$cache -> val$cache
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$11 -> com.parse.ParseObject$11:
    com.parse.ParseObject this$0 -> this$0
    com.parse.ParseCommandCache val$cache -> val$cache
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$12 -> com.parse.ParseObject$12:
    com.parse.ParseObject this$0 -> this$0
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseCommand call() -> call
    java.lang.Object call() -> call
com.parse.ParseObject$13 -> com.parse.ParseObject$13:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$14 -> com.parse.ParseObject$14:
    com.parse.ParseObject this$0 -> this$0
    com.parse.ParseObject then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$15 -> com.parse.ParseObject$15:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$16 -> com.parse.ParseObject$16:
    com.parse.ParseObject this$0 -> this$0
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseCommand call() -> call
    java.lang.Object call() -> call
com.parse.ParseObject$17 -> com.parse.ParseObject$17:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$18 -> com.parse.ParseObject$18:
    com.parse.ParseObject this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$19 -> com.parse.ParseObject$19:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$2 -> com.parse.ParseObject$2:
    java.util.List val$childTasks -> val$childTasks
    com.parse.Task val$fullTask -> val$fullTask
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$20 -> com.parse.ParseObject$20:
    java.util.List val$uniqueObjects -> val$uniqueObjects
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$20$1 -> com.parse.ParseObject$20$1:
    com.parse.ParseObject$20 this$1 -> this$1
    java.util.List val$uniqueObjects -> val$uniqueObjects
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$20$1$1 -> com.parse.ParseObject$20$1$1:
    com.parse.ParseObject$20$1 this$2 -> this$2
    java.util.List val$uniqueObjects -> val$uniqueObjects
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21 -> com.parse.ParseObject$21:
    java.util.List val$objects -> val$objects
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$1 -> com.parse.ParseObject$21$1:
    com.parse.ParseObject$21 this$1 -> this$1
    com.parse.Capture val$remaining -> val$remaining
    java.lang.Boolean call() -> call
    java.lang.Object call() -> call
com.parse.ParseObject$21$2 -> com.parse.ParseObject$21$2:
    com.parse.ParseObject$21 this$1 -> this$1
    com.parse.Capture val$remaining -> val$remaining
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$2$1 -> com.parse.ParseObject$21$2$1:
    com.parse.ParseObject$21$2 this$2 -> this$2
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$2$2 -> com.parse.ParseObject$21$2$2:
    com.parse.ParseObject$21$2 this$2 -> this$2
    java.util.List val$current -> val$current
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$2$3 -> com.parse.ParseObject$21$2$3:
    com.parse.ParseObject$21$2 this$2 -> this$2
    java.util.List val$current -> val$current
    java.util.List val$operations -> val$operations
    java.lang.String val$sessionToken -> val$sessionToken
    java.util.List val$ops -> val$ops
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$2$3$1 -> com.parse.ParseObject$21$2$3$1:
    com.parse.ParseObject$21$2$3 this$3 -> this$3
    java.util.List val$current -> val$current
    java.util.List val$operations -> val$operations
    java.lang.String val$sessionToken -> val$sessionToken
    java.util.List val$ops -> val$ops
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$2$3$1$1 -> com.parse.ParseObject$21$2$3$1$1:
    com.parse.ParseObject$21$2$3$1 this$4 -> this$4
    java.util.List val$current -> val$current
    java.util.List val$operations -> val$operations
    java.lang.String val$sessionToken -> val$sessionToken
    java.util.List val$ops -> val$ops
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$21$2$3$1$1$1 -> com.parse.ParseObject$21$2$3$1$1$1:
    com.parse.ParseObject$21$2$3$1$1 this$5 -> this$5
    java.util.List val$current -> val$current
    java.util.List val$ops -> val$ops
    java.util.List val$operations -> val$operations
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$22 -> com.parse.ParseObject$22:
    com.parse.ParseQuery val$query -> val$query
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$23 -> com.parse.ParseObject$23:
    java.util.List val$objects -> val$objects
    java.util.List then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$24 -> com.parse.ParseObject$24:
    java.util.List val$objects -> val$objects
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$25 -> com.parse.ParseObject$25:
    com.parse.ParseQuery val$query -> val$query
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$26 -> com.parse.ParseObject$26:
    java.util.List val$objects -> val$objects
    java.util.List then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$27 -> com.parse.ParseObject$27:
    java.util.List val$objects -> val$objects
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$3 -> com.parse.ParseObject$3:
    com.parse.Task$TaskCompletionSource val$readyToStart -> val$readyToStart
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$4 -> com.parse.ParseObject$4:
    com.parse.ParseObject this$0 -> this$0
    java.util.Map val$fetchedObjects -> val$fetchedObjects
    boolean visit(java.lang.Object) -> visit
com.parse.ParseObject$5 -> com.parse.ParseObject$5:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Capture val$operations -> val$operations
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
    com.parse.ParseObject access$1(com.parse.ParseObject$5) -> access$1
com.parse.ParseObject$5$1 -> com.parse.ParseObject$5$1:
    com.parse.ParseObject$5 this$1 -> this$1
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$6 -> com.parse.ParseObject$6:
    com.parse.ParseObject this$0 -> this$0
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$7 -> com.parse.ParseObject$7:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Capture val$operations -> val$operations
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
    com.parse.ParseObject access$1(com.parse.ParseObject$7) -> access$1
com.parse.ParseObject$7$1 -> com.parse.ParseObject$7$1:
    com.parse.ParseObject$7 this$1 -> this$1
    com.parse.ParseCommand val$command -> val$command
    com.parse.Capture val$operations -> val$operations
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$8 -> com.parse.ParseObject$8:
    com.parse.ParseObject this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObject$9 -> com.parse.ParseObject$9:
    com.parse.ParseObject this$0 -> this$0
    com.parse.ParseCommand val$command -> val$command
    java.util.Map val$operations -> val$operations
    com.parse.Capture val$succeeded -> val$succeeded
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseObjectEncodingStrategy -> com.parse.ParseObjectEncodingStrategy:
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.ParsePush -> com.parse.ParsePush:
    java.lang.String TAG -> TAG
    java.util.Set channelSet -> channelSet
    com.parse.ParseQuery query -> query
    java.lang.Long expirationTime -> expirationTime
    java.lang.Long expirationTimeInterval -> expirationTimeInterval
    java.lang.Boolean pushToIOS -> pushToIOS
    java.lang.Boolean pushToAndroid -> pushToAndroid
    org.json.JSONObject data -> data
    void sendMessageInBackground(java.lang.String,com.parse.ParseQuery) -> sendMessageInBackground
    void sendMessageInBackground(java.lang.String,com.parse.ParseQuery,com.parse.SendCallback) -> sendMessageInBackground
    void sendDataInBackground(org.json.JSONObject,com.parse.ParseQuery) -> sendDataInBackground
    void sendDataInBackground(org.json.JSONObject,com.parse.ParseQuery,com.parse.SendCallback) -> sendDataInBackground
    void setChannel(java.lang.String) -> setChannel
    void setChannels(java.util.Collection) -> setChannels
    void setQuery(com.parse.ParseQuery) -> setQuery
    void setExpirationTime(long) -> setExpirationTime
    void setExpirationTimeInterval(long) -> setExpirationTimeInterval
    void clearExpiration() -> clearExpiration
    void setPushToIOS(boolean) -> setPushToIOS
    void setPushToAndroid(boolean) -> setPushToAndroid
    void setData(org.json.JSONObject) -> setData
    void setMessage(java.lang.String) -> setMessage
    com.parse.Task sendAsync() -> sendAsync
    void send() -> send
    void sendInBackground(com.parse.SendCallback) -> sendInBackground
    void sendInBackground() -> sendInBackground
    com.parse.ParseCommand buildCommand(java.lang.String) -> buildCommand
com.parse.ParsePush$1 -> com.parse.ParsePush$1:
    com.parse.ParsePush this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery -> com.parse.ParseQuery:
    java.lang.String TAG -> TAG
    java.lang.String className -> className
    com.parse.ParseQuery$QueryConstraints where -> where
    java.util.ArrayList include -> include
    java.util.ArrayList selectedKeys -> selectedKeys
    int limit -> limit
    boolean trace -> trace
    int skip -> skip
    java.lang.String order -> order
    long queryStart -> queryStart
    long querySent -> querySent
    long queryReceived -> queryReceived
    long objectsParsed -> objectsParsed
    java.lang.Object isRunningLock -> isRunningLock
    com.parse.ParseCommand currentCommand -> currentCommand
    boolean isRunning -> isRunning
    java.util.HashMap extraOptions -> extraOptions
    com.parse.ParseQuery$CachePolicy cachePolicy -> cachePolicy
    long maxCacheAge -> maxCacheAge
    int[] $SWITCH_TABLE$com$parse$ParseQuery$CachePolicy -> $SWITCH_TABLE$com$parse$ParseQuery$CachePolicy
    com.parse.ParseQuery or(java.util.List) -> or
    com.parse.ParseQuery getQuery(java.lang.Class) -> getQuery
    com.parse.ParseQuery getQuery(java.lang.String) -> getQuery
    com.parse.ParseQuery getUserQuery() -> getUserQuery
    void checkIfRunning() -> checkIfRunning
    void checkIfRunning(boolean) -> checkIfRunning
    com.parse.ParseQuery$QueryConstraints getConstraints() -> getConstraints
    org.json.JSONObject toREST() -> toREST
    org.json.JSONObject toJSON() -> toJSON
    com.parse.ParseCommand makeFindCommand(java.lang.String) -> makeFindCommand
    java.util.List convertFindResponse(org.json.JSONObject) -> convertFindResponse
    com.parse.Task runCommandWithPolicyAsync(com.parse.ParseQuery$CommandDelegate,com.parse.ParseQuery$CachePolicy) -> runCommandWithPolicyAsync
    com.parse.Task countWithCachePolicyAsync(com.parse.ParseQuery$CachePolicy) -> countWithCachePolicyAsync
    com.parse.Task findWithCachePolicyAsync(com.parse.ParseQuery$CachePolicy) -> findWithCachePolicyAsync
    com.parse.Task getFirstWithCachePolicyAsync(com.parse.ParseQuery$CachePolicy) -> getFirstWithCachePolicyAsync
    com.parse.Task getWithCachePolicyAsync(java.lang.String,com.parse.ParseQuery$CachePolicy) -> getWithCachePolicyAsync
    void cancel() -> cancel
    java.util.List find() -> find
    com.parse.ParseObject getFirst() -> getFirst
    com.parse.Task findFromNetworkAsync(boolean) -> findFromNetworkAsync
    void setCachePolicy(com.parse.ParseQuery$CachePolicy) -> setCachePolicy
    com.parse.ParseQuery$CachePolicy getCachePolicy() -> getCachePolicy
    void setMaxCacheAge(long) -> setMaxCacheAge
    long getMaxCacheAge() -> getMaxCacheAge
    java.util.List findFromCache() -> findFromCache
    java.lang.Integer countFromCache() -> countFromCache
    com.parse.Task doWithRunningCheck(java.util.concurrent.Callable) -> doWithRunningCheck
    void doInBackground(com.parse.ParseQuery$CallableWithCachePolicy,com.parse.ParseCallback) -> doInBackground
    void findInBackground(com.parse.FindCallback) -> findInBackground
    void getFirstInBackground(com.parse.GetCallback) -> getFirstInBackground
    com.parse.ParseCommand makeCountCommand(java.lang.String) -> makeCountCommand
    int count() -> count
    com.parse.Task countFromNetworkAsync() -> countFromNetworkAsync
    void countInBackground(com.parse.CountCallback) -> countInBackground
    com.parse.ParseObject get(java.lang.String) -> get
    boolean hasCachedResult() -> hasCachedResult
    void clearCachedResult() -> clearCachedResult
    void clearAllCachedResults() -> clearAllCachedResults
    void getInBackground(java.lang.String,com.parse.GetCallback) -> getInBackground
    com.parse.ParseQuery whereEqualTo(java.lang.String,java.lang.Object) -> whereEqualTo
    void addCondition(java.lang.String,java.lang.String,java.lang.Object) -> addCondition
    com.parse.ParseQuery whereLessThan(java.lang.String,java.lang.Object) -> whereLessThan
    com.parse.ParseQuery whereNotEqualTo(java.lang.String,java.lang.Object) -> whereNotEqualTo
    com.parse.ParseQuery whereGreaterThan(java.lang.String,java.lang.Object) -> whereGreaterThan
    com.parse.ParseQuery whereLessThanOrEqualTo(java.lang.String,java.lang.Object) -> whereLessThanOrEqualTo
    com.parse.ParseQuery whereGreaterThanOrEqualTo(java.lang.String,java.lang.Object) -> whereGreaterThanOrEqualTo
    com.parse.ParseQuery whereContainedIn(java.lang.String,java.util.Collection) -> whereContainedIn
    com.parse.ParseQuery whereContainsAll(java.lang.String,java.util.Collection) -> whereContainsAll
    com.parse.ParseQuery whereMatchesQuery(java.lang.String,com.parse.ParseQuery) -> whereMatchesQuery
    com.parse.ParseQuery whereDoesNotMatchQuery(java.lang.String,com.parse.ParseQuery) -> whereDoesNotMatchQuery
    com.parse.ParseQuery whereMatchesKeyInQuery(java.lang.String,java.lang.String,com.parse.ParseQuery) -> whereMatchesKeyInQuery
    com.parse.ParseQuery whereDoesNotMatchKeyInQuery(java.lang.String,java.lang.String,com.parse.ParseQuery) -> whereDoesNotMatchKeyInQuery
    com.parse.ParseQuery whereSatifiesAnyOf(java.util.List) -> whereSatifiesAnyOf
    com.parse.ParseQuery whereNotContainedIn(java.lang.String,java.util.Collection) -> whereNotContainedIn
    com.parse.ParseQuery whereNear(java.lang.String,com.parse.ParseGeoPoint) -> whereNear
    com.parse.ParseQuery whereWithinMiles(java.lang.String,com.parse.ParseGeoPoint,double) -> whereWithinMiles
    com.parse.ParseQuery whereWithinKilometers(java.lang.String,com.parse.ParseGeoPoint,double) -> whereWithinKilometers
    com.parse.ParseQuery whereWithinRadians(java.lang.String,com.parse.ParseGeoPoint,double) -> whereWithinRadians
    com.parse.ParseQuery whereWithinGeoBox(java.lang.String,com.parse.ParseGeoPoint,com.parse.ParseGeoPoint) -> whereWithinGeoBox
    com.parse.ParseQuery whereMatches(java.lang.String,java.lang.String) -> whereMatches
    com.parse.ParseQuery whereMatches(java.lang.String,java.lang.String,java.lang.String) -> whereMatches
    com.parse.ParseQuery whereContains(java.lang.String,java.lang.String) -> whereContains
    com.parse.ParseQuery whereStartsWith(java.lang.String,java.lang.String) -> whereStartsWith
    com.parse.ParseQuery whereEndsWith(java.lang.String,java.lang.String) -> whereEndsWith
    void include(java.lang.String) -> include
    java.util.List getIncludes() -> getIncludes
    void selectKeys(java.util.Collection) -> selectKeys
    com.parse.ParseQuery whereExists(java.lang.String) -> whereExists
    com.parse.ParseQuery whereDoesNotExist(java.lang.String) -> whereDoesNotExist
    com.parse.ParseQuery whereRelatedTo(com.parse.ParseObject,java.lang.String) -> whereRelatedTo
    com.parse.ParseQuery redirectClassNameForKey(java.lang.String) -> redirectClassNameForKey
    com.parse.ParseQuery orderByAscending(java.lang.String) -> orderByAscending
    com.parse.ParseQuery addAscendingOrder(java.lang.String) -> addAscendingOrder
    com.parse.ParseQuery orderByDescending(java.lang.String) -> orderByDescending
    com.parse.ParseQuery addDescendingOrder(java.lang.String) -> addDescendingOrder
    java.lang.String[] sortKeys() -> sortKeys
    void setLimit(int) -> setLimit
    void setTrace(boolean) -> setTrace
    int getLimit() -> getLimit
    void setSkip(int) -> setSkip
    int getSkip() -> getSkip
    java.lang.String getClassName() -> getClassName
    int[] $SWITCH_TABLE$com$parse$ParseQuery$CachePolicy() -> $SWITCH_TABLE$com$parse$ParseQuery$CachePolicy
    com.parse.Task access$1(com.parse.ParseQuery) -> access$1
    java.lang.Integer access$2(com.parse.ParseQuery) -> access$2
    com.parse.Task access$3(com.parse.ParseQuery,boolean) -> access$3
    java.util.List access$4(com.parse.ParseQuery) -> access$4
    com.parse.ParseQuery$CachePolicy access$5(com.parse.ParseQuery) -> access$5
    com.parse.Task access$6(com.parse.ParseQuery,com.parse.ParseQuery$CachePolicy) -> access$6
    com.parse.ParseCommand access$7(com.parse.ParseQuery) -> access$7
    void access$8(com.parse.ParseQuery,long) -> access$8
    void access$9(com.parse.ParseQuery,long) -> access$9
    java.util.List access$10(com.parse.ParseQuery,org.json.JSONObject) -> access$10
    java.lang.Object access$11(com.parse.ParseQuery) -> access$11
    void access$12(com.parse.ParseQuery,boolean) -> access$12
    void access$13(com.parse.ParseQuery,com.parse.ParseCommand) -> access$13
    com.parse.Task access$14(com.parse.ParseQuery,com.parse.ParseQuery$CachePolicy) -> access$14
    com.parse.Task access$15(com.parse.ParseQuery,java.lang.String,com.parse.ParseQuery$CachePolicy) -> access$15
com.parse.ParseQuery$1 -> com.parse.ParseQuery$1:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.ParseQuery$CommandDelegate val$c -> val$c
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$10 -> com.parse.ParseQuery$10:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$11 -> com.parse.ParseQuery$11:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.ParseQuery$CallableWithCachePolicy val$callable -> val$callable
    com.parse.ParseCallback val$callback -> val$callback
    com.parse.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$11$1 -> com.parse.ParseQuery$11$1:
    com.parse.ParseQuery$11 this$1 -> this$1
    com.parse.ParseQuery$CallableWithCachePolicy val$callable -> val$callable
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$12 -> com.parse.ParseQuery$12:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call(com.parse.ParseQuery$CachePolicy) -> call
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$13 -> com.parse.ParseQuery$13:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call(com.parse.ParseQuery$CachePolicy) -> call
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$14 -> com.parse.ParseQuery$14:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$15 -> com.parse.ParseQuery$15:
    com.parse.ParseQuery this$0 -> this$0
    java.lang.Integer then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$16 -> com.parse.ParseQuery$16:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call(com.parse.ParseQuery$CachePolicy) -> call
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$17 -> com.parse.ParseQuery$17:
    com.parse.ParseQuery this$0 -> this$0
    java.lang.String val$theObjectId -> val$theObjectId
    com.parse.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$18 -> com.parse.ParseQuery$18:
    com.parse.ParseQuery this$0 -> this$0
    java.lang.String val$objectId -> val$objectId
    com.parse.Task call(com.parse.ParseQuery$CachePolicy) -> call
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$2 -> com.parse.ParseQuery$2:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.ParseQuery$CommandDelegate val$c -> val$c
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$3 -> com.parse.ParseQuery$3:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task runOnNetworkAsync(boolean) -> runOnNetworkAsync
    com.parse.Task runFromCacheAsync() -> runFromCacheAsync
    com.parse.ParseQuery access$0(com.parse.ParseQuery$3) -> access$0
com.parse.ParseQuery$3$1 -> com.parse.ParseQuery$3$1:
    com.parse.ParseQuery$3 this$1 -> this$1
    java.lang.Integer call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$4 -> com.parse.ParseQuery$4:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task runOnNetworkAsync(boolean) -> runOnNetworkAsync
    com.parse.Task runFromCacheAsync() -> runFromCacheAsync
    com.parse.ParseQuery access$0(com.parse.ParseQuery$4) -> access$0
com.parse.ParseQuery$4$1 -> com.parse.ParseQuery$4$1:
    com.parse.ParseQuery$4 this$1 -> this$1
    java.util.List call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$5 -> com.parse.ParseQuery$5:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.ParseObject then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$6 -> com.parse.ParseQuery$6:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$7 -> com.parse.ParseQuery$7:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$8 -> com.parse.ParseQuery$8:
    com.parse.ParseQuery this$0 -> this$0
    boolean val$shouldRetry -> val$shouldRetry
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$9 -> com.parse.ParseQuery$9:
    com.parse.ParseQuery this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
    com.parse.ParseQuery access$1(com.parse.ParseQuery$9) -> access$1
com.parse.ParseQuery$9$1 -> com.parse.ParseQuery$9$1:
    com.parse.ParseQuery$9 this$1 -> this$1
    java.util.List then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseQuery$CachePolicy -> com.parse.ParseQuery$CachePolicy:
    com.parse.ParseQuery$CachePolicy IGNORE_CACHE -> IGNORE_CACHE
    com.parse.ParseQuery$CachePolicy CACHE_ONLY -> CACHE_ONLY
    com.parse.ParseQuery$CachePolicy NETWORK_ONLY -> NETWORK_ONLY
    com.parse.ParseQuery$CachePolicy CACHE_ELSE_NETWORK -> CACHE_ELSE_NETWORK
    com.parse.ParseQuery$CachePolicy NETWORK_ELSE_CACHE -> NETWORK_ELSE_CACHE
    com.parse.ParseQuery$CachePolicy CACHE_THEN_NETWORK -> CACHE_THEN_NETWORK
    com.parse.ParseQuery$CachePolicy[] ENUM$VALUES -> ENUM$VALUES
    com.parse.ParseQuery$CachePolicy[] values() -> values
    com.parse.ParseQuery$CachePolicy valueOf(java.lang.String) -> valueOf
com.parse.ParseQuery$CallableWithCachePolicy -> com.parse.ParseQuery$CallableWithCachePolicy:
    java.lang.Object call(com.parse.ParseQuery$CachePolicy) -> call
com.parse.ParseQuery$CommandDelegate -> com.parse.ParseQuery$CommandDelegate:
    com.parse.Task runOnNetworkAsync(boolean) -> runOnNetworkAsync
    com.parse.Task runFromCacheAsync() -> runFromCacheAsync
com.parse.ParseQuery$KeyConstraints -> com.parse.ParseQuery$KeyConstraints:
com.parse.ParseQuery$QueryConstraints -> com.parse.ParseQuery$QueryConstraints:
com.parse.ParseQuery$RelationConstraint -> com.parse.ParseQuery$RelationConstraint:
    java.lang.String key -> key
    com.parse.ParseObject object -> object
    java.lang.String getKey() -> getKey
    com.parse.ParseObject getObject() -> getObject
    com.parse.ParseRelation getRelation() -> getRelation
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseQueryAdapter -> com.parse.ParseQueryAdapter:
    java.lang.String textKey -> textKey
    java.lang.String imageKey -> imageKey
    int objectsPerPage -> objectsPerPage
    boolean paginationEnabled -> paginationEnabled
    android.graphics.drawable.Drawable placeholder -> placeholder
    java.util.WeakHashMap imageViewSet -> imageViewSet
    java.util.WeakHashMap dataSetObservers -> dataSetObservers
    boolean autoload -> autoload
    android.content.Context context -> context
    java.util.List objects -> objects
    int currentPage -> currentPage
    java.lang.Integer itemResourceId -> itemResourceId
    boolean hasNextPage -> hasNextPage
    com.parse.ParseQueryAdapter$QueryFactory queryFactory -> queryFactory
    java.util.List onQueryLoadListeners -> onQueryLoadListeners
    int VIEW_TYPE_ITEM -> VIEW_TYPE_ITEM
    int VIEW_TYPE_NEXT_PAGE -> VIEW_TYPE_NEXT_PAGE
    android.content.Context getContext() -> getContext
    com.parse.ParseObject getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    void clear() -> clear
    void loadObjects() -> loadObjects
    void loadObjects(int,boolean) -> loadObjects
    void loadNextPage() -> loadNextPage
    int getCount() -> getCount
    android.view.View getItemView(com.parse.ParseObject,android.view.View,android.view.ViewGroup) -> getItemView
    android.view.View getNextPageView(android.view.View,android.view.ViewGroup) -> getNextPageView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setPageOnQuery(int,com.parse.ParseQuery) -> setPageOnQuery
    void setTextKey(java.lang.String) -> setTextKey
    void setImageKey(java.lang.String) -> setImageKey
    void setObjectsPerPage(int) -> setObjectsPerPage
    int getObjectsPerPage() -> getObjectsPerPage
    void setPaginationEnabled(boolean) -> setPaginationEnabled
    void setPlaceholder(android.graphics.drawable.Drawable) -> setPlaceholder
    void setAutoload(boolean) -> setAutoload
    void addOnQueryLoadListener(com.parse.ParseQueryAdapter$OnQueryLoadListener) -> addOnQueryLoadListener
    void removeOnQueryLoadListener(com.parse.ParseQueryAdapter$OnQueryLoadListener) -> removeOnQueryLoadListener
    android.view.View getDefaultView(android.content.Context) -> getDefaultView
    int getPaginationCellRow() -> getPaginationCellRow
    boolean shouldShowPaginationCell() -> shouldShowPaginationCell
    void notifyOnLoadingListeners() -> notifyOnLoadingListeners
    void notifyOnLoadedListeners(java.util.List,java.lang.Exception) -> notifyOnLoadedListeners
    java.lang.Object getItem(int) -> getItem
    void access$1(com.parse.ParseQueryAdapter,boolean) -> access$1
    void access$2(com.parse.ParseQueryAdapter,int) -> access$2
    int access$3(com.parse.ParseQueryAdapter) -> access$3
    boolean access$4(com.parse.ParseQueryAdapter) -> access$4
    java.util.List access$5(com.parse.ParseQueryAdapter) -> access$5
    void access$6(com.parse.ParseQueryAdapter,java.util.List,java.lang.Exception) -> access$6
com.parse.ParseQueryAdapter$1 -> com.parse.ParseQueryAdapter$1:
    java.lang.String val$className -> val$className
    com.parse.ParseQuery create() -> create
com.parse.ParseQueryAdapter$2 -> com.parse.ParseQueryAdapter$2:
    java.lang.String val$className -> val$className
    com.parse.ParseQuery create() -> create
com.parse.ParseQueryAdapter$3 -> com.parse.ParseQueryAdapter$3:
    com.parse.ParseQueryAdapter this$0 -> this$0
    com.parse.ParseQuery val$query -> val$query
    int val$page -> val$page
    boolean val$shouldClear -> val$shouldClear
    void done(java.util.List,com.parse.ParseException) -> done
com.parse.ParseQueryAdapter$4 -> com.parse.ParseQueryAdapter$4:
    com.parse.ParseQueryAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.parse.ParseQueryAdapter$OnQueryLoadListener -> com.parse.ParseQueryAdapter$OnQueryLoadListener:
    void onLoading() -> onLoading
    void onLoaded(java.util.List,java.lang.Exception) -> onLoaded
com.parse.ParseQueryAdapter$QueryFactory -> com.parse.ParseQueryAdapter$QueryFactory:
    com.parse.ParseQuery create() -> create
com.parse.ParseRelation -> com.parse.ParseRelation:
    java.lang.Object mutex -> mutex
    com.parse.ParseObject parent -> parent
    java.lang.String key -> key
    java.lang.String targetClass -> targetClass
    java.util.Set knownObjects -> knownObjects
    void ensureParentAndKey(com.parse.ParseObject,java.lang.String) -> ensureParentAndKey
    void add(com.parse.ParseObject) -> add
    void remove(com.parse.ParseObject) -> remove
    com.parse.ParseQuery getQuery() -> getQuery
    org.json.JSONObject encodeToJSON(com.parse.ParseObjectEncodingStrategy) -> encodeToJSON
    java.lang.String getTargetClass() -> getTargetClass
    void setTargetClass(java.lang.String) -> setTargetClass
com.parse.ParseRelationOperation -> com.parse.ParseRelationOperation:
    java.lang.String targetClass -> targetClass
    java.util.Set relationsToAdd -> relationsToAdd
    java.util.Set relationsToRemove -> relationsToRemove
    void addParseObjectToSet(com.parse.ParseObject,java.util.Set) -> addParseObjectToSet
    void addAllParseObjectsToSet(java.util.Collection,java.util.Set) -> addAllParseObjectsToSet
    void removeParseObjectFromSet(com.parse.ParseObject,java.util.Set) -> removeParseObjectFromSet
    void removeAllParseObjectsFromSet(java.util.Collection,java.util.Set) -> removeAllParseObjectsFromSet
    java.lang.String getTargetClass() -> getTargetClass
    org.json.JSONArray convertSetToArray(java.util.Set,com.parse.ParseObjectEncodingStrategy) -> convertSetToArray
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseRemoveOperation -> com.parse.ParseRemoveOperation:
    java.util.HashSet objects -> objects
    org.json.JSONObject encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
com.parse.ParseRequestRetryer -> com.parse.ParseRequestRetryer:
    org.apache.http.client.HttpClient client -> client
    org.apache.http.client.methods.HttpUriRequest request -> request
    long delay -> delay
    int maxAttempts -> maxAttempts
    int attemptsMade -> attemptsMade
    org.apache.http.client.HttpClient testClient -> testClient
    com.parse.Task sendOneRequestAsync(com.parse.ProgressCallback) -> sendOneRequestAsync
    com.parse.Task goAsync(com.parse.ProgressCallback) -> goAsync
    com.parse.ParseException connectionFailed(java.lang.String,java.lang.Exception) -> connectionFailed
    org.apache.http.client.HttpClient access$0(com.parse.ParseRequestRetryer) -> access$0
    org.apache.http.client.methods.HttpUriRequest access$1(com.parse.ParseRequestRetryer) -> access$1
    int access$2(com.parse.ParseRequestRetryer) -> access$2
    void access$3(com.parse.ParseRequestRetryer,int) -> access$3
    int access$4(com.parse.ParseRequestRetryer) -> access$4
    long access$5(com.parse.ParseRequestRetryer) -> access$5
    void access$6(com.parse.ParseRequestRetryer,long) -> access$6
com.parse.ParseRequestRetryer$1 -> com.parse.ParseRequestRetryer$1:
    com.parse.ParseRequestRetryer this$0 -> this$0
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    byte[] call() -> call
    java.lang.Object call() -> call
com.parse.ParseRequestRetryer$2 -> com.parse.ParseRequestRetryer$2:
    com.parse.ParseRequestRetryer this$0 -> this$0
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
    com.parse.ParseRequestRetryer access$1(com.parse.ParseRequestRetryer$2) -> access$1
com.parse.ParseRequestRetryer$2$1 -> com.parse.ParseRequestRetryer$2$1:
    com.parse.ParseRequestRetryer$2 this$1 -> this$1
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.Task$TaskCompletionSource val$retryTask -> val$retryTask
    void run() -> run
com.parse.ParseRequestRetryer$2$1$1 -> com.parse.ParseRequestRetryer$2$1$1:
    com.parse.ParseRequestRetryer$2$1 this$2 -> this$2
    com.parse.Task$TaskCompletionSource val$retryTask -> val$retryTask
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseRole -> com.parse.ParseRole:
    java.util.regex.Pattern NAME_PATTERN -> NAME_PATTERN
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    com.parse.ParseRelation getUsers() -> getUsers
    com.parse.ParseRelation getRoles() -> getRoles
    void validateSave() -> validateSave
    void put(java.lang.String,java.lang.Object) -> put
    com.parse.ParseQuery getQuery() -> getQuery
com.parse.ParseSetOperation -> com.parse.ParseSetOperation:
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    java.lang.Object encode(com.parse.ParseObjectEncodingStrategy) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,com.parse.ParseObject,java.lang.String) -> apply
com.parse.ParseTestUtils -> com.parse.ParseTestUtils:
    java.lang.String TAG -> TAG
    com.parse.Synchronizer synchronizer -> synchronizer
    int totalNotifications -> totalNotifications
    java.util.concurrent.Semaphore awaitStartSemaphore -> awaitStartSemaphore
    java.util.concurrent.Semaphore awaitStopSemaphore -> awaitStopSemaphore
    com.parse.ParseTestUtils$StateTransitionListener listener -> listener
    com.parse.ParseTestUtils$PushRoutedListener globalListener -> globalListener
    java.util.concurrent.atomic.AtomicBoolean strictModeEnabled -> strictModeEnabled
    java.lang.String useServer(java.lang.String) -> useServer
    java.lang.String getTestServer(android.content.Context) -> getTestServer
    java.lang.String useTestServer(android.content.Context) -> useTestServer
    java.lang.String useInvalidServer() -> useInvalidServer
    java.lang.String useBadServerPort(java.lang.String) -> useBadServerPort
    void clearApp() -> clearApp
    void mockV8Client() -> mockV8Client
    void unmockV8Client() -> unmockV8Client
    void useDevPushServer() -> useDevPushServer
    void saveObjectToDisk(com.parse.ParseObject,android.content.Context,java.lang.String) -> saveObjectToDisk
    com.parse.ParseObject getObjectFromDisk(android.content.Context,java.lang.String) -> getObjectFromDisk
    com.parse.ParseUser getUserObjectFromDisk(android.content.Context,java.lang.String) -> getUserObjectFromDisk
    void saveStringToDisk(java.lang.String,android.content.Context,java.lang.String) -> saveStringToDisk
    java.io.File getParseDir(android.content.Context) -> getParseDir
    void initSynchronizer() -> initSynchronizer
    java.util.Set keySet(com.parse.ParseObject) -> keySet
    void start(int) -> start
    void assertFinishes() -> assertFinishes
    void finish() -> finish
    void setCommandInitialDelay(double) -> setCommandInitialDelay
    void recursiveDelete(java.io.File) -> recursiveDelete
    void clearFiles() -> clearFiles
    void reloadPushRouter() -> reloadPushRouter
    void clearCurrentInstallationFromMemory() -> clearCurrentInstallationFromMemory
    java.util.Set pushRoutes(android.content.Context) -> pushRoutes
    int totalNotifications() -> totalNotifications
    java.lang.String getInstallationId(android.content.Context) -> getInstallationId
    org.json.JSONObject getPushRequestJSON() -> getPushRequestJSON
    org.json.JSONObject getSerializedPushStateJSON() -> getSerializedPushStateJSON
    void resetAwaitConnectionStarted() -> resetAwaitConnectionStarted
    void resetAwaitConnectionStopped() -> resetAwaitConnectionStopped
    boolean awaitConnectionStarted() -> awaitConnectionStarted
    boolean awaitConnectionStopped() -> awaitConnectionStopped
    java.util.List getPushConnectionStateTransitions() -> getPushConnectionStateTransitions
    java.util.List getPushConnectionRetryDelays() -> getPushConnectionRetryDelays
    void tearDownPushTest(android.content.Context) -> tearDownPushTest
    void setPushRoutedListener(com.parse.ParseTestUtils$PushRoutedListener) -> setPushRoutedListener
    void setUpPushTest(android.content.Context) -> setUpPushTest
    void startServiceIfRequired(android.content.Context) -> startServiceIfRequired
    void setKeepAliveInterval(long) -> setKeepAliveInterval
    void setRetryDelayEnabled(boolean) -> setRetryDelayEnabled
    java.net.ServerSocket mockPushServer() -> mockPushServer
    int numKeyValueCacheFiles() -> numKeyValueCacheFiles
    void setMaxKeyValueCacheFiles(int) -> setMaxKeyValueCacheFiles
    void setMaxKeyValueCacheBytes(int) -> setMaxKeyValueCacheBytes
    void resetCommandCache() -> resetCommandCache
    void disconnectCommandCache() -> disconnectCommandCache
    void reconnectCommandCache() -> reconnectCommandCache
    boolean waitForCommandCacheEnqueue() -> waitForCommandCacheEnqueue
    boolean waitForCommandCacheSuccess() -> waitForCommandCacheSuccess
    boolean waitForCommandCacheFailure() -> waitForCommandCacheFailure
    int commandCacheUnexpectedEvents() -> commandCacheUnexpectedEvents
    int setPushHistoryLength(int) -> setPushHistoryLength
    void setStrictModeEnabledForMainThread(boolean) -> setStrictModeEnabledForMainThread
    void setStrictModeEnabledForThisThread(boolean) -> setStrictModeEnabledForThisThread
    java.util.concurrent.Semaphore access$0() -> access$0
    java.util.concurrent.Semaphore access$1() -> access$1
    com.parse.ParseTestUtils$PushRoutedListener access$2() -> access$2
com.parse.ParseTestUtils$1 -> com.parse.ParseTestUtils$1:
    void onPushHandled(org.json.JSONObject,com.parse.PushRouter$HandlePushResult) -> onPushHandled
com.parse.ParseTestUtils$2 -> com.parse.ParseTestUtils$2:
    boolean val$enabled -> val$enabled
    java.util.concurrent.Semaphore val$done -> val$done
    void run() -> run
com.parse.ParseTestUtils$PushRoutedListener -> com.parse.ParseTestUtils$PushRoutedListener:
    void onPushRouted(org.json.JSONObject) -> onPushRouted
com.parse.ParseTestUtils$StateTransition -> com.parse.ParseTestUtils$StateTransition:
    long timestamp -> timestamp
    com.parse.PushConnection connection -> connection
    com.parse.PushConnection$State fromState -> fromState
    com.parse.PushConnection$State toState -> toState
    java.lang.String toString() -> toString
com.parse.ParseTestUtils$StateTransitionListener -> com.parse.ParseTestUtils$StateTransitionListener:
    java.util.ArrayList transitions -> transitions
    void onStateChange(com.parse.PushConnection,com.parse.PushConnection$State,com.parse.PushConnection$State) -> onStateChange
    java.util.List getTransitions() -> getTransitions
com.parse.ParseTraverser -> com.parse.ParseTraverser:
    boolean traverseParseObjects -> traverseParseObjects
    boolean yieldRoot -> yieldRoot
    boolean visit(java.lang.Object) -> visit
    void traverseInternal(java.lang.Object,boolean,java.util.IdentityHashMap) -> traverseInternal
    com.parse.ParseTraverser setTraverseParseObjects(boolean) -> setTraverseParseObjects
    com.parse.ParseTraverser setYieldRoot(boolean) -> setYieldRoot
    void traverse(java.lang.Object) -> traverse
com.parse.ParseTwitterUtils -> com.parse.ParseTwitterUtils:
    com.parse.twitter.Twitter twitter -> twitter
    com.parse.auth.TwitterAuthenticationProvider provider -> provider
    boolean isInitialized -> isInitialized
    com.parse.auth.TwitterAuthenticationProvider getAuthenticationProvider() -> getAuthenticationProvider
    com.parse.twitter.Twitter getTwitter() -> getTwitter
    void initialize(java.lang.String,java.lang.String) -> initialize
    void checkInitialization() -> checkInitialization
    boolean isLinked(com.parse.ParseUser) -> isLinked
    void link(com.parse.ParseUser,android.content.Context) -> link
    void link(com.parse.ParseUser,android.content.Context,com.parse.SaveCallback) -> link
    void link(com.parse.ParseUser,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> link
    void link(com.parse.ParseUser,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.parse.SaveCallback) -> link
    void logIn(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.parse.LogInCallback) -> logIn
    void logIn(android.content.Context,com.parse.LogInCallback) -> logIn
    void unlink(com.parse.ParseUser) -> unlink
    void unlinkInBackground(com.parse.ParseUser) -> unlinkInBackground
    void unlinkInBackground(com.parse.ParseUser,com.parse.SaveCallback) -> unlinkInBackground
com.parse.ParseUser -> com.parse.ParseUser:
    java.lang.String password -> password
    java.lang.String sessionToken -> sessionToken
    org.json.JSONObject authData -> authData
    java.util.Set linkedServiceNames -> linkedServiceNames
    java.util.Set readOnlyLinkedServiceNames -> readOnlyLinkedServiceNames
    boolean isNew -> isNew
    boolean isLazy -> isLazy
    com.parse.ParseUser currentUser -> currentUser
    java.util.Map authenticationProviders -> authenticationProviders
    boolean autoUserEnabled -> autoUserEnabled
    java.lang.Object currentUserMutex -> currentUserMutex
    boolean currentUserMatchesDisk -> currentUserMatchesDisk
    java.lang.String CURRENT_USER_FILENAME -> CURRENT_USER_FILENAME
    boolean isCurrentUser -> isCurrentUser
    com.parse.ParseUser logInLazyUser(java.lang.String,org.json.JSONObject) -> logInLazyUser
    boolean isLazy() -> isLazy
    boolean isAuthenticated() -> isAuthenticated
    void remove(java.lang.String) -> remove
    org.json.JSONObject toJSONObjectForSaving(java.util.Map,com.parse.ParseObjectEncodingStrategy) -> toJSONObjectForSaving
    org.json.JSONObject toJSONObjectForDataFile(boolean,com.parse.ParseObjectEncodingStrategy) -> toJSONObjectForDataFile
    void mergeFromObject(com.parse.ParseObject) -> mergeFromObject
    void mergeFromServer(org.json.JSONObject,com.parse.ParseDecoder,boolean) -> mergeFromServer
    boolean isCurrentUser() -> isCurrentUser
    void cleanUpAuthData() -> cleanUpAuthData
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getUsername() -> getUsername
    void setPassword(java.lang.String) -> setPassword
    void setEmail(java.lang.String) -> setEmail
    java.lang.String getEmail() -> getEmail
    void put(java.lang.String,java.lang.Object) -> put
    void stripAnonymity() -> stripAnonymity
    void restoreAnonymity(org.json.JSONObject) -> restoreAnonymity
    java.lang.String getSessionToken() -> getSessionToken
    void validateSave() -> validateSave
    com.parse.Task saveAsync(com.parse.Task) -> saveAsync
    void validateDelete() -> validateDelete
    com.parse.ParseUser fetch() -> fetch
    com.parse.Task fetchAsync(com.parse.Task) -> fetchAsync
    com.parse.ParseCommand constructSaveCommand(java.util.Map,com.parse.ParseObjectEncodingStrategy,java.lang.String) -> constructSaveCommand
    com.parse.ParseCommand constructSignUpCommand(java.util.Map,java.lang.String) -> constructSignUpCommand
    com.parse.ParseCommand constructSignUpOrLoginCommand(java.util.Map) -> constructSignUpOrLoginCommand
    com.parse.ParseCommand constructPasswordResetCommand(java.lang.String,java.lang.String) -> constructPasswordResetCommand
    com.parse.Task signUpAsync() -> signUpAsync
    com.parse.Task signUpAsync(com.parse.Task) -> signUpAsync
    void signUp() -> signUp
    void signUpInBackground(com.parse.SignUpCallback) -> signUpInBackground
    com.parse.ParseCommand constructLogInCommand(java.lang.String,java.lang.String) -> constructLogInCommand
    com.parse.Task logInAsync(java.lang.String,java.lang.String) -> logInAsync
    com.parse.ParseCommand constructBecomeCommand(java.lang.String) -> constructBecomeCommand
    com.parse.Task becomeAsync(java.lang.String) -> becomeAsync
    com.parse.ParseUser logIn(java.lang.String,java.lang.String) -> logIn
    void logInInBackground(java.lang.String,java.lang.String,com.parse.LogInCallback) -> logInInBackground
    com.parse.ParseUser become(java.lang.String) -> become
    void becomeInBackground(java.lang.String,com.parse.LogInCallback) -> becomeInBackground
    com.parse.ParseUser getCurrentUser() -> getCurrentUser
    java.lang.String getCurrentSessionToken() -> getCurrentSessionToken
    void saveCurrentUser(com.parse.ParseUser) -> saveCurrentUser
    void logOut() -> logOut
    com.parse.Task requestPasswordResetAsync(java.lang.String) -> requestPasswordResetAsync
    void requestPasswordReset(java.lang.String) -> requestPasswordReset
    void requestPasswordResetInBackground(java.lang.String,com.parse.RequestPasswordResetCallback) -> requestPasswordResetInBackground
    void checkApplicationContext() -> checkApplicationContext
    com.parse.ParseUser fetchIfNeeded() -> fetchIfNeeded
    java.util.Set getLinkedServiceNames() -> getLinkedServiceNames
    void synchronizeAuthData(java.lang.String) -> synchronizeAuthData
    void synchronizeAllAuthData() -> synchronizeAllAuthData
    com.parse.Task unlinkFromAsync(java.lang.String) -> unlinkFromAsync
    void registerAuthenticationProvider(com.parse.auth.ParseAuthenticationProvider) -> registerAuthenticationProvider
    com.parse.Task logInWithAsync(java.lang.String) -> logInWithAsync
    com.parse.Task logInWithAsync(java.lang.String,org.json.JSONObject) -> logInWithAsync
    com.parse.Task resolveLazinessAsync(com.parse.Task) -> resolveLazinessAsync
    com.parse.Task authenticateAsync(com.parse.auth.ParseAuthenticationProvider) -> authenticateAsync
    com.parse.Task logInWithAsync(com.parse.auth.ParseAuthenticationProvider) -> logInWithAsync
    com.parse.Task linkWithAsync(java.lang.String,org.json.JSONObject,com.parse.Task) -> linkWithAsync
    com.parse.Task linkWithAsync(java.lang.String,org.json.JSONObject) -> linkWithAsync
    com.parse.Task linkWithAsync(java.lang.String) -> linkWithAsync
    com.parse.Task linkWithAsync(com.parse.auth.ParseAuthenticationProvider) -> linkWithAsync
    void logOutWith(java.lang.String) -> logOutWith
    void logOutWith(com.parse.auth.ParseAuthenticationProvider) -> logOutWith
    boolean isNew() -> isNew
    void disableAutomaticUser() -> disableAutomaticUser
    void enableAutomaticUser() -> enableAutomaticUser
    boolean isAutomaticUserEnabled() -> isAutomaticUserEnabled
    com.parse.ParseQuery getQuery() -> getQuery
    void clearCurrentUserFromMemory() -> clearCurrentUserFromMemory
    boolean needsDefaultACL() -> needsDefaultACL
    com.parse.ParseObject fetchIfNeeded() -> fetchIfNeeded
    com.parse.ParseObject fetch() -> fetch
    void access$2(com.parse.ParseUser) -> access$2
    com.parse.Task access$3(com.parse.ParseUser,com.parse.Task) -> access$3
    com.parse.ParseCommand access$4(com.parse.ParseUser,java.util.Map,java.lang.String) -> access$4
    void access$5(com.parse.ParseUser,boolean) -> access$5
    org.json.JSONObject access$6(com.parse.ParseUser) -> access$6
    java.util.Set access$7(com.parse.ParseUser) -> access$7
    com.parse.ParseCommand access$8(com.parse.ParseUser,java.util.Map) -> access$8
    void access$9(com.parse.ParseUser,java.lang.String) -> access$9
    void access$10(com.parse.ParseUser) -> access$10
    com.parse.Task access$11(com.parse.ParseUser,com.parse.Task) -> access$11
    void access$12(com.parse.ParseUser,org.json.JSONObject) -> access$12
    void access$13(com.parse.ParseUser,boolean) -> access$13
    com.parse.Task access$14(com.parse.ParseUser,java.lang.String,org.json.JSONObject,com.parse.Task) -> access$14
com.parse.ParseUser$1 -> com.parse.ParseUser$1:
    com.parse.ParseUser this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$10 -> com.parse.ParseUser$10:
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$10$1 -> com.parse.ParseUser$10$1:
    com.parse.ParseUser$10 this$1 -> this$1
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseCommand val$command -> val$command
    java.util.Map val$operations -> val$operations
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$10$2 -> com.parse.ParseUser$10$2:
    com.parse.ParseUser$10 this$1 -> this$1
    com.parse.ParseUser val$user -> val$user
    java.lang.String val$authType -> val$authType
    com.parse.ParseUser then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$11 -> com.parse.ParseUser$11:
    com.parse.ParseUser val$user -> val$user
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    org.json.JSONObject val$oldAnonymousData -> val$oldAnonymousData
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$11$1 -> com.parse.ParseUser$11$1:
    com.parse.ParseUser$11 this$1 -> this$1
    com.parse.ParseUser val$user -> val$user
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$11$2 -> com.parse.ParseUser$11$2:
    com.parse.ParseUser$11 this$1 -> this$1
    com.parse.ParseUser val$user -> val$user
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$oldAnonymousData -> val$oldAnonymousData
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$12 -> com.parse.ParseUser$12:
    com.parse.Continuation val$logInWithTask -> val$logInWithTask
    com.parse.ParseUser val$user -> val$user
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$13 -> com.parse.ParseUser$13:
    com.parse.ParseUser this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$14 -> com.parse.ParseUser$14:
    com.parse.ParseUser this$0 -> this$0
    java.util.Map call() -> call
    java.lang.Object call() -> call
com.parse.ParseUser$15 -> com.parse.ParseUser$15:
    com.parse.ParseUser this$0 -> this$0
    com.parse.Capture val$operations -> val$operations
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$16 -> com.parse.ParseUser$16:
    com.parse.ParseUser this$0 -> this$0
    com.parse.Capture val$operations -> val$operations
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$17 -> com.parse.ParseUser$17:
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onCancel() -> onCancel
    void onError(java.lang.Throwable) -> onError
com.parse.ParseUser$18 -> com.parse.ParseUser$18:
    com.parse.auth.ParseAuthenticationProvider val$authenticator -> val$authenticator
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$19 -> com.parse.ParseUser$19:
    com.parse.ParseUser this$0 -> this$0
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseUser$2 -> com.parse.ParseUser$2:
    com.parse.ParseUser this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$20 -> com.parse.ParseUser$20:
    com.parse.ParseUser this$0 -> this$0
    com.parse.Task val$toAwait -> val$toAwait
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$21 -> com.parse.ParseUser$21:
    com.parse.ParseUser this$0 -> this$0
    org.json.JSONObject val$oldAnonymousData -> val$oldAnonymousData
    java.lang.String val$authType -> val$authType
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$22 -> com.parse.ParseUser$22:
    com.parse.ParseUser this$0 -> this$0
    java.lang.String val$authType -> val$authType
    org.json.JSONObject val$authData -> val$authData
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$23 -> com.parse.ParseUser$23:
    com.parse.ParseUser this$0 -> this$0
    com.parse.auth.ParseAuthenticationProvider val$authenticator -> val$authenticator
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$3 -> com.parse.ParseUser$3:
    com.parse.ParseUser this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$4 -> com.parse.ParseUser$4:
    com.parse.ParseUser this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$5 -> com.parse.ParseUser$5:
    com.parse.ParseUser this$0 -> this$0
    java.util.Map call() -> call
    java.lang.Object call() -> call
com.parse.ParseUser$6 -> com.parse.ParseUser$6:
    com.parse.ParseUser this$0 -> this$0
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
    com.parse.ParseUser access$1(com.parse.ParseUser$6) -> access$1
com.parse.ParseUser$6$1 -> com.parse.ParseUser$6$1:
    com.parse.ParseUser$6 this$1 -> this$1
    com.parse.ParseCommand val$command -> val$command
    java.util.Map val$operations -> val$operations
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$7 -> com.parse.ParseUser$7:
    com.parse.ParseUser then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$8 -> com.parse.ParseUser$8:
    com.parse.ParseUser then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseUser$9 -> com.parse.ParseUser$9:
    com.parse.ParseUser this$0 -> this$0
    java.lang.String val$authType -> val$authType
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.ParseWakeLock -> com.parse.ParseWakeLock:
    java.lang.String TAG -> TAG
    boolean hasWakeLockPermission -> hasWakeLockPermission
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    com.parse.ParseWakeLock acquireNewWakeLock(android.content.Context,int,java.lang.String,long) -> acquireNewWakeLock
    void release() -> release
com.parse.PointerEncodingStrategy -> com.parse.PointerEncodingStrategy:
    com.parse.PointerEncodingStrategy instance -> instance
    com.parse.PointerEncodingStrategy get() -> get
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
    com.parse.PointerOrLocalIdEncodingStrategy get() -> get
com.parse.PointerOrLocalIdEncodingStrategy -> com.parse.PointerOrLocalIdEncodingStrategy:
    com.parse.PointerOrLocalIdEncodingStrategy instance -> instance
    com.parse.PointerOrLocalIdEncodingStrategy get() -> get
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.ProgressCallback -> com.parse.ProgressCallback:
    java.lang.Integer maxProgressSoFar -> maxProgressSoFar
    void done(java.lang.Integer) -> done
    void internalDone(java.lang.Integer,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.PushConnection -> com.parse.PushConnection:
    java.lang.String TAG -> TAG
    int CONNECT_TIMEOUT_MS -> CONNECT_TIMEOUT_MS
    long KEEP_ALIVE_INTERVAL -> KEEP_ALIVE_INTERVAL
    boolean ENABLE_RETRY_DELAY -> ENABLE_RETRY_DELAY
    long MIN_RETRY_DELAY_MS -> MIN_RETRY_DELAY_MS
    long MAX_RETRY_DELAY_MS -> MAX_RETRY_DELAY_MS
    double RETRY_MULT_FACTOR_MIN -> RETRY_MULT_FACTOR_MIN
    double RETRY_MULT_FACTOR_MAX -> RETRY_MULT_FACTOR_MAX
    android.app.Service service -> service
    java.lang.String host -> host
    int port -> port
    java.util.concurrent.ExecutorService executor -> executor
    com.parse.PushConnection$EventSet eventSet -> eventSet
    com.parse.PushConnection$StateTransitionListener stateTransitionListener -> stateTransitionListener
    void start() -> start
    void stop() -> stop
    boolean writeLine(java.net.Socket,java.lang.String) -> writeLine
    void closeSocket(java.net.Socket) -> closeSocket
    void setStateTransitionListener(com.parse.PushConnection$StateTransitionListener) -> setStateTransitionListener
    com.parse.PushConnection$StateTransitionListener access$0() -> access$0
    java.util.concurrent.ExecutorService access$1(com.parse.PushConnection) -> access$1
    com.parse.PushConnection$EventSet access$2(com.parse.PushConnection) -> access$2
    java.lang.String access$3(com.parse.PushConnection) -> access$3
    int access$4(com.parse.PushConnection) -> access$4
    void access$5(java.net.Socket) -> access$5
    boolean access$6(java.net.Socket,java.lang.String) -> access$6
    android.app.Service access$7(com.parse.PushConnection) -> access$7
com.parse.PushConnection$ConnectState -> com.parse.PushConnection$ConnectState:
    long lastDelay -> lastDelay
    com.parse.PushConnection this$0 -> this$0
    com.parse.PushConnection$State runState() -> runState
    boolean sendHandshake(java.net.Socket) -> sendHandshake
    long nextDelay() -> nextDelay
com.parse.PushConnection$ConnectedState -> com.parse.PushConnection$ConnectedState:
    java.net.Socket socket -> socket
    com.parse.PushConnection this$0 -> this$0
    com.parse.PushConnection$State runState() -> runState
com.parse.PushConnection$Event -> com.parse.PushConnection$Event:
    com.parse.PushConnection$Event START -> START
    com.parse.PushConnection$Event STOP -> STOP
    com.parse.PushConnection$Event CONNECTIVITY_CHANGED -> CONNECTIVITY_CHANGED
    com.parse.PushConnection$Event KEEP_ALIVE_ERROR -> KEEP_ALIVE_ERROR
    com.parse.PushConnection$Event READ_ERROR -> READ_ERROR
    com.parse.PushConnection$Event[] ENUM$VALUES -> ENUM$VALUES
    com.parse.PushConnection$Event[] values() -> values
    com.parse.PushConnection$Event valueOf(java.lang.String) -> valueOf
com.parse.PushConnection$EventSet -> com.parse.PushConnection$EventSet:
    java.util.concurrent.locks.Lock lock -> lock
    java.util.concurrent.locks.Condition condition -> condition
    java.util.HashSet signaledEvents -> signaledEvents
    void signalEvent(com.parse.PushConnection$Event) -> signalEvent
    void removeEvents(com.parse.PushConnection$Event[]) -> removeEvents
    java.util.Set await(com.parse.PushConnection$Event[]) -> await
    java.util.Set timedAwait(long,com.parse.PushConnection$Event[]) -> timedAwait
com.parse.PushConnection$KeepAliveMonitor -> com.parse.PushConnection$KeepAliveMonitor:
    java.net.Socket socket -> socket
    long interval -> interval
    android.content.BroadcastReceiver receiver -> receiver
    android.app.AlarmManager manager -> manager
    android.app.PendingIntent broadcast -> broadcast
    com.parse.Task keepAliveTask -> keepAliveTask
    boolean unregistered -> unregistered
    com.parse.PushConnection this$0 -> this$0
    void register() -> register
    void unregister() -> unregister
    com.parse.Task access$0(com.parse.PushConnection$KeepAliveMonitor) -> access$0
    void access$1(com.parse.PushConnection$KeepAliveMonitor,com.parse.Task) -> access$1
    java.net.Socket access$2(com.parse.PushConnection$KeepAliveMonitor) -> access$2
    boolean access$3(com.parse.PushConnection$KeepAliveMonitor) -> access$3
    com.parse.PushConnection access$4(com.parse.PushConnection$KeepAliveMonitor) -> access$4
com.parse.PushConnection$KeepAliveMonitor$1 -> com.parse.PushConnection$KeepAliveMonitor$1:
    com.parse.PushConnection$KeepAliveMonitor this$1 -> this$1
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.parse.PushConnection$KeepAliveMonitor access$0(com.parse.PushConnection$KeepAliveMonitor$1) -> access$0
com.parse.PushConnection$KeepAliveMonitor$1$1 -> com.parse.PushConnection$KeepAliveMonitor$1$1:
    com.parse.PushConnection$KeepAliveMonitor$1 this$2 -> this$2
    com.parse.ParseWakeLock val$wl -> val$wl
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushConnection$ReachabilityMonitor -> com.parse.PushConnection$ReachabilityMonitor:
    com.parse.ConnectivityNotifier$ConnectivityListener listener -> listener
    boolean unregistered -> unregistered
    com.parse.PushConnection this$0 -> this$0
    void register() -> register
    void unregister() -> unregister
    boolean access$1(com.parse.PushConnection$ReachabilityMonitor) -> access$1
    com.parse.PushConnection access$2(com.parse.PushConnection$ReachabilityMonitor) -> access$2
com.parse.PushConnection$ReachabilityMonitor$1 -> com.parse.PushConnection$ReachabilityMonitor$1:
    com.parse.PushConnection$ReachabilityMonitor this$1 -> this$1
    void networkConnectivityStatusChanged(android.content.Intent) -> networkConnectivityStatusChanged
com.parse.PushConnection$ReaderThread -> com.parse.PushConnection$ReaderThread:
    java.net.Socket socket -> socket
    boolean stopped -> stopped
    com.parse.PushConnection this$0 -> this$0
    void run() -> run
    void runReaderLoop(java.io.BufferedReader) -> runReaderLoop
    void stopReading() -> stopReading
com.parse.PushConnection$State -> com.parse.PushConnection$State:
    com.parse.PushConnection this$0 -> this$0
    void run() -> run
    com.parse.PushConnection$State runState() -> runState
    boolean isTerminal() -> isTerminal
com.parse.PushConnection$StateTransitionListener -> com.parse.PushConnection$StateTransitionListener:
    void onStateChange(com.parse.PushConnection,com.parse.PushConnection$State,com.parse.PushConnection$State) -> onStateChange
com.parse.PushConnection$StoppedState -> com.parse.PushConnection$StoppedState:
    com.parse.PushConnection this$0 -> this$0
    com.parse.PushConnection$State runState() -> runState
    boolean isTerminal() -> isTerminal
com.parse.PushConnection$WaitRetryState -> com.parse.PushConnection$WaitRetryState:
    long delay -> delay
    com.parse.PushConnection this$0 -> this$0
    long getDelay() -> getDelay
    com.parse.PushConnection$State runState() -> runState
com.parse.PushConnection$WaitStartState -> com.parse.PushConnection$WaitStartState:
    com.parse.PushConnection this$0 -> this$0
    com.parse.PushConnection$State runState() -> runState
com.parse.PushHistory -> com.parse.PushHistory:
    java.lang.String TAG -> TAG
    int maxHistoryLength -> maxHistoryLength
    java.util.PriorityQueue entries -> entries
    java.util.HashSet pushIds -> pushIds
    java.lang.String cutoff -> cutoff
    java.lang.String lastTime -> lastTime
    org.json.JSONObject toJSON() -> toJSON
    java.lang.String getCutoffTimestamp() -> getCutoffTimestamp
    void setCutoffTimestamp(java.lang.String) -> setCutoffTimestamp
    java.lang.String getLastReceivedTimestamp() -> getLastReceivedTimestamp
    void setLastReceivedTimestamp(java.lang.String) -> setLastReceivedTimestamp
    java.util.Set getPushIds() -> getPushIds
    boolean tryInsertPush(java.lang.String,java.lang.String) -> tryInsertPush
com.parse.PushHistory$Entry -> com.parse.PushHistory$Entry:
    java.lang.String pushId -> pushId
    java.lang.String timestamp -> timestamp
    int compareTo(com.parse.PushHistory$Entry) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.parse.PushRouter -> com.parse.PushRouter:
    java.lang.String TAG -> TAG
    java.lang.String LEGACY_ROUTE_LOCATION -> LEGACY_ROUTE_LOCATION
    java.lang.String STATE_LOCATION -> STATE_LOCATION
    java.util.concurrent.ExecutorService EXECUTOR -> EXECUTOR
    java.lang.String GCM_RECEIVE_ACTION -> GCM_RECEIVE_ACTION
    int MAX_HISTORY_LENGTH -> MAX_HISTORY_LENGTH
    com.parse.Task lastTask -> lastTask
    com.parse.PushRouter$PushListener pushListener -> pushListener
    com.parse.PushRouter instance -> instance
    java.lang.String stateLocation -> stateLocation
    com.parse.PushRoutes routes -> routes
    com.parse.PushHistory history -> history
    java.util.concurrent.atomic.AtomicBoolean isRefreshingInstallation -> isRefreshingInstallation
    com.parse.Task subscribeAsync(java.lang.String,java.lang.Class,int) -> subscribeAsync
    com.parse.Task unsubscribeAsync(java.lang.String) -> unsubscribeAsync
    com.parse.Task getSubscriptionsAsync(boolean) -> getSubscriptionsAsync
    com.parse.Task getPushRequestJSONAsync() -> getPushRequestJSONAsync
    boolean isGcmPushIntent(android.content.Intent) -> isGcmPushIntent
    void handleGcmPushIntent(android.content.Intent) -> handleGcmPushIntent
    com.parse.Task handlePpnsPushAsync(org.json.JSONObject) -> handlePpnsPushAsync
    com.parse.Task reloadFromDiskAsync(boolean) -> reloadFromDiskAsync
    com.parse.Task getLastTask() -> getLastTask
    com.parse.Task makeUnhandledExceptionsFatal(com.parse.Task) -> makeUnhandledExceptionsFatal
    org.json.JSONArray getChannelsArrayFromInstallation(com.parse.ParseInstallation) -> getChannelsArrayFromInstallation
    void setGlobalPushListener(com.parse.PushRouter$PushListener) -> setGlobalPushListener
    void noteHandlePushResult(org.json.JSONObject,com.parse.PushRouter$HandlePushResult) -> noteHandlePushResult
    com.parse.PushRouter getInstance() -> getInstance
    com.parse.PushRouter reloadInstance(boolean) -> reloadInstance
    org.json.JSONObject migrateV1toV3(java.lang.String,java.lang.String) -> migrateV1toV3
    org.json.JSONObject migrateV2toV3(java.lang.String,java.lang.String) -> migrateV2toV3
    org.json.JSONObject toJSON() -> toJSON
    org.json.JSONObject merge(org.json.JSONObject[]) -> merge
    boolean saveStateToDisk() -> saveStateToDisk
    org.json.JSONObject getPushRequestJSON() -> getPushRequestJSON
    void subscribe(java.lang.String,java.lang.Class,int) -> subscribe
    void unsubscribe(java.lang.String) -> unsubscribe
    java.util.Set getSubscriptions(boolean) -> getSubscriptions
    java.util.Date serverInstallationUpdatedAt(org.json.JSONObject) -> serverInstallationUpdatedAt
    void maybeRefreshInstallation(java.util.Date) -> maybeRefreshInstallation
    org.json.JSONObject convertGcmIntentToJSONObject(android.content.Intent) -> convertGcmIntentToJSONObject
    com.parse.PushRouter$HandlePushResult handleGcmPush(android.content.Intent) -> handleGcmPush
    com.parse.PushRouter$HandlePushResult handlePpnsPush(org.json.JSONObject) -> handlePpnsPush
    com.parse.PushRouter$HandlePushResult handlePush(org.json.JSONObject) -> handlePush
    com.parse.PushRouter$HandlePushResult handlePushInternal(org.json.JSONObject) -> handlePushInternal
    com.parse.PushRouter access$0() -> access$0
    com.parse.PushRouter access$1(boolean) -> access$1
    java.util.concurrent.atomic.AtomicBoolean access$2(com.parse.PushRouter) -> access$2
com.parse.PushRouter$1 -> com.parse.PushRouter$1:
    java.lang.String val$channel -> val$channel
    java.lang.Class val$cls -> val$cls
    int val$iconId -> val$iconId
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$10 -> com.parse.PushRouter$10:
    com.parse.PushRouter this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$2 -> com.parse.PushRouter$2:
    java.lang.String val$channel -> val$channel
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$3 -> com.parse.PushRouter$3:
    boolean val$includeDefaultRoute -> val$includeDefaultRoute
    java.util.Set then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$4 -> com.parse.PushRouter$4:
    org.json.JSONObject then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$5 -> com.parse.PushRouter$5:
    android.content.Intent val$intent -> val$intent
    java.util.concurrent.Semaphore val$done -> val$done
    void run() -> run
com.parse.PushRouter$6 -> com.parse.PushRouter$6:
    org.json.JSONObject val$pushPayload -> val$pushPayload
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$7 -> com.parse.PushRouter$7:
    boolean val$removeExistingState -> val$removeExistingState
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$8 -> com.parse.PushRouter$8:
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$8$1 -> com.parse.PushRouter$8$1:
    com.parse.PushRouter$8 this$1 -> this$1
    com.parse.Task val$task -> val$task
    void run() -> run
com.parse.PushRouter$9 -> com.parse.PushRouter$9:
    com.parse.PushRouter$PushListener val$finalListener -> val$finalListener
    org.json.JSONObject val$pushData -> val$pushData
    com.parse.PushRouter$HandlePushResult val$result -> val$result
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushRouter$HandlePushResult -> com.parse.PushRouter$HandlePushResult:
    com.parse.PushRouter$HandlePushResult INVALID_DATA -> INVALID_DATA
    com.parse.PushRouter$HandlePushResult FAILED_HISTORY_TEST -> FAILED_HISTORY_TEST
    com.parse.PushRouter$HandlePushResult NO_ROUTE_FOUND -> NO_ROUTE_FOUND
    com.parse.PushRouter$HandlePushResult INVALID_ROUTE -> INVALID_ROUTE
    com.parse.PushRouter$HandlePushResult BROADCAST_INTENT -> BROADCAST_INTENT
    com.parse.PushRouter$HandlePushResult SHOW_NOTIFICATION -> SHOW_NOTIFICATION
    com.parse.PushRouter$HandlePushResult SHOW_NOTIFICATION_AND_BROADCAST_INTENT -> SHOW_NOTIFICATION_AND_BROADCAST_INTENT
    com.parse.PushRouter$HandlePushResult[] ENUM$VALUES -> ENUM$VALUES
    com.parse.PushRouter$HandlePushResult[] values() -> values
    com.parse.PushRouter$HandlePushResult valueOf(java.lang.String) -> valueOf
com.parse.PushRouter$PushListener -> com.parse.PushRouter$PushListener:
    void onPushHandled(org.json.JSONObject,com.parse.PushRouter$HandlePushResult) -> onPushHandled
com.parse.PushRoutes -> com.parse.PushRoutes:
    java.lang.String TAG -> TAG
    java.util.regex.Pattern CHANNEL_PATTERN -> CHANNEL_PATTERN
    java.util.HashMap channels -> channels
    boolean isValidChannelName(java.lang.String) -> isValidChannelName
    org.json.JSONObject toJSON() -> toJSON
    java.util.Set getChannels() -> getChannels
    com.parse.PushRoutes$Route get(java.lang.String) -> get
    com.parse.PushRoutes$Route put(java.lang.String,com.parse.PushRoutes$Route) -> put
    com.parse.PushRoutes$Route remove(java.lang.String) -> remove
com.parse.PushRoutes$Route -> com.parse.PushRoutes$Route:
    java.lang.String activityClassName -> activityClassName
    int iconId -> iconId
    com.parse.PushRoutes$Route newFromJSON(org.json.JSONObject) -> newFromJSON
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    org.json.JSONObject toJSON() -> toJSON
    java.lang.Class getActivityClass() -> getActivityClass
    int getIconId() -> getIconId
com.parse.PushService -> com.parse.PushService:
    java.lang.String TAG -> TAG
    java.lang.String START_IF_REQUIRED_ACTION -> START_IF_REQUIRED_ACTION
    int WAKE_LOCK_TIMEOUT_MS -> WAKE_LOCK_TIMEOUT_MS
    java.lang.String host -> host
    int port -> port
    boolean loggedStartError -> loggedStartError
    com.parse.PushService$LifecycleListener lifecycleListener -> lifecycleListener
    com.parse.PushConnection connection -> connection
    java.util.concurrent.ExecutorService executor -> executor
    int[] $SWITCH_TABLE$com$parse$PushType -> $SWITCH_TABLE$com$parse$PushType
    void setLifecycleListener(com.parse.PushService$LifecycleListener) -> setLifecycleListener
    void runGcmIntentInService(android.content.Context,android.content.Intent) -> runGcmIntentInService
    void stopPpnsService(android.content.Context) -> stopPpnsService
    void startPpnsServiceIfRequired(android.content.Context) -> startPpnsServiceIfRequired
    void startServiceIfRequired(android.content.Context) -> startServiceIfRequired
    void subscribe(android.content.Context,java.lang.String,java.lang.Class) -> subscribe
    void subscribe(android.content.Context,java.lang.String,java.lang.Class,int) -> subscribe
    void unsubscribe(android.content.Context,java.lang.String) -> unsubscribe
    void unsubscribeInternal(java.lang.String) -> unsubscribeInternal
    void setDefaultPushCallback(android.content.Context,java.lang.Class) -> setDefaultPushCallback
    void setDefaultPushCallback(android.content.Context,java.lang.Class,int) -> setDefaultPushCallback
    java.util.Set getSubscriptions(android.content.Context) -> getSubscriptions
    void useServer(java.lang.String,int) -> useServer
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    int onPpnsStartCommand(android.content.Intent,int,int) -> onPpnsStartCommand
    int onGcmStartCommand(android.content.Intent,int,int) -> onGcmStartCommand
    void onHandleGcmIntent(android.content.Intent) -> onHandleGcmIntent
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    int[] $SWITCH_TABLE$com$parse$PushType() -> $SWITCH_TABLE$com$parse$PushType
    void access$1(com.parse.PushService,android.content.Intent) -> access$1
com.parse.PushService$1 -> com.parse.PushService$1:
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushService$2 -> com.parse.PushService$2:
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushService$3 -> com.parse.PushService$3:
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushService$4 -> com.parse.PushService$4:
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushService$5 -> com.parse.PushService$5:
    com.parse.PushService this$0 -> this$0
    com.parse.PushConnection val$conn -> val$conn
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.PushService$6 -> com.parse.PushService$6:
    com.parse.PushService this$0 -> this$0
    android.content.Intent val$intent -> val$intent
    int val$startId -> val$startId
    void run() -> run
com.parse.PushService$LifecycleListener -> com.parse.PushService$LifecycleListener:
    void onServiceCreated(android.app.Service) -> onServiceCreated
    void onServiceDestroyed(android.app.Service) -> onServiceDestroyed
com.parse.PushType -> com.parse.PushType:
    com.parse.PushType NONE -> NONE
    com.parse.PushType PPNS -> PPNS
    com.parse.PushType GCM -> GCM
    java.lang.String pushType -> pushType
    com.parse.PushType[] ENUM$VALUES -> ENUM$VALUES
    com.parse.PushType fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
    com.parse.PushType[] values() -> values
    com.parse.PushType valueOf(java.lang.String) -> valueOf
com.parse.R -> com.parse.R:
com.parse.R$attr -> com.parse.R$attr:
    int confirm_logout -> confirm_logout
    int done_button_background -> done_button_background
    int done_button_text -> done_button_text
    int extra_fields -> extra_fields
    int fetch_user_info -> fetch_user_info
    int is_cropped -> is_cropped
    int login_text -> login_text
    int logout_text -> logout_text
    int multi_select -> multi_select
    int preset_size -> preset_size
    int radius_in_meters -> radius_in_meters
    int results_limit -> results_limit
    int search_text -> search_text
    int show_pictures -> show_pictures
    int show_search_box -> show_search_box
    int show_title_bar -> show_title_bar
    int title_bar_background -> title_bar_background
    int title_text -> title_text
com.parse.R$color -> com.parse.R$color:
    int com_facebook_blue -> com_facebook_blue
    int com_facebook_loginview_text_color -> com_facebook_loginview_text_color
    int com_facebook_picker_search_bar_background -> com_facebook_picker_search_bar_background
    int com_facebook_picker_search_bar_text -> com_facebook_picker_search_bar_text
    int com_facebook_usersettingsfragment_connected_shadow_color -> com_facebook_usersettingsfragment_connected_shadow_color
    int com_facebook_usersettingsfragment_connected_text_color -> com_facebook_usersettingsfragment_connected_text_color
    int com_facebook_usersettingsfragment_not_connected_text_color -> com_facebook_usersettingsfragment_not_connected_text_color
com.parse.R$dimen -> com.parse.R$dimen:
    int com_facebook_loginview_compound_drawable_padding -> com_facebook_loginview_compound_drawable_padding
    int com_facebook_loginview_padding_bottom -> com_facebook_loginview_padding_bottom
    int com_facebook_loginview_padding_left -> com_facebook_loginview_padding_left
    int com_facebook_loginview_padding_right -> com_facebook_loginview_padding_right
    int com_facebook_loginview_padding_top -> com_facebook_loginview_padding_top
    int com_facebook_loginview_text_size -> com_facebook_loginview_text_size
    int com_facebook_picker_divider_width -> com_facebook_picker_divider_width
    int com_facebook_picker_place_image_size -> com_facebook_picker_place_image_size
    int com_facebook_profilepictureview_preset_size_large -> com_facebook_profilepictureview_preset_size_large
    int com_facebook_profilepictureview_preset_size_normal -> com_facebook_profilepictureview_preset_size_normal
    int com_facebook_profilepictureview_preset_size_small -> com_facebook_profilepictureview_preset_size_small
    int com_facebook_usersettingsfragment_profile_picture_height -> com_facebook_usersettingsfragment_profile_picture_height
    int com_facebook_usersettingsfragment_profile_picture_width -> com_facebook_usersettingsfragment_profile_picture_width
com.parse.R$drawable -> com.parse.R$drawable:
    int com_facebook_button_blue -> com_facebook_button_blue
    int com_facebook_button_blue_focused -> com_facebook_button_blue_focused
    int com_facebook_button_blue_normal -> com_facebook_button_blue_normal
    int com_facebook_button_blue_pressed -> com_facebook_button_blue_pressed
    int com_facebook_button_check -> com_facebook_button_check
    int com_facebook_button_check_off -> com_facebook_button_check_off
    int com_facebook_button_check_on -> com_facebook_button_check_on
    int com_facebook_button_grey_focused -> com_facebook_button_grey_focused
    int com_facebook_button_grey_normal -> com_facebook_button_grey_normal
    int com_facebook_button_grey_pressed -> com_facebook_button_grey_pressed
    int com_facebook_close -> com_facebook_close
    int com_facebook_inverse_icon -> com_facebook_inverse_icon
    int com_facebook_list_divider -> com_facebook_list_divider
    int com_facebook_list_section_header_background -> com_facebook_list_section_header_background
    int com_facebook_loginbutton_silver -> com_facebook_loginbutton_silver
    int com_facebook_logo -> com_facebook_logo
    int com_facebook_picker_default_separator_color -> com_facebook_picker_default_separator_color
    int com_facebook_picker_item_background -> com_facebook_picker_item_background
    int com_facebook_picker_list_focused -> com_facebook_picker_list_focused
    int com_facebook_picker_list_longpressed -> com_facebook_picker_list_longpressed
    int com_facebook_picker_list_pressed -> com_facebook_picker_list_pressed
    int com_facebook_picker_list_selector -> com_facebook_picker_list_selector
    int com_facebook_picker_list_selector_background_transition -> com_facebook_picker_list_selector_background_transition
    int com_facebook_picker_list_selector_disabled -> com_facebook_picker_list_selector_disabled
    int com_facebook_picker_magnifier -> com_facebook_picker_magnifier
    int com_facebook_picker_top_button -> com_facebook_picker_top_button
    int com_facebook_place_default_icon -> com_facebook_place_default_icon
    int com_facebook_profile_default_icon -> com_facebook_profile_default_icon
    int com_facebook_profile_picture_blank_portrait -> com_facebook_profile_picture_blank_portrait
    int com_facebook_profile_picture_blank_square -> com_facebook_profile_picture_blank_square
    int com_facebook_top_background -> com_facebook_top_background
    int com_facebook_top_button -> com_facebook_top_button
    int com_facebook_usersettingsfragment_background_gradient -> com_facebook_usersettingsfragment_background_gradient
com.parse.R$id -> com.parse.R$id:
    int com_facebook_login_activity_progress_bar -> com_facebook_login_activity_progress_bar
    int com_facebook_picker_activity_circle -> com_facebook_picker_activity_circle
    int com_facebook_picker_checkbox -> com_facebook_picker_checkbox
    int com_facebook_picker_checkbox_stub -> com_facebook_picker_checkbox_stub
    int com_facebook_picker_divider -> com_facebook_picker_divider
    int com_facebook_picker_done_button -> com_facebook_picker_done_button
    int com_facebook_picker_image -> com_facebook_picker_image
    int com_facebook_picker_list_section_header -> com_facebook_picker_list_section_header
    int com_facebook_picker_list_view -> com_facebook_picker_list_view
    int com_facebook_picker_profile_pic_stub -> com_facebook_picker_profile_pic_stub
    int com_facebook_picker_row_activity_circle -> com_facebook_picker_row_activity_circle
    int com_facebook_picker_search_text -> com_facebook_picker_search_text
    int com_facebook_picker_title -> com_facebook_picker_title
    int com_facebook_picker_title_bar -> com_facebook_picker_title_bar
    int com_facebook_picker_title_bar_stub -> com_facebook_picker_title_bar_stub
    int com_facebook_picker_top_bar -> com_facebook_picker_top_bar
    int com_facebook_search_bar_view -> com_facebook_search_bar_view
    int com_facebook_usersettingsfragment_login_button -> com_facebook_usersettingsfragment_login_button
    int com_facebook_usersettingsfragment_logo_image -> com_facebook_usersettingsfragment_logo_image
    int com_facebook_usersettingsfragment_profile_name -> com_facebook_usersettingsfragment_profile_name
    int large -> large
    int normal -> normal
    int picker_subtitle -> picker_subtitle
    int small -> small
com.parse.R$layout -> com.parse.R$layout:
    int com_facebook_friendpickerfragment -> com_facebook_friendpickerfragment
    int com_facebook_login_activity_layout -> com_facebook_login_activity_layout
    int com_facebook_picker_activity_circle_row -> com_facebook_picker_activity_circle_row
    int com_facebook_picker_checkbox -> com_facebook_picker_checkbox
    int com_facebook_picker_image -> com_facebook_picker_image
    int com_facebook_picker_list_row -> com_facebook_picker_list_row
    int com_facebook_picker_list_section_header -> com_facebook_picker_list_section_header
    int com_facebook_picker_search_box -> com_facebook_picker_search_box
    int com_facebook_picker_title_bar -> com_facebook_picker_title_bar
    int com_facebook_picker_title_bar_stub -> com_facebook_picker_title_bar_stub
    int com_facebook_placepickerfragment -> com_facebook_placepickerfragment
    int com_facebook_placepickerfragment_list_row -> com_facebook_placepickerfragment_list_row
    int com_facebook_search_bar_layout -> com_facebook_search_bar_layout
    int com_facebook_usersettingsfragment -> com_facebook_usersettingsfragment
com.parse.R$string -> com.parse.R$string:
    int com_facebook_choose_friends -> com_facebook_choose_friends
    int com_facebook_dialogloginactivity_ok_button -> com_facebook_dialogloginactivity_ok_button
    int com_facebook_internet_permission_error_message -> com_facebook_internet_permission_error_message
    int com_facebook_internet_permission_error_title -> com_facebook_internet_permission_error_title
    int com_facebook_loading -> com_facebook_loading
    int com_facebook_loginview_cancel_action -> com_facebook_loginview_cancel_action
    int com_facebook_loginview_log_in_button -> com_facebook_loginview_log_in_button
    int com_facebook_loginview_log_out_action -> com_facebook_loginview_log_out_action
    int com_facebook_loginview_log_out_button -> com_facebook_loginview_log_out_button
    int com_facebook_loginview_logged_in_as -> com_facebook_loginview_logged_in_as
    int com_facebook_loginview_logged_in_using_facebook -> com_facebook_loginview_logged_in_using_facebook
    int com_facebook_logo_content_description -> com_facebook_logo_content_description
    int com_facebook_nearby -> com_facebook_nearby
    int com_facebook_picker_done_button_text -> com_facebook_picker_done_button_text
    int com_facebook_placepicker_subtitle_catetory_only_format -> com_facebook_placepicker_subtitle_catetory_only_format
    int com_facebook_placepicker_subtitle_format -> com_facebook_placepicker_subtitle_format
    int com_facebook_placepicker_subtitle_were_here_only_format -> com_facebook_placepicker_subtitle_were_here_only_format
    int com_facebook_requesterror_password_changed -> com_facebook_requesterror_password_changed
    int com_facebook_requesterror_permissions -> com_facebook_requesterror_permissions
    int com_facebook_requesterror_reconnect -> com_facebook_requesterror_reconnect
    int com_facebook_requesterror_relogin -> com_facebook_requesterror_relogin
    int com_facebook_requesterror_web_login -> com_facebook_requesterror_web_login
    int com_facebook_usersettingsfragment_log_in_button -> com_facebook_usersettingsfragment_log_in_button
    int com_facebook_usersettingsfragment_logged_in -> com_facebook_usersettingsfragment_logged_in
    int com_facebook_usersettingsfragment_not_logged_in -> com_facebook_usersettingsfragment_not_logged_in
com.parse.R$style -> com.parse.R$style:
    int com_facebook_loginview_default_style -> com_facebook_loginview_default_style
    int com_facebook_loginview_silver_style -> com_facebook_loginview_silver_style
com.parse.R$styleable -> com.parse.R$styleable:
    int[] com_facebook_friend_picker_fragment -> com_facebook_friend_picker_fragment
    int com_facebook_friend_picker_fragment_multi_select -> com_facebook_friend_picker_fragment_multi_select
    int[] com_facebook_login_view -> com_facebook_login_view
    int com_facebook_login_view_confirm_logout -> com_facebook_login_view_confirm_logout
    int com_facebook_login_view_fetch_user_info -> com_facebook_login_view_fetch_user_info
    int com_facebook_login_view_login_text -> com_facebook_login_view_login_text
    int com_facebook_login_view_logout_text -> com_facebook_login_view_logout_text
    int[] com_facebook_picker_fragment -> com_facebook_picker_fragment
    int com_facebook_picker_fragment_done_button_background -> com_facebook_picker_fragment_done_button_background
    int com_facebook_picker_fragment_done_button_text -> com_facebook_picker_fragment_done_button_text
    int com_facebook_picker_fragment_extra_fields -> com_facebook_picker_fragment_extra_fields
    int com_facebook_picker_fragment_show_pictures -> com_facebook_picker_fragment_show_pictures
    int com_facebook_picker_fragment_show_title_bar -> com_facebook_picker_fragment_show_title_bar
    int com_facebook_picker_fragment_title_bar_background -> com_facebook_picker_fragment_title_bar_background
    int com_facebook_picker_fragment_title_text -> com_facebook_picker_fragment_title_text
    int[] com_facebook_place_picker_fragment -> com_facebook_place_picker_fragment
    int com_facebook_place_picker_fragment_radius_in_meters -> com_facebook_place_picker_fragment_radius_in_meters
    int com_facebook_place_picker_fragment_results_limit -> com_facebook_place_picker_fragment_results_limit
    int com_facebook_place_picker_fragment_search_text -> com_facebook_place_picker_fragment_search_text
    int com_facebook_place_picker_fragment_show_search_box -> com_facebook_place_picker_fragment_show_search_box
    int[] com_facebook_profile_picture_view -> com_facebook_profile_picture_view
    int com_facebook_profile_picture_view_is_cropped -> com_facebook_profile_picture_view_is_cropped
    int com_facebook_profile_picture_view_preset_size -> com_facebook_profile_picture_view_preset_size
com.parse.RefreshCallback -> com.parse.RefreshCallback:
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
    void internalDone(com.parse.ParseObject,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.RequestPasswordResetCallback -> com.parse.RequestPasswordResetCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.SaveCallback -> com.parse.SaveCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.SendCallback -> com.parse.SendCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.ServiceUtils -> com.parse.ServiceUtils:
    java.lang.String TAG -> TAG
    java.lang.String WAKE_LOCK_EXTRA -> WAKE_LOCK_EXTRA
    android.util.SparseArray wakeLocks -> wakeLocks
    int wakeLockId -> wakeLockId
    boolean runIntentInService(android.content.Context,android.content.Intent,java.lang.Class) -> runIntentInService
    boolean runWakefulIntentInService(android.content.Context,android.content.Intent,java.lang.Class,long) -> runWakefulIntentInService
    void completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
com.parse.SignUpCallback -> com.parse.SignUpCallback:
    void done(com.parse.ParseException) -> done
    void internalDone(java.lang.Void,com.parse.ParseException) -> internalDone
    void internalDone(java.lang.Object,com.parse.ParseException) -> internalDone
com.parse.Synchronizer -> com.parse.Synchronizer:
    boolean done -> done
    java.util.concurrent.CountDownLatch latch -> latch
    void start(int) -> start
    void finish() -> finish
    void assertFinishes() -> assertFinishes
com.parse.Task -> com.parse.Task:
    java.util.concurrent.ExecutorService defaultExecutor -> defaultExecutor
    java.util.concurrent.Executor immediateExecutor -> immediateExecutor
    java.lang.Object lock -> lock
    boolean complete -> complete
    boolean cancelled -> cancelled
    java.lang.Object result -> result
    java.lang.Exception error -> error
    java.util.List continuations -> continuations
    com.parse.Task$TaskCompletionSource create() -> create
    boolean isCompleted() -> isCompleted
    boolean isCancelled() -> isCancelled
    boolean isFaulted() -> isFaulted
    java.lang.Object getResult() -> getResult
    java.lang.Exception getError() -> getError
    void waitForCompletion() -> waitForCompletion
    com.parse.Task forResult(java.lang.Object) -> forResult
    com.parse.Task forError(java.lang.Exception) -> forError
    com.parse.Task cancelled() -> cancelled
    com.parse.Task cast() -> cast
    com.parse.Task makeVoid() -> makeVoid
    com.parse.Task callInBackground(java.util.concurrent.Callable) -> callInBackground
    com.parse.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor) -> call
    com.parse.Task call(java.util.concurrent.Callable) -> call
    com.parse.Task whenAll(java.util.Collection) -> whenAll
    com.parse.Task continueWhile(java.util.concurrent.Callable,com.parse.Continuation) -> continueWhile
    com.parse.Task continueWhile(java.util.concurrent.Callable,com.parse.Continuation,java.util.concurrent.Executor) -> continueWhile
    com.parse.Task continueWith(com.parse.Continuation,java.util.concurrent.Executor) -> continueWith
    com.parse.Task continueWith(com.parse.Continuation) -> continueWith
    com.parse.Task continueWithTask(com.parse.Continuation,java.util.concurrent.Executor) -> continueWithTask
    com.parse.Task continueWithTask(com.parse.Continuation) -> continueWithTask
    com.parse.Task onSuccess(com.parse.Continuation,java.util.concurrent.Executor) -> onSuccess
    com.parse.Task onSuccess(com.parse.Continuation) -> onSuccess
    com.parse.Task onSuccessTask(com.parse.Continuation,java.util.concurrent.Executor) -> onSuccessTask
    com.parse.Task onSuccessTask(com.parse.Continuation) -> onSuccessTask
    void completeImmediately(com.parse.Task$TaskCompletionSource,com.parse.Continuation,com.parse.Task,java.util.concurrent.Executor) -> completeImmediately
    void completeAfterTask(com.parse.Task$TaskCompletionSource,com.parse.Continuation,com.parse.Task,java.util.concurrent.Executor) -> completeAfterTask
    void runContinuations() -> runContinuations
    java.util.concurrent.ExecutorService access$0() -> access$0
    java.lang.Object access$1(com.parse.Task) -> access$1
    boolean access$2(com.parse.Task) -> access$2
    void access$3(com.parse.Task,boolean) -> access$3
    void access$4(com.parse.Task,boolean) -> access$4
    void access$5(com.parse.Task) -> access$5
    void access$6(com.parse.Task,java.lang.Object) -> access$6
    void access$7(com.parse.Task,java.lang.Exception) -> access$7
    void access$8(com.parse.Task$TaskCompletionSource,com.parse.Continuation,com.parse.Task,java.util.concurrent.Executor) -> access$8
    void access$9(com.parse.Task$TaskCompletionSource,com.parse.Continuation,com.parse.Task,java.util.concurrent.Executor) -> access$9
com.parse.Task$1 -> com.parse.Task$1:
    int MAX_DEPTH -> MAX_DEPTH
    java.lang.ThreadLocal executionDepth -> executionDepth
    int incrementDepth() -> incrementDepth
    int decrementDepth() -> decrementDepth
    void execute(java.lang.Runnable) -> execute
com.parse.Task$10 -> com.parse.Task$10:
    com.parse.Continuation val$continuation -> val$continuation
    com.parse.Task val$task -> val$task
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    void run() -> run
com.parse.Task$11 -> com.parse.Task$11:
    com.parse.Continuation val$continuation -> val$continuation
    com.parse.Task val$task -> val$task
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    void run() -> run
com.parse.Task$11$1 -> com.parse.Task$11$1:
    com.parse.Task$11 this$1 -> this$1
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$2 -> com.parse.Task$2:
    com.parse.Task this$0 -> this$0
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$3 -> com.parse.Task$3:
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    java.util.concurrent.Callable val$callable -> val$callable
    void run() -> run
com.parse.Task$4 -> com.parse.Task$4:
    java.util.concurrent.atomic.AtomicInteger val$count -> val$count
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$5 -> com.parse.Task$5:
    com.parse.Task this$0 -> this$0
    java.util.concurrent.Callable val$predicate -> val$predicate
    com.parse.Continuation val$continuation -> val$continuation
    java.util.concurrent.Executor val$executor -> val$executor
    com.parse.Capture val$predicateContinuation -> val$predicateContinuation
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$6 -> com.parse.Task$6:
    com.parse.Task this$0 -> this$0
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.Continuation val$continuation -> val$continuation
    java.util.concurrent.Executor val$executor -> val$executor
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$7 -> com.parse.Task$7:
    com.parse.Task this$0 -> this$0
    com.parse.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.Continuation val$continuation -> val$continuation
    java.util.concurrent.Executor val$executor -> val$executor
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$8 -> com.parse.Task$8:
    com.parse.Task this$0 -> this$0
    com.parse.Continuation val$continuation -> val$continuation
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$9 -> com.parse.Task$9:
    com.parse.Task this$0 -> this$0
    com.parse.Continuation val$continuation -> val$continuation
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.Task$TaskCompletionSource -> com.parse.Task$TaskCompletionSource:
    com.parse.Task this$0 -> this$0
    com.parse.Task getTask() -> getTask
    boolean trySetCancelled() -> trySetCancelled
    boolean trySetResult(java.lang.Object) -> trySetResult
    boolean trySetError(java.lang.Exception) -> trySetError
    void setCancelled() -> setCancelled
    void setResult(java.lang.Object) -> setResult
    void setError(java.lang.Exception) -> setError
com.parse.TaskQueue -> com.parse.TaskQueue:
    com.parse.Task tail -> tail
    java.util.concurrent.locks.Lock lock -> lock
    com.parse.Task getTaskToAwait() -> getTaskToAwait
    com.parse.Task enqueue(com.parse.Continuation) -> enqueue
    com.parse.Continuation waitFor(com.parse.Task) -> waitFor
    java.util.concurrent.locks.Lock getLock() -> getLock
    void waitUntilFinished() -> waitUntilFinished
com.parse.TaskQueue$1 -> com.parse.TaskQueue$1:
    com.parse.TaskQueue this$0 -> this$0
    java.lang.Void then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.TaskQueue$2 -> com.parse.TaskQueue$2:
    com.parse.Task val$toAwait -> val$toAwait
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.TaskQueue$2$1 -> com.parse.TaskQueue$2$1:
    com.parse.TaskQueue$2 this$1 -> this$1
    com.parse.Task val$task -> val$task
    com.parse.Task then(com.parse.Task) -> then
    java.lang.Object then(com.parse.Task) -> then
com.parse.auth.AnonymousAuthenticationProvider -> com.parse.auth.AnonymousAuthenticationProvider:
    void authenticate(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> authenticate
    org.json.JSONObject getAuthData() -> getAuthData
    void deauthenticate() -> deauthenticate
    boolean restoreAuthentication(org.json.JSONObject) -> restoreAuthentication
    void cancel() -> cancel
    java.lang.String getAuthType() -> getAuthType
com.parse.auth.FacebookAuthenticationProvider -> com.parse.auth.FacebookAuthenticationProvider:
    java.text.DateFormat preciseDateFormat -> preciseDateFormat
    int DEFAULT_AUTH_ACTIVITY_CODE -> DEFAULT_AUTH_ACTIVITY_CODE
    java.lang.String AUTH_TYPE_NAME -> AUTH_TYPE_NAME
    com.facebook.android.Facebook facebook -> facebook
    com.facebook.Session session -> session
    com.facebook.SessionDefaultAudience defaultAudience -> defaultAudience
    java.lang.String applicationId -> applicationId
    int activityCode -> activityCode
    java.lang.ref.WeakReference baseActivity -> baseActivity
    android.content.Context applicationContext -> applicationContext
    java.util.Collection permissions -> permissions
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback currentOperationCallback -> currentOperationCallback
    java.lang.String userId -> userId
    void extendAccessToken(android.content.Context,com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> extendAccessToken
    void authenticate(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> authenticate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void cancel() -> cancel
    int getActivityCode() -> getActivityCode
    java.lang.String getAuthType() -> getAuthType
    com.facebook.android.Facebook getFacebook() -> getFacebook
    com.facebook.Session getSession() -> getSession
    void handleCancel() -> handleCancel
    void handleError(java.lang.Throwable) -> handleError
    org.json.JSONObject getAuthData(java.lang.String,java.lang.String,java.util.Date) -> getAuthData
    void handleSuccess(java.lang.String) -> handleSuccess
    void setActivity(android.app.Activity) -> setActivity
    void setActivityCode(int) -> setActivityCode
    void setPermissions(java.util.Collection) -> setPermissions
    boolean restoreAuthentication(org.json.JSONObject) -> restoreAuthentication
    void deauthenticate() -> deauthenticate
    java.lang.String getUserId() -> getUserId
    java.lang.String access$0(com.parse.auth.FacebookAuthenticationProvider) -> access$0
    void access$1(com.parse.auth.FacebookAuthenticationProvider,java.lang.String) -> access$1
    void access$2(com.parse.auth.FacebookAuthenticationProvider,java.lang.Throwable) -> access$2
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback access$3(com.parse.auth.FacebookAuthenticationProvider) -> access$3
    void access$4(com.parse.auth.FacebookAuthenticationProvider) -> access$4
com.parse.auth.FacebookAuthenticationProvider$1 -> com.parse.auth.FacebookAuthenticationProvider$1:
    com.parse.auth.FacebookAuthenticationProvider this$0 -> this$0
    void onComplete(android.os.Bundle) -> onComplete
    void onFacebookError(com.facebook.android.FacebookError) -> onFacebookError
    void onError(java.lang.Error) -> onError
com.parse.auth.FacebookAuthenticationProvider$2 -> com.parse.auth.FacebookAuthenticationProvider$2:
    com.parse.auth.FacebookAuthenticationProvider this$0 -> this$0
    void call(com.facebook.Session,com.facebook.SessionState,java.lang.Exception) -> call
    com.parse.auth.FacebookAuthenticationProvider access$0(com.parse.auth.FacebookAuthenticationProvider$2) -> access$0
com.parse.auth.FacebookAuthenticationProvider$2$1 -> com.parse.auth.FacebookAuthenticationProvider$2$1:
    com.parse.auth.FacebookAuthenticationProvider$2 this$1 -> this$1
    void onCompleted(com.facebook.Response) -> onCompleted
com.parse.auth.ParseAuthenticationProvider -> com.parse.auth.ParseAuthenticationProvider:
    void authenticate(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> authenticate
    void deauthenticate() -> deauthenticate
    boolean restoreAuthentication(org.json.JSONObject) -> restoreAuthentication
    void cancel() -> cancel
    java.lang.String getAuthType() -> getAuthType
com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback -> com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback:
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onCancel() -> onCancel
    void onError(java.lang.Throwable) -> onError
com.parse.auth.TwitterAuthenticationProvider -> com.parse.auth.TwitterAuthenticationProvider:
    java.lang.String SCREEN_NAME_KEY -> SCREEN_NAME_KEY
    java.lang.String ID_KEY -> ID_KEY
    java.lang.String AUTH_TOKEN_SECRET_KEY -> AUTH_TOKEN_SECRET_KEY
    java.lang.String AUTH_TOKEN_KEY -> AUTH_TOKEN_KEY
    java.lang.String CONSUMER_KEY_KEY -> CONSUMER_KEY_KEY
    java.lang.String CONSUMER_SECRET_KEY -> CONSUMER_SECRET_KEY
    java.lang.ref.WeakReference baseContext -> baseContext
    com.parse.twitter.Twitter twitter -> twitter
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback currentOperationCallback -> currentOperationCallback
    void authenticate(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> authenticate
    org.json.JSONObject getAuthData(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getAuthData
    void cancel() -> cancel
    void deauthenticate() -> deauthenticate
    java.lang.String getAuthType() -> getAuthType
    com.parse.twitter.Twitter getTwitter() -> getTwitter
    void handleCancel(com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> handleCancel
    boolean restoreAuthentication(org.json.JSONObject) -> restoreAuthentication
    void setContext(android.content.Context) -> setContext
    void access$0(com.parse.auth.TwitterAuthenticationProvider,com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> access$0
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback access$1(com.parse.auth.TwitterAuthenticationProvider) -> access$1
    void access$2(com.parse.auth.TwitterAuthenticationProvider,com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback) -> access$2
    com.parse.twitter.Twitter access$3(com.parse.auth.TwitterAuthenticationProvider) -> access$3
com.parse.auth.TwitterAuthenticationProvider$1 -> com.parse.auth.TwitterAuthenticationProvider$1:
    com.parse.auth.TwitterAuthenticationProvider this$0 -> this$0
    com.parse.auth.ParseAuthenticationProvider$ParseAuthenticationCallback val$callback -> val$callback
    void onCancel() -> onCancel
    void onFailure(java.lang.Throwable) -> onFailure
    void onSuccess(java.lang.Object) -> onSuccess
com.parse.codec.BinaryDecoder -> com.parse.codec.BinaryDecoder:
    byte[] decode(byte[]) -> decode
com.parse.codec.BinaryEncoder -> com.parse.codec.BinaryEncoder:
    byte[] encode(byte[]) -> encode
com.parse.codec.CharEncoding -> com.parse.codec.CharEncoding:
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_8 -> UTF_8
com.parse.codec.Decoder -> com.parse.codec.Decoder:
    java.lang.Object decode(java.lang.Object) -> decode
com.parse.codec.DecoderException -> com.parse.codec.DecoderException:
    long serialVersionUID -> serialVersionUID
com.parse.codec.Encoder -> com.parse.codec.Encoder:
    java.lang.Object encode(java.lang.Object) -> encode
com.parse.codec.EncoderException -> com.parse.codec.EncoderException:
    long serialVersionUID -> serialVersionUID
com.parse.codec.StringDecoder -> com.parse.codec.StringDecoder:
    java.lang.String decode(java.lang.String) -> decode
com.parse.codec.StringEncoder -> com.parse.codec.StringEncoder:
    java.lang.String encode(java.lang.String) -> encode
com.parse.codec.binary.Base32 -> com.parse.codec.binary.Base32:
    int BITS_PER_ENCODED_BYTE -> BITS_PER_ENCODED_BYTE
    int BYTES_PER_ENCODED_BLOCK -> BYTES_PER_ENCODED_BLOCK
    int BYTES_PER_UNENCODED_BLOCK -> BYTES_PER_UNENCODED_BLOCK
    byte[] CHUNK_SEPARATOR -> CHUNK_SEPARATOR
    byte[] DECODE_TABLE -> DECODE_TABLE
    byte[] ENCODE_TABLE -> ENCODE_TABLE
    byte[] HEX_DECODE_TABLE -> HEX_DECODE_TABLE
    byte[] HEX_ENCODE_TABLE -> HEX_ENCODE_TABLE
    int MASK_5BITS -> MASK_5BITS
    long bitWorkArea -> bitWorkArea
    int decodeSize -> decodeSize
    byte[] decodeTable -> decodeTable
    int encodeSize -> encodeSize
    byte[] encodeTable -> encodeTable
    byte[] lineSeparator -> lineSeparator
    void decode(byte[],int,int) -> decode
    void encode(byte[],int,int) -> encode
    boolean isInAlphabet(byte) -> isInAlphabet
com.parse.codec.binary.Base32InputStream -> com.parse.codec.binary.Base32InputStream:
com.parse.codec.binary.Base32OutputStream -> com.parse.codec.binary.Base32OutputStream:
com.parse.codec.binary.Base64 -> com.parse.codec.binary.Base64:
    int BITS_PER_ENCODED_BYTE -> BITS_PER_ENCODED_BYTE
    int BYTES_PER_UNENCODED_BLOCK -> BYTES_PER_UNENCODED_BLOCK
    int BYTES_PER_ENCODED_BLOCK -> BYTES_PER_ENCODED_BLOCK
    byte[] CHUNK_SEPARATOR -> CHUNK_SEPARATOR
    byte[] STANDARD_ENCODE_TABLE -> STANDARD_ENCODE_TABLE
    byte[] URL_SAFE_ENCODE_TABLE -> URL_SAFE_ENCODE_TABLE
    byte[] DECODE_TABLE -> DECODE_TABLE
    int MASK_6BITS -> MASK_6BITS
    byte[] encodeTable -> encodeTable
    byte[] decodeTable -> decodeTable
    byte[] lineSeparator -> lineSeparator
    int decodeSize -> decodeSize
    int encodeSize -> encodeSize
    int bitWorkArea -> bitWorkArea
    boolean isUrlSafe() -> isUrlSafe
    void encode(byte[],int,int) -> encode
    void decode(byte[],int,int) -> decode
    boolean isBase64(byte) -> isBase64
    boolean isBase64(java.lang.String) -> isBase64
    boolean isArrayByteBase64(byte[]) -> isArrayByteBase64
    boolean isBase64(byte[]) -> isBase64
    byte[] encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64String(byte[]) -> encodeBase64String
    byte[] encodeBase64URLSafe(byte[]) -> encodeBase64URLSafe
    java.lang.String encodeBase64URLSafeString(byte[]) -> encodeBase64URLSafeString
    byte[] encodeBase64Chunked(byte[]) -> encodeBase64Chunked
    byte[] encodeBase64(byte[],boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean,int) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    byte[] decodeBase64(byte[]) -> decodeBase64
    java.math.BigInteger decodeInteger(byte[]) -> decodeInteger
    byte[] encodeInteger(java.math.BigInteger) -> encodeInteger
    byte[] toIntegerBytes(java.math.BigInteger) -> toIntegerBytes
    boolean isInAlphabet(byte) -> isInAlphabet
com.parse.codec.binary.Base64InputStream -> com.parse.codec.binary.Base64InputStream:
com.parse.codec.binary.Base64OutputStream -> com.parse.codec.binary.Base64OutputStream:
com.parse.codec.binary.BaseNCodec -> com.parse.codec.binary.BaseNCodec:
    int MIME_CHUNK_SIZE -> MIME_CHUNK_SIZE
    int PEM_CHUNK_SIZE -> PEM_CHUNK_SIZE
    int DEFAULT_BUFFER_RESIZE_FACTOR -> DEFAULT_BUFFER_RESIZE_FACTOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int MASK_8BITS -> MASK_8BITS
    byte PAD_DEFAULT -> PAD_DEFAULT
    byte PAD -> PAD
    int unencodedBlockSize -> unencodedBlockSize
    int encodedBlockSize -> encodedBlockSize
    int lineLength -> lineLength
    int chunkSeparatorLength -> chunkSeparatorLength
    byte[] buffer -> buffer
    int pos -> pos
    int readPos -> readPos
    boolean eof -> eof
    int currentLinePos -> currentLinePos
    int modulus -> modulus
    boolean hasData() -> hasData
    int available() -> available
    int getDefaultBufferSize() -> getDefaultBufferSize
    void resizeBuffer() -> resizeBuffer
    void ensureBufferSize(int) -> ensureBufferSize
    int readResults(byte[],int,int) -> readResults
    boolean isWhiteSpace(byte) -> isWhiteSpace
    void reset() -> reset
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encodeToString(byte[]) -> encodeToString
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(byte[]) -> decode
    byte[] encode(byte[]) -> encode
    java.lang.String encodeAsString(byte[]) -> encodeAsString
    void encode(byte[],int,int) -> encode
    void decode(byte[],int,int) -> decode
    boolean isInAlphabet(byte) -> isInAlphabet
    boolean isInAlphabet(byte[],boolean) -> isInAlphabet
    boolean isInAlphabet(java.lang.String) -> isInAlphabet
    boolean containsAlphabetOrPad(byte[]) -> containsAlphabetOrPad
    long getEncodedLength(byte[]) -> getEncodedLength
com.parse.codec.binary.BaseNCodecInputStream -> com.parse.codec.binary.BaseNCodecInputStream:
    boolean doEncode -> doEncode
    com.parse.codec.binary.BaseNCodec baseNCodec -> baseNCodec
    byte[] singleByte -> singleByte
    int read() -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
com.parse.codec.binary.BaseNCodecOutputStream -> com.parse.codec.binary.BaseNCodecOutputStream:
    boolean doEncode -> doEncode
    com.parse.codec.binary.BaseNCodec baseNCodec -> baseNCodec
    byte[] singleByte -> singleByte
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush(boolean) -> flush
    void flush() -> flush
    void close() -> close
com.parse.codec.binary.BinaryCodec -> com.parse.codec.binary.BinaryCodec:
    char[] EMPTY_CHAR_ARRAY -> EMPTY_CHAR_ARRAY
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    int BIT_0 -> BIT_0
    int BIT_1 -> BIT_1
    int BIT_2 -> BIT_2
    int BIT_3 -> BIT_3
    int BIT_4 -> BIT_4
    int BIT_5 -> BIT_5
    int BIT_6 -> BIT_6
    int BIT_7 -> BIT_7
    int[] BITS -> BITS
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(byte[]) -> decode
    byte[] toByteArray(java.lang.String) -> toByteArray
    byte[] fromAscii(char[]) -> fromAscii
    byte[] fromAscii(byte[]) -> fromAscii
    boolean isEmpty(byte[]) -> isEmpty
    byte[] toAsciiBytes(byte[]) -> toAsciiBytes
    char[] toAsciiChars(byte[]) -> toAsciiChars
    java.lang.String toAsciiString(byte[]) -> toAsciiString
com.parse.codec.binary.Hex -> com.parse.codec.binary.Hex:
    java.lang.String DEFAULT_CHARSET_NAME -> DEFAULT_CHARSET_NAME
    char[] DIGITS_LOWER -> DIGITS_LOWER
    char[] DIGITS_UPPER -> DIGITS_UPPER
    java.lang.String charsetName -> charsetName
    byte[] decodeHex(char[]) -> decodeHex
    char[] encodeHex(byte[]) -> encodeHex
    char[] encodeHex(byte[],boolean) -> encodeHex
    char[] encodeHex(byte[],char[]) -> encodeHex
    java.lang.String encodeHexString(byte[]) -> encodeHexString
    int toDigit(char,int) -> toDigit
    byte[] decode(byte[]) -> decode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String getCharsetName() -> getCharsetName
    java.lang.String toString() -> toString
com.parse.codec.binary.StringUtils -> com.parse.codec.binary.StringUtils:
    byte[] getBytesIso8859_1(java.lang.String) -> getBytesIso8859_1
    byte[] getBytesUsAscii(java.lang.String) -> getBytesUsAscii
    byte[] getBytesUtf16(java.lang.String) -> getBytesUtf16
    byte[] getBytesUtf16Be(java.lang.String) -> getBytesUtf16Be
    byte[] getBytesUtf16Le(java.lang.String) -> getBytesUtf16Le
    byte[] getBytesUtf8(java.lang.String) -> getBytesUtf8
    byte[] getBytesUnchecked(java.lang.String,java.lang.String) -> getBytesUnchecked
    java.lang.IllegalStateException newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException) -> newIllegalStateException
    java.lang.String newString(byte[],java.lang.String) -> newString
    java.lang.String newStringIso8859_1(byte[]) -> newStringIso8859_1
    java.lang.String newStringUsAscii(byte[]) -> newStringUsAscii
    java.lang.String newStringUtf16(byte[]) -> newStringUtf16
    java.lang.String newStringUtf16Be(byte[]) -> newStringUtf16Be
    java.lang.String newStringUtf16Le(byte[]) -> newStringUtf16Le
    java.lang.String newStringUtf8(byte[]) -> newStringUtf8
com.parse.codec.digest.DigestUtils -> com.parse.codec.digest.DigestUtils:
    int STREAM_BUFFER_LENGTH -> STREAM_BUFFER_LENGTH
    byte[] digest(java.security.MessageDigest,java.io.InputStream) -> digest
    byte[] getBytesUtf8(java.lang.String) -> getBytesUtf8
    java.security.MessageDigest getDigest(java.lang.String) -> getDigest
    java.security.MessageDigest getMd5Digest() -> getMd5Digest
    java.security.MessageDigest getSha256Digest() -> getSha256Digest
    java.security.MessageDigest getSha384Digest() -> getSha384Digest
    java.security.MessageDigest getSha512Digest() -> getSha512Digest
    java.security.MessageDigest getShaDigest() -> getShaDigest
    byte[] md5(byte[]) -> md5
    byte[] md5(java.io.InputStream) -> md5
    byte[] md5(java.lang.String) -> md5
    java.lang.String md5Hex(byte[]) -> md5Hex
    java.lang.String md5Hex(java.io.InputStream) -> md5Hex
    java.lang.String md5Hex(java.lang.String) -> md5Hex
    byte[] sha(byte[]) -> sha
    byte[] sha(java.io.InputStream) -> sha
    byte[] sha(java.lang.String) -> sha
    byte[] sha256(byte[]) -> sha256
    byte[] sha256(java.io.InputStream) -> sha256
    byte[] sha256(java.lang.String) -> sha256
    java.lang.String sha256Hex(byte[]) -> sha256Hex
    java.lang.String sha256Hex(java.io.InputStream) -> sha256Hex
    java.lang.String sha256Hex(java.lang.String) -> sha256Hex
    byte[] sha384(byte[]) -> sha384
    byte[] sha384(java.io.InputStream) -> sha384
    byte[] sha384(java.lang.String) -> sha384
    java.lang.String sha384Hex(byte[]) -> sha384Hex
    java.lang.String sha384Hex(java.io.InputStream) -> sha384Hex
    java.lang.String sha384Hex(java.lang.String) -> sha384Hex
    byte[] sha512(byte[]) -> sha512
    byte[] sha512(java.io.InputStream) -> sha512
    byte[] sha512(java.lang.String) -> sha512
    java.lang.String sha512Hex(byte[]) -> sha512Hex
    java.lang.String sha512Hex(java.io.InputStream) -> sha512Hex
    java.lang.String sha512Hex(java.lang.String) -> sha512Hex
    java.lang.String shaHex(byte[]) -> shaHex
    java.lang.String shaHex(java.io.InputStream) -> shaHex
    java.lang.String shaHex(java.lang.String) -> shaHex
com.parse.codec.language.AbstractCaverphone -> com.parse.codec.language.AbstractCaverphone:
    java.lang.Object encode(java.lang.Object) -> encode
    boolean isEncodeEqual(java.lang.String,java.lang.String) -> isEncodeEqual
com.parse.codec.language.Caverphone -> com.parse.codec.language.Caverphone:
    com.parse.codec.language.Caverphone2 encoder -> encoder
    java.lang.String caverphone(java.lang.String) -> caverphone
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isCaverphoneEqual(java.lang.String,java.lang.String) -> isCaverphoneEqual
com.parse.codec.language.Caverphone1 -> com.parse.codec.language.Caverphone1:
    java.lang.String SIX_1 -> SIX_1
    java.lang.String encode(java.lang.String) -> encode
com.parse.codec.language.Caverphone2 -> com.parse.codec.language.Caverphone2:
    java.lang.String TEN_1 -> TEN_1
    java.lang.String encode(java.lang.String) -> encode
com.parse.codec.language.ColognePhonetic -> com.parse.codec.language.ColognePhonetic:
    char[][] PREPROCESS_MAP -> PREPROCESS_MAP
    boolean arrayContains(char[],char) -> arrayContains
    java.lang.String colognePhonetic(java.lang.String) -> colognePhonetic
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isEncodeEqual(java.lang.String,java.lang.String) -> isEncodeEqual
    java.lang.String preprocess(java.lang.String) -> preprocess
com.parse.codec.language.ColognePhonetic$CologneBuffer -> com.parse.codec.language.ColognePhonetic$CologneBuffer:
    char[] data -> data
    int length -> length
    com.parse.codec.language.ColognePhonetic this$0 -> this$0
    char[] copyData(int,int) -> copyData
    int length() -> length
    java.lang.String toString() -> toString
com.parse.codec.language.ColognePhonetic$CologneInputBuffer -> com.parse.codec.language.ColognePhonetic$CologneInputBuffer:
    com.parse.codec.language.ColognePhonetic this$0 -> this$0
    void addLeft(char) -> addLeft
    char[] copyData(int,int) -> copyData
    char getNextChar() -> getNextChar
    int getNextPos() -> getNextPos
    char removeNext() -> removeNext
com.parse.codec.language.ColognePhonetic$CologneOutputBuffer -> com.parse.codec.language.ColognePhonetic$CologneOutputBuffer:
    com.parse.codec.language.ColognePhonetic this$0 -> this$0
    void addRight(char) -> addRight
    char[] copyData(int,int) -> copyData
com.parse.codec.language.DoubleMetaphone -> com.parse.codec.language.DoubleMetaphone:
    java.lang.String VOWELS -> VOWELS
    java.lang.String[] SILENT_START -> SILENT_START
    java.lang.String[] L_R_N_M_B_H_F_V_W_SPACE -> L_R_N_M_B_H_F_V_W_SPACE
    java.lang.String[] ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER -> ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER
    java.lang.String[] L_T_K_S_N_M_B_Z -> L_T_K_S_N_M_B_Z
    int maxCodeLen -> maxCodeLen
    java.lang.String doubleMetaphone(java.lang.String) -> doubleMetaphone
    java.lang.String doubleMetaphone(java.lang.String,boolean) -> doubleMetaphone
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String) -> isDoubleMetaphoneEqual
    boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String,boolean) -> isDoubleMetaphoneEqual
    int getMaxCodeLen() -> getMaxCodeLen
    void setMaxCodeLen(int) -> setMaxCodeLen
    int handleAEIOUY(com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleAEIOUY
    int handleC(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleC
    int handleCC(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleCC
    int handleCH(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleCH
    int handleD(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleD
    int handleG(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleG
    int handleGH(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleGH
    int handleH(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleH
    int handleJ(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleJ
    int handleL(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleL
    int handleP(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleP
    int handleR(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleR
    int handleS(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleS
    int handleSC(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleSC
    int handleT(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleT
    int handleW(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleW
    int handleX(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleX
    int handleZ(java.lang.String,com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleZ
    boolean conditionC0(java.lang.String,int) -> conditionC0
    boolean conditionCH0(java.lang.String,int) -> conditionCH0
    boolean conditionCH1(java.lang.String,int) -> conditionCH1
    boolean conditionL0(java.lang.String,int) -> conditionL0
    boolean conditionM0(java.lang.String,int) -> conditionM0
    boolean isSlavoGermanic(java.lang.String) -> isSlavoGermanic
    boolean isVowel(char) -> isVowel
    boolean isSilentStart(java.lang.String) -> isSilentStart
    java.lang.String cleanInput(java.lang.String) -> cleanInput
    char charAt(java.lang.String,int) -> charAt
    boolean contains(java.lang.String,int,int,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> contains
    boolean contains(java.lang.String,int,int,java.lang.String[]) -> contains
com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult -> com.parse.codec.language.DoubleMetaphone$DoubleMetaphoneResult:
    java.lang.StringBuffer primary -> primary
    java.lang.StringBuffer alternate -> alternate
    int maxLength -> maxLength
    com.parse.codec.language.DoubleMetaphone this$0 -> this$0
    void append(char) -> append
    void append(char,char) -> append
    void appendPrimary(char) -> appendPrimary
    void appendAlternate(char) -> appendAlternate
    void append(java.lang.String) -> append
    void append(java.lang.String,java.lang.String) -> append
    void appendPrimary(java.lang.String) -> appendPrimary
    void appendAlternate(java.lang.String) -> appendAlternate
    java.lang.String getPrimary() -> getPrimary
    java.lang.String getAlternate() -> getAlternate
    boolean isComplete() -> isComplete
com.parse.codec.language.Metaphone -> com.parse.codec.language.Metaphone:
    java.lang.String VOWELS -> VOWELS
    java.lang.String FRONTV -> FRONTV
    java.lang.String VARSON -> VARSON
    int maxCodeLen -> maxCodeLen
    java.lang.String metaphone(java.lang.String) -> metaphone
    boolean isVowel(java.lang.StringBuffer,int) -> isVowel
    boolean isPreviousChar(java.lang.StringBuffer,int,char) -> isPreviousChar
    boolean isNextChar(java.lang.StringBuffer,int,char) -> isNextChar
    boolean regionMatch(java.lang.StringBuffer,int,java.lang.String) -> regionMatch
    boolean isLastChar(int,int) -> isLastChar
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isMetaphoneEqual(java.lang.String,java.lang.String) -> isMetaphoneEqual
    int getMaxCodeLen() -> getMaxCodeLen
    void setMaxCodeLen(int) -> setMaxCodeLen
com.parse.codec.language.RefinedSoundex -> com.parse.codec.language.RefinedSoundex:
    java.lang.String US_ENGLISH_MAPPING_STRING -> US_ENGLISH_MAPPING_STRING
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    char[] soundexMapping -> soundexMapping
    com.parse.codec.language.RefinedSoundex US_ENGLISH -> US_ENGLISH
    int difference(java.lang.String,java.lang.String) -> difference
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    char getMappingCode(char) -> getMappingCode
    java.lang.String soundex(java.lang.String) -> soundex
com.parse.codec.language.Soundex -> com.parse.codec.language.Soundex:
    java.lang.String US_ENGLISH_MAPPING_STRING -> US_ENGLISH_MAPPING_STRING
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    com.parse.codec.language.Soundex US_ENGLISH -> US_ENGLISH
    int maxLength -> maxLength
    char[] soundexMapping -> soundexMapping
    int difference(java.lang.String,java.lang.String) -> difference
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    char getMappingCode(java.lang.String,int) -> getMappingCode
    int getMaxLength() -> getMaxLength
    char[] getSoundexMapping() -> getSoundexMapping
    char map(char) -> map
    void setMaxLength(int) -> setMaxLength
    java.lang.String soundex(java.lang.String) -> soundex
com.parse.codec.language.SoundexUtils -> com.parse.codec.language.SoundexUtils:
    java.lang.String clean(java.lang.String) -> clean
    int difference(com.parse.codec.StringEncoder,java.lang.String,java.lang.String) -> difference
    int differenceEncoded(java.lang.String,java.lang.String) -> differenceEncoded
com.parse.codec.net.BCodec -> com.parse.codec.net.BCodec:
    java.lang.String charset -> charset
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
com.parse.codec.net.QCodec -> com.parse.codec.net.QCodec:
    java.lang.String charset -> charset
    java.util.BitSet PRINTABLE_CHARS -> PRINTABLE_CHARS
    byte BLANK -> BLANK
    byte UNDERSCORE -> UNDERSCORE
    boolean encodeBlanks -> encodeBlanks
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
    boolean isEncodeBlanks() -> isEncodeBlanks
    void setEncodeBlanks(boolean) -> setEncodeBlanks
com.parse.codec.net.QuotedPrintableCodec -> com.parse.codec.net.QuotedPrintableCodec:
    java.lang.String charset -> charset
    java.util.BitSet PRINTABLE_CHARS -> PRINTABLE_CHARS
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    byte TAB -> TAB
    byte SPACE -> SPACE
    void encodeQuotedPrintable(int,java.io.ByteArrayOutputStream) -> encodeQuotedPrintable
    byte[] encodeQuotedPrintable(java.util.BitSet,byte[]) -> encodeQuotedPrintable
    byte[] decodeQuotedPrintable(byte[]) -> decodeQuotedPrintable
    byte[] encode(byte[]) -> encode
    byte[] decode(byte[]) -> decode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
com.parse.codec.net.RFC1522Codec -> com.parse.codec.net.RFC1522Codec:
    char SEP -> SEP
    java.lang.String POSTFIX -> POSTFIX
    java.lang.String PREFIX -> PREFIX
    java.lang.String encodeText(java.lang.String,java.lang.String) -> encodeText
    java.lang.String decodeText(java.lang.String) -> decodeText
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
com.parse.codec.net.URLCodec -> com.parse.codec.net.URLCodec:
    int RADIX -> RADIX
    java.lang.String charset -> charset
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    java.util.BitSet WWW_FORM_URL -> WWW_FORM_URL
    byte[] encodeUrl(java.util.BitSet,byte[]) -> encodeUrl
    byte[] decodeUrl(byte[]) -> decodeUrl
    byte[] encode(byte[]) -> encode
    byte[] decode(byte[]) -> decode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getDefaultCharset() -> getDefaultCharset
com.parse.codec.net.Utils -> com.parse.codec.net.Utils:
    int digit16(byte) -> digit16
com.parse.entity.mime.FormBodyPart -> com.parse.entity.mime.FormBodyPart:
    java.lang.String name -> name
    com.parse.entity.mime.Header header -> header
    com.parse.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    com.parse.entity.mime.content.ContentBody getBody() -> getBody
    com.parse.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(com.parse.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(com.parse.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(com.parse.entity.mime.content.ContentBody) -> generateTransferEncoding
com.parse.entity.mime.Header -> com.parse.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(com.parse.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    com.parse.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(com.parse.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.parse.entity.mime.HttpMultipart -> com.parse.entity.mime.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    com.parse.entity.mime.HttpMultipartMode mode -> mode
    int[] $SWITCH_TABLE$com$parse$entity$mime$HttpMultipartMode -> $SWITCH_TABLE$com$parse$entity$mime$HttpMultipartMode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(com.parse.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(com.parse.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    com.parse.entity.mime.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(com.parse.entity.mime.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(com.parse.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
    int[] $SWITCH_TABLE$com$parse$entity$mime$HttpMultipartMode() -> $SWITCH_TABLE$com$parse$entity$mime$HttpMultipartMode
com.parse.entity.mime.HttpMultipartMode -> com.parse.entity.mime.HttpMultipartMode:
    com.parse.entity.mime.HttpMultipartMode STRICT -> STRICT
    com.parse.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    com.parse.entity.mime.HttpMultipartMode[] ENUM$VALUES -> ENUM$VALUES
    com.parse.entity.mime.HttpMultipartMode[] values() -> values
    com.parse.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.parse.entity.mime.MIME -> com.parse.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
com.parse.entity.mime.MinimalField -> com.parse.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
com.parse.entity.mime.MultipartEntity -> com.parse.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    com.parse.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(com.parse.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,com.parse.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.entity.mime.content.AbstractContentBody -> com.parse.entity.mime.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
com.parse.entity.mime.content.ByteArrayBody -> com.parse.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.parse.entity.mime.content.ContentBody -> com.parse.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.entity.mime.content.ContentDescriptor -> com.parse.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.parse.entity.mime.content.FileBody -> com.parse.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
com.parse.entity.mime.content.InputStreamBody -> com.parse.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.parse.entity.mime.content.StringBody -> com.parse.entity.mime.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    com.parse.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    com.parse.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    com.parse.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.parse.gdata.Escaper -> com.parse.gdata.Escaper:
    java.lang.String escape(java.lang.String) -> escape
    java.lang.Appendable escape(java.lang.Appendable) -> escape
com.parse.gdata.PercentEscaper -> com.parse.gdata.PercentEscaper:
    java.lang.String SAFECHARS_URLENCODER -> SAFECHARS_URLENCODER
    java.lang.String SAFEPATHCHARS_URLENCODER -> SAFEPATHCHARS_URLENCODER
    java.lang.String SAFEQUERYSTRINGCHARS_URLENCODER -> SAFEQUERYSTRINGCHARS_URLENCODER
    char[] URI_ESCAPED_SPACE -> URI_ESCAPED_SPACE
    char[] UPPER_HEX_DIGITS -> UPPER_HEX_DIGITS
    boolean plusForSpace -> plusForSpace
    boolean[] safeOctets -> safeOctets
    boolean[] createSafeOctets(java.lang.String) -> createSafeOctets
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    char[] escape(int) -> escape
com.parse.gdata.Preconditions -> com.parse.gdata.Preconditions:
    void checkArgument(boolean) -> checkArgument
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    void checkState(boolean) -> checkState
    void checkState(boolean,java.lang.Object) -> checkState
    void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    void checkElementIndex(int,int) -> checkElementIndex
    void checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    void checkPositionIndex(int,int) -> checkPositionIndex
    void checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.parse.gdata.UnicodeEscaper -> com.parse.gdata.UnicodeEscaper:
    int DEST_PAD -> DEST_PAD
    java.lang.ThreadLocal DEST_TL -> DEST_TL
    char[] escape(int) -> escape
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String escapeSlow(java.lang.String,int) -> escapeSlow
    java.lang.Appendable escape(java.lang.Appendable) -> escape
    int codePointAt(java.lang.CharSequence,int,int) -> codePointAt
    char[] growBuffer(char[],int,int) -> growBuffer
com.parse.gdata.UnicodeEscaper$1 -> com.parse.gdata.UnicodeEscaper$1:
    char[] initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.parse.gdata.UnicodeEscaper$2 -> com.parse.gdata.UnicodeEscaper$2:
    int pendingHighSurrogate -> pendingHighSurrogate
    char[] decodedChars -> decodedChars
    com.parse.gdata.UnicodeEscaper this$0 -> this$0
    java.lang.Appendable val$out -> val$out
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(char) -> append
    void outputChars(char[],int) -> outputChars
com.parse.internal.AsyncCallback -> com.parse.internal.AsyncCallback:
    void onSuccess(java.lang.Object) -> onSuccess
    void onCancel() -> onCancel
    void onFailure(java.lang.Throwable) -> onFailure
com.parse.oauth.OAuth1FlowDialog -> com.parse.oauth.OAuth1FlowDialog:
    android.widget.FrameLayout$LayoutParams FILL -> FILL
    java.lang.String callbackUrl -> callbackUrl
    java.lang.String requestUrl -> requestUrl
    java.lang.String serviceUrlIdentifier -> serviceUrlIdentifier
    com.parse.oauth.OAuth1FlowDialog$FlowResultHandler handler -> handler
    android.app.ProgressDialog progressDialog -> progressDialog
    android.widget.ImageView closeImage -> closeImage
    android.webkit.WebView webView -> webView
    android.widget.FrameLayout content -> content
    void onCreate(android.os.Bundle) -> onCreate
    void createCloseImage() -> createCloseImage
    void setUpWebView(int) -> setUpWebView
    java.lang.String access$0(com.parse.oauth.OAuth1FlowDialog) -> access$0
    com.parse.oauth.OAuth1FlowDialog$FlowResultHandler access$1(com.parse.oauth.OAuth1FlowDialog) -> access$1
    java.lang.String access$2(com.parse.oauth.OAuth1FlowDialog) -> access$2
    android.app.ProgressDialog access$3(com.parse.oauth.OAuth1FlowDialog) -> access$3
    android.widget.FrameLayout access$4(com.parse.oauth.OAuth1FlowDialog) -> access$4
    android.webkit.WebView access$5(com.parse.oauth.OAuth1FlowDialog) -> access$5
    android.widget.ImageView access$6(com.parse.oauth.OAuth1FlowDialog) -> access$6
com.parse.oauth.OAuth1FlowDialog$1 -> com.parse.oauth.OAuth1FlowDialog$1:
    com.parse.oauth.OAuth1FlowDialog this$0 -> this$0
    void onCancel(android.content.DialogInterface) -> onCancel
com.parse.oauth.OAuth1FlowDialog$2 -> com.parse.oauth.OAuth1FlowDialog$2:
    com.parse.oauth.OAuth1FlowDialog this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.parse.oauth.OAuth1FlowDialog$FlowResultHandler -> com.parse.oauth.OAuth1FlowDialog$FlowResultHandler:
    void onCancel() -> onCancel
    void onError(int,java.lang.String,java.lang.String) -> onError
    void onComplete(java.lang.String) -> onComplete
com.parse.oauth.OAuth1FlowDialog$OAuth1WebViewClient -> com.parse.oauth.OAuth1FlowDialog$OAuth1WebViewClient:
    com.parse.oauth.OAuth1FlowDialog this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.parse.oauth.OAuth1FlowException -> com.parse.oauth.OAuth1FlowException:
    long serialVersionUID -> serialVersionUID
    int errorCode -> errorCode
    java.lang.String description -> description
    java.lang.String failingUrl -> failingUrl
    int getErrorCode() -> getErrorCode
    java.lang.String getDescription() -> getDescription
    java.lang.String getFailingUrl() -> getFailingUrl
com.parse.os.ParseAsyncTask -> com.parse.os.ParseAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.BlockingQueue sWorkQueue -> sWorkQueue
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.ThreadPoolExecutor sExecutor -> sExecutor
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    int MESSAGE_POST_CANCEL -> MESSAGE_POST_CANCEL
    com.parse.os.ParseAsyncTask$InternalHandler sHandler -> sHandler
    com.parse.os.ParseAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    com.parse.os.ParseAsyncTask$Status mStatus -> mStatus
    int[] $SWITCH_TABLE$com$parse$os$ParseAsyncTask$Status -> $SWITCH_TABLE$com$parse$os$ParseAsyncTask$Status
    com.parse.os.ParseAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    com.parse.os.ParseAsyncTask execute(java.lang.Object[]) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    void access$0(com.parse.os.ParseAsyncTask,java.lang.Object) -> access$0
    com.parse.os.ParseAsyncTask$InternalHandler access$1() -> access$1
    int[] $SWITCH_TABLE$com$parse$os$ParseAsyncTask$Status() -> $SWITCH_TABLE$com$parse$os$ParseAsyncTask$Status
com.parse.os.ParseAsyncTask$1 -> com.parse.os.ParseAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.parse.os.ParseAsyncTask$2 -> com.parse.os.ParseAsyncTask$2:
    com.parse.os.ParseAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
com.parse.os.ParseAsyncTask$3 -> com.parse.os.ParseAsyncTask$3:
    com.parse.os.ParseAsyncTask this$0 -> this$0
    void done() -> done
com.parse.os.ParseAsyncTask$InternalHandler -> com.parse.os.ParseAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.parse.os.ParseAsyncTask$ParseAsyncTaskResult -> com.parse.os.ParseAsyncTask$ParseAsyncTaskResult:
    com.parse.os.ParseAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
com.parse.os.ParseAsyncTask$Status -> com.parse.os.ParseAsyncTask$Status:
    com.parse.os.ParseAsyncTask$Status PENDING -> PENDING
    com.parse.os.ParseAsyncTask$Status RUNNING -> RUNNING
    com.parse.os.ParseAsyncTask$Status FINISHED -> FINISHED
    com.parse.os.ParseAsyncTask$Status[] ENUM$VALUES -> ENUM$VALUES
    com.parse.os.ParseAsyncTask$Status[] values() -> values
    com.parse.os.ParseAsyncTask$Status valueOf(java.lang.String) -> valueOf
com.parse.os.ParseAsyncTask$WorkerRunnable -> com.parse.os.ParseAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
com.parse.signpost.AbstractOAuthConsumer -> com.parse.signpost.AbstractOAuthConsumer:
    long serialVersionUID -> serialVersionUID
    java.lang.String consumerKey -> consumerKey
    java.lang.String consumerSecret -> consumerSecret
    java.lang.String token -> token
    com.parse.signpost.signature.OAuthMessageSigner messageSigner -> messageSigner
    com.parse.signpost.signature.SigningStrategy signingStrategy -> signingStrategy
    com.parse.signpost.http.HttpParameters additionalParameters -> additionalParameters
    com.parse.signpost.http.HttpParameters requestParameters -> requestParameters
    boolean sendEmptyTokens -> sendEmptyTokens
    void setMessageSigner(com.parse.signpost.signature.OAuthMessageSigner) -> setMessageSigner
    void setSigningStrategy(com.parse.signpost.signature.SigningStrategy) -> setSigningStrategy
    void setAdditionalParameters(com.parse.signpost.http.HttpParameters) -> setAdditionalParameters
    com.parse.signpost.http.HttpRequest sign(com.parse.signpost.http.HttpRequest) -> sign
    com.parse.signpost.http.HttpRequest sign(java.lang.Object) -> sign
    java.lang.String sign(java.lang.String) -> sign
    com.parse.signpost.http.HttpRequest wrap(java.lang.Object) -> wrap
    void setTokenWithSecret(java.lang.String,java.lang.String) -> setTokenWithSecret
    java.lang.String getToken() -> getToken
    java.lang.String getTokenSecret() -> getTokenSecret
    java.lang.String getConsumerKey() -> getConsumerKey
    java.lang.String getConsumerSecret() -> getConsumerSecret
    void completeOAuthParameters(com.parse.signpost.http.HttpParameters) -> completeOAuthParameters
    com.parse.signpost.http.HttpParameters getRequestParameters() -> getRequestParameters
    void setSendEmptyTokens(boolean) -> setSendEmptyTokens
    void collectHeaderParameters(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> collectHeaderParameters
    void collectBodyParameters(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> collectBodyParameters
    void collectQueryParameters(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> collectQueryParameters
    java.lang.String generateTimestamp() -> generateTimestamp
    java.lang.String generateNonce() -> generateNonce
com.parse.signpost.AbstractOAuthProvider -> com.parse.signpost.AbstractOAuthProvider:
    long serialVersionUID -> serialVersionUID
    java.lang.String requestTokenEndpointUrl -> requestTokenEndpointUrl
    java.lang.String accessTokenEndpointUrl -> accessTokenEndpointUrl
    java.lang.String authorizationWebsiteUrl -> authorizationWebsiteUrl
    com.parse.signpost.http.HttpParameters responseParameters -> responseParameters
    java.util.Map defaultHeaders -> defaultHeaders
    boolean isOAuth10a -> isOAuth10a
    com.parse.signpost.OAuthProviderListener listener -> listener
    java.lang.String retrieveRequestToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> retrieveRequestToken
    void retrieveAccessToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> retrieveAccessToken
    void retrieveToken(com.parse.signpost.OAuthConsumer,java.lang.String,java.lang.String[]) -> retrieveToken
    void handleUnexpectedResponse(int,com.parse.signpost.http.HttpResponse) -> handleUnexpectedResponse
    com.parse.signpost.http.HttpRequest createRequest(java.lang.String) -> createRequest
    com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest) -> sendRequest
    void closeConnection(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse) -> closeConnection
    com.parse.signpost.http.HttpParameters getResponseParameters() -> getResponseParameters
    java.lang.String getResponseParameter(java.lang.String) -> getResponseParameter
    void setResponseParameters(com.parse.signpost.http.HttpParameters) -> setResponseParameters
    void setOAuth10a(boolean) -> setOAuth10a
    boolean isOAuth10a() -> isOAuth10a
    java.lang.String getRequestTokenEndpointUrl() -> getRequestTokenEndpointUrl
    java.lang.String getAccessTokenEndpointUrl() -> getAccessTokenEndpointUrl
    java.lang.String getAuthorizationWebsiteUrl() -> getAuthorizationWebsiteUrl
    void setRequestHeader(java.lang.String,java.lang.String) -> setRequestHeader
    java.util.Map getRequestHeaders() -> getRequestHeaders
    void setListener(com.parse.signpost.OAuthProviderListener) -> setListener
    void removeListener(com.parse.signpost.OAuthProviderListener) -> removeListener
com.parse.signpost.OAuth -> com.parse.signpost.OAuth:
    java.lang.String VERSION_1_0 -> VERSION_1_0
    java.lang.String ENCODING -> ENCODING
    java.lang.String FORM_ENCODED -> FORM_ENCODED
    java.lang.String HTTP_AUTHORIZATION_HEADER -> HTTP_AUTHORIZATION_HEADER
    java.lang.String OAUTH_CONSUMER_KEY -> OAUTH_CONSUMER_KEY
    java.lang.String OAUTH_TOKEN -> OAUTH_TOKEN
    java.lang.String OAUTH_TOKEN_SECRET -> OAUTH_TOKEN_SECRET
    java.lang.String OAUTH_SIGNATURE_METHOD -> OAUTH_SIGNATURE_METHOD
    java.lang.String OAUTH_SIGNATURE -> OAUTH_SIGNATURE
    java.lang.String OAUTH_TIMESTAMP -> OAUTH_TIMESTAMP
    java.lang.String OAUTH_NONCE -> OAUTH_NONCE
    java.lang.String OAUTH_VERSION -> OAUTH_VERSION
    java.lang.String OAUTH_CALLBACK -> OAUTH_CALLBACK
    java.lang.String OAUTH_CALLBACK_CONFIRMED -> OAUTH_CALLBACK_CONFIRMED
    java.lang.String OAUTH_VERIFIER -> OAUTH_VERIFIER
    java.lang.String OUT_OF_BAND -> OUT_OF_BAND
    com.parse.gdata.PercentEscaper percentEncoder -> percentEncoder
    java.lang.String percentEncode(java.lang.String) -> percentEncode
    java.lang.String percentDecode(java.lang.String) -> percentDecode
    void formEncode(java.util.Collection,java.io.OutputStream) -> formEncode
    java.lang.String formEncode(java.util.Collection) -> formEncode
    com.parse.signpost.http.HttpParameters decodeForm(java.lang.String) -> decodeForm
    com.parse.signpost.http.HttpParameters decodeForm(java.io.InputStream) -> decodeForm
    java.util.Map toMap(java.util.Collection) -> toMap
    java.lang.String safeToString(java.lang.Object) -> safeToString
    boolean isEmpty(java.lang.String) -> isEmpty
    java.lang.String addQueryParameters(java.lang.String,java.lang.String[]) -> addQueryParameters
    java.lang.String addQueryParameters(java.lang.String,java.util.Map) -> addQueryParameters
    java.lang.String prepareOAuthHeader(java.lang.String[]) -> prepareOAuthHeader
    com.parse.signpost.http.HttpParameters oauthHeaderToParamsMap(java.lang.String) -> oauthHeaderToParamsMap
    java.lang.String toHeaderElement(java.lang.String,java.lang.String) -> toHeaderElement
    void debugOut(java.lang.String,java.lang.String) -> debugOut
com.parse.signpost.OAuthConsumer -> com.parse.signpost.OAuthConsumer:
    void setMessageSigner(com.parse.signpost.signature.OAuthMessageSigner) -> setMessageSigner
    void setAdditionalParameters(com.parse.signpost.http.HttpParameters) -> setAdditionalParameters
    void setSigningStrategy(com.parse.signpost.signature.SigningStrategy) -> setSigningStrategy
    void setSendEmptyTokens(boolean) -> setSendEmptyTokens
    com.parse.signpost.http.HttpRequest sign(com.parse.signpost.http.HttpRequest) -> sign
    com.parse.signpost.http.HttpRequest sign(java.lang.Object) -> sign
    java.lang.String sign(java.lang.String) -> sign
    void setTokenWithSecret(java.lang.String,java.lang.String) -> setTokenWithSecret
    java.lang.String getToken() -> getToken
    java.lang.String getTokenSecret() -> getTokenSecret
    java.lang.String getConsumerKey() -> getConsumerKey
    java.lang.String getConsumerSecret() -> getConsumerSecret
    com.parse.signpost.http.HttpParameters getRequestParameters() -> getRequestParameters
com.parse.signpost.OAuthProvider -> com.parse.signpost.OAuthProvider:
    java.lang.String retrieveRequestToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> retrieveRequestToken
    void retrieveAccessToken(com.parse.signpost.OAuthConsumer,java.lang.String) -> retrieveAccessToken
    com.parse.signpost.http.HttpParameters getResponseParameters() -> getResponseParameters
    void setResponseParameters(com.parse.signpost.http.HttpParameters) -> setResponseParameters
    void setRequestHeader(java.lang.String,java.lang.String) -> setRequestHeader
    java.util.Map getRequestHeaders() -> getRequestHeaders
    void setOAuth10a(boolean) -> setOAuth10a
    boolean isOAuth10a() -> isOAuth10a
    java.lang.String getRequestTokenEndpointUrl() -> getRequestTokenEndpointUrl
    java.lang.String getAccessTokenEndpointUrl() -> getAccessTokenEndpointUrl
    java.lang.String getAuthorizationWebsiteUrl() -> getAuthorizationWebsiteUrl
    void setListener(com.parse.signpost.OAuthProviderListener) -> setListener
    void removeListener(com.parse.signpost.OAuthProviderListener) -> removeListener
com.parse.signpost.OAuthProviderListener -> com.parse.signpost.OAuthProviderListener:
    void prepareRequest(com.parse.signpost.http.HttpRequest) -> prepareRequest
    void prepareSubmission(com.parse.signpost.http.HttpRequest) -> prepareSubmission
    boolean onResponseReceived(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse) -> onResponseReceived
com.parse.signpost.basic.DefaultOAuthConsumer -> com.parse.signpost.basic.DefaultOAuthConsumer:
    long serialVersionUID -> serialVersionUID
    com.parse.signpost.http.HttpRequest wrap(java.lang.Object) -> wrap
com.parse.signpost.basic.DefaultOAuthProvider -> com.parse.signpost.basic.DefaultOAuthProvider:
    long serialVersionUID -> serialVersionUID
    com.parse.signpost.http.HttpRequest createRequest(java.lang.String) -> createRequest
    com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest) -> sendRequest
    void closeConnection(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse) -> closeConnection
com.parse.signpost.basic.HttpURLConnectionRequestAdapter -> com.parse.signpost.basic.HttpURLConnectionRequestAdapter:
    java.net.HttpURLConnection connection -> connection
    java.lang.String getMethod() -> getMethod
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getAllHeaders() -> getAllHeaders
    java.io.InputStream getMessagePayload() -> getMessagePayload
    java.lang.String getContentType() -> getContentType
    java.net.HttpURLConnection unwrap() -> unwrap
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.basic.HttpURLConnectionResponseAdapter -> com.parse.signpost.basic.HttpURLConnectionResponseAdapter:
    java.net.HttpURLConnection connection -> connection
    java.io.InputStream getContent() -> getContent
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.basic.UrlStringRequestAdapter -> com.parse.signpost.basic.UrlStringRequestAdapter:
    java.lang.String url -> url
    java.lang.String getMethod() -> getMethod
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getAllHeaders() -> getAllHeaders
    java.io.InputStream getMessagePayload() -> getMessagePayload
    java.lang.String getContentType() -> getContentType
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.commonshttp.CommonsHttpOAuthConsumer -> com.parse.signpost.commonshttp.CommonsHttpOAuthConsumer:
    long serialVersionUID -> serialVersionUID
    com.parse.signpost.http.HttpRequest wrap(java.lang.Object) -> wrap
com.parse.signpost.commonshttp.CommonsHttpOAuthProvider -> com.parse.signpost.commonshttp.CommonsHttpOAuthProvider:
    long serialVersionUID -> serialVersionUID
    org.apache.http.client.HttpClient httpClient -> httpClient
    void setHttpClient(org.apache.http.client.HttpClient) -> setHttpClient
    com.parse.signpost.http.HttpRequest createRequest(java.lang.String) -> createRequest
    com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest) -> sendRequest
    void closeConnection(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse) -> closeConnection
com.parse.signpost.commonshttp.HttpRequestAdapter -> com.parse.signpost.commonshttp.HttpRequestAdapter:
    org.apache.http.client.methods.HttpUriRequest request -> request
    org.apache.http.HttpEntity entity -> entity
    java.lang.String getMethod() -> getMethod
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    java.lang.String getHeader(java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    java.util.Map getAllHeaders() -> getAllHeaders
    java.lang.String getContentType() -> getContentType
    java.io.InputStream getMessagePayload() -> getMessagePayload
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.commonshttp.HttpResponseAdapter -> com.parse.signpost.commonshttp.HttpResponseAdapter:
    org.apache.http.HttpResponse response -> response
    java.io.InputStream getContent() -> getContent
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.exception.OAuthCommunicationException -> com.parse.signpost.exception.OAuthCommunicationException:
    java.lang.String responseBody -> responseBody
    java.lang.String getResponseBody() -> getResponseBody
com.parse.signpost.exception.OAuthException -> com.parse.signpost.exception.OAuthException:
com.parse.signpost.exception.OAuthExpectationFailedException -> com.parse.signpost.exception.OAuthExpectationFailedException:
com.parse.signpost.exception.OAuthMessageSignerException -> com.parse.signpost.exception.OAuthMessageSignerException:
com.parse.signpost.exception.OAuthNotAuthorizedException -> com.parse.signpost.exception.OAuthNotAuthorizedException:
    java.lang.String ERROR -> ERROR
    java.lang.String responseBody -> responseBody
    java.lang.String getResponseBody() -> getResponseBody
com.parse.signpost.http.HttpParameters -> com.parse.signpost.http.HttpParameters:
    java.util.TreeMap wrappedMap -> wrappedMap
    java.util.SortedSet put(java.lang.String,java.util.SortedSet) -> put
    java.util.SortedSet put(java.lang.String,java.util.SortedSet,boolean) -> put
    java.lang.String put(java.lang.String,java.lang.String) -> put
    java.lang.String put(java.lang.String,java.lang.String,boolean) -> put
    java.lang.String putNull(java.lang.String,java.lang.String) -> putNull
    void putAll(java.util.Map) -> putAll
    void putAll(java.util.Map,boolean) -> putAll
    void putAll(java.lang.String[],boolean) -> putAll
    void putMap(java.util.Map) -> putMap
    java.util.SortedSet get(java.lang.Object) -> get
    java.lang.String getFirst(java.lang.Object) -> getFirst
    java.lang.String getFirst(java.lang.Object,boolean) -> getFirst
    java.lang.String getAsQueryString(java.lang.Object) -> getAsQueryString
    java.lang.String getAsHeaderElement(java.lang.String) -> getAsHeaderElement
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    java.util.SortedSet remove(java.lang.Object) -> remove
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.parse.signpost.http.HttpRequest -> com.parse.signpost.http.HttpRequest:
    java.lang.String getMethod() -> getMethod
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getAllHeaders() -> getAllHeaders
    java.io.InputStream getMessagePayload() -> getMessagePayload
    java.lang.String getContentType() -> getContentType
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.http.HttpResponse -> com.parse.signpost.http.HttpResponse:
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.io.InputStream getContent() -> getContent
    java.lang.Object unwrap() -> unwrap
com.parse.signpost.signature.AuthorizationHeaderSigningStrategy -> com.parse.signpost.signature.AuthorizationHeaderSigningStrategy:
    long serialVersionUID -> serialVersionUID
    java.lang.String writeSignature(java.lang.String,com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> writeSignature
com.parse.signpost.signature.HmacSha1MessageSigner -> com.parse.signpost.signature.HmacSha1MessageSigner:
    java.lang.String MAC_NAME -> MAC_NAME
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> sign
com.parse.signpost.signature.OAuthMessageSigner -> com.parse.signpost.signature.OAuthMessageSigner:
    long serialVersionUID -> serialVersionUID
    com.parse.codec.binary.Base64 base64 -> base64
    java.lang.String consumerSecret -> consumerSecret
    java.lang.String tokenSecret -> tokenSecret
    java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> sign
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String getConsumerSecret() -> getConsumerSecret
    java.lang.String getTokenSecret() -> getTokenSecret
    void setConsumerSecret(java.lang.String) -> setConsumerSecret
    void setTokenSecret(java.lang.String) -> setTokenSecret
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    java.lang.String base64Encode(byte[]) -> base64Encode
    void readObject(java.io.ObjectInputStream) -> readObject
com.parse.signpost.signature.PlainTextMessageSigner -> com.parse.signpost.signature.PlainTextMessageSigner:
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String sign(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> sign
com.parse.signpost.signature.QueryStringSigningStrategy -> com.parse.signpost.signature.QueryStringSigningStrategy:
    long serialVersionUID -> serialVersionUID
    java.lang.String writeSignature(java.lang.String,com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> writeSignature
com.parse.signpost.signature.SignatureBaseString -> com.parse.signpost.signature.SignatureBaseString:
    com.parse.signpost.http.HttpRequest request -> request
    com.parse.signpost.http.HttpParameters requestParameters -> requestParameters
    java.lang.String generate() -> generate
    java.lang.String normalizeRequestUrl() -> normalizeRequestUrl
    java.lang.String normalizeRequestParameters() -> normalizeRequestParameters
com.parse.signpost.signature.SigningStrategy -> com.parse.signpost.signature.SigningStrategy:
    java.lang.String writeSignature(java.lang.String,com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpParameters) -> writeSignature
com.parse.twitter.Twitter -> com.parse.twitter.Twitter:
    java.lang.String REQUEST_TOKEN_URL -> REQUEST_TOKEN_URL
    java.lang.String AUTHORIZE_URL -> AUTHORIZE_URL
    java.lang.String ACCESS_TOKEN_URL -> ACCESS_TOKEN_URL
    java.lang.String VERIFIER_PARAM -> VERIFIER_PARAM
    java.lang.String USER_ID_PARAM -> USER_ID_PARAM
    java.lang.String SCREEN_NAME_PARAM -> SCREEN_NAME_PARAM
    com.parse.signpost.OAuthProvider PROVIDER -> PROVIDER
    java.lang.String CALLBACK_URL -> CALLBACK_URL
    java.lang.String consumerKey -> consumerKey
    java.lang.String consumerSecret -> consumerSecret
    java.lang.String authToken -> authToken
    java.lang.String authTokenSecret -> authTokenSecret
    java.lang.String userId -> userId
    java.lang.String screenName -> screenName
    java.lang.String getConsumerKey() -> getConsumerKey
    void setConsumerKey(java.lang.String) -> setConsumerKey
    java.lang.String getConsumerSecret() -> getConsumerSecret
    void setConsumerSecret(java.lang.String) -> setConsumerSecret
    java.lang.String getAuthToken() -> getAuthToken
    void setAuthToken(java.lang.String) -> setAuthToken
    java.lang.String getAuthTokenSecret() -> getAuthTokenSecret
    void setAuthTokenSecret(java.lang.String) -> setAuthTokenSecret
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getScreenName() -> getScreenName
    void setScreenName(java.lang.String) -> setScreenName
    void signRequest(org.apache.http.client.methods.HttpUriRequest) -> signRequest
    void authorize(android.content.Context,com.parse.internal.AsyncCallback) -> authorize
    com.parse.signpost.OAuthProvider access$0() -> access$0
com.parse.twitter.Twitter$1 -> com.parse.twitter.Twitter$1:
    java.lang.Throwable error -> error
    com.parse.twitter.Twitter this$0 -> this$0
    android.app.ProgressDialog val$progress -> val$progress
    com.parse.internal.AsyncCallback val$callback -> val$callback
    android.content.Context val$context -> val$context
    com.parse.signpost.OAuthConsumer val$consumer -> val$consumer
    void onPostExecute(java.lang.String) -> onPostExecute
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.parse.twitter.Twitter access$2(com.parse.twitter.Twitter$1) -> access$2
com.parse.twitter.Twitter$1$1 -> com.parse.twitter.Twitter$1$1:
    com.parse.twitter.Twitter$1 this$1 -> this$1
    com.parse.internal.AsyncCallback val$callback -> val$callback
    com.parse.signpost.OAuthConsumer val$consumer -> val$consumer
    android.app.ProgressDialog val$progress -> val$progress
    void onError(int,java.lang.String,java.lang.String) -> onError
    void onComplete(java.lang.String) -> onComplete
    void onCancel() -> onCancel
    com.parse.twitter.Twitter$1 access$0(com.parse.twitter.Twitter$1$1) -> access$0
com.parse.twitter.Twitter$1$1$1 -> com.parse.twitter.Twitter$1$1$1:
    java.lang.Throwable error -> error
    com.parse.twitter.Twitter$1$1 this$2 -> this$2
    com.parse.signpost.OAuthConsumer val$consumer -> val$consumer
    java.lang.String val$verifier -> val$verifier
    android.app.ProgressDialog val$progress -> val$progress
    com.parse.internal.AsyncCallback val$callback -> val$callback
    com.parse.signpost.http.HttpParameters doInBackground(java.lang.Void[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.parse.signpost.http.HttpParameters) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.pjwstk.hacksched.GlobalState -> com.pjwstk.hacksched.GlobalState:
    com.pjwstk.hacksched.GlobalState singleton -> b
    android.content.Context context -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate() -> onCreate
    void onLowMemory() -> onLowMemory
    void onTerminate() -> onTerminate
com.pjwstk.hacksched.PushReceiver -> com.pjwstk.hacksched.PushReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void makeNotification(org.json.JSONObject) -> a
com.pjwstk.hacksched.ui.ActivityContact -> com.pjwstk.hacksched.ui.ActivityContact:
    com.google.android.gms.maps.GoogleMap map -> a
    void onCreate(android.os.Bundle) -> onCreate
com.pjwstk.hacksched.ui.ActivityContact$1 -> com.pjwstk.hacksched.ui.a:
    com.pjwstk.hacksched.ui.ActivityContact this$0 -> a
    void onClick(android.view.View) -> onClick
com.pjwstk.hacksched.ui.ActivityEvent -> com.pjwstk.hacksched.ui.ActivityEvent:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.pjwstk.hacksched.ui.ActivityFullMap -> com.pjwstk.hacksched.ui.ActivityFullMap:
    com.google.android.gms.maps.GoogleMap map -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.pjwstk.hacksched.ui.CheckableLinearLayout -> com.pjwstk.hacksched.ui.CheckableLinearLayout:
    int[] CHECKED_STATE_SET -> a
    boolean mChecked -> b
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
    int[] onCreateDrawableState(int) -> onCreateDrawableState
com.pjwstk.hacksched.ui.MainActivity -> com.pjwstk.hacksched.ui.MainActivity:
    com.pjwstk.hacksched.GlobalState mApplication -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.pjwstk.hacksched.utils.Constants -> com.pjwstk.hacksched.a.a:
    com.google.android.gms.maps.model.LatLng PJWSTK_LOCATION -> a
de.hdodenhof.circleimageview.CircleImageView -> de.hdodenhof.circleimageview.CircleImageView:
    android.widget.ImageView$ScaleType SCALE_TYPE -> a
    android.graphics.RectF mDrawableRect -> b
    android.graphics.RectF mBorderRect -> c
    android.graphics.Matrix mShaderMatrix -> d
    android.graphics.Paint mBitmapPaint -> e
    android.graphics.Paint mBorderPaint -> f
    android.content.res.ColorStateList mBorderColor -> g
    int mBorderWidth -> h
    android.graphics.Bitmap mBitmap -> i
    android.graphics.BitmapShader mBitmapShader -> j
    int mBitmapWidth -> k
    int mBitmapHeight -> l
    float mDrawableRadius -> m
    float mBorderRadius -> n
    boolean mReady -> o
    boolean mSetupPending -> p
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    android.graphics.Bitmap getBitmapFromDrawable(android.graphics.drawable.Drawable) -> a
    void setup() -> a
    void updateShaderMatrix() -> b
de.hdodenhof.circleimageview.R -> de.hdodenhof.circleimageview.a:
de.hdodenhof.circleimageview.R$styleable -> de.hdodenhof.circleimageview.b:
    int[] CircleImageView -> CircleImageView
    int CircleImageView_border_color -> CircleImageView_border_color
    int CircleImageView_border_width -> CircleImageView_border_width
it.gmariotti.cardslib.library.R -> it.gmariotti.cardslib.library.a:
it.gmariotti.cardslib.library.R$drawable -> it.gmariotti.cardslib.library.b:
    int activated_background_card -> activated_background_card
    int card_background -> card_background
    int card_menu_button_expand -> card_menu_button_expand
    int card_menu_button_overflow -> card_menu_button_overflow
    int card_menu_button_rounded_overflow -> card_menu_button_rounded_overflow
    int card_multichoice_selector -> card_multichoice_selector
    int card_selector -> card_selector
    int card_shadow -> card_shadow
    int card_undo -> card_undo
    int ic_menu_expand_card_dark_normal -> ic_menu_expand_card_dark_normal
    int ic_menu_expand_card_dark_pressed -> ic_menu_expand_card_dark_pressed
    int ic_menu_overflow_card_dark_normal -> ic_menu_overflow_card_dark_normal
    int ic_menu_overflow_card_dark_pressed -> ic_menu_overflow_card_dark_pressed
    int ic_menu_overflow_card_rounded_dark_normal -> ic_menu_overflow_card_rounded_dark_normal
    int ic_menu_overflow_card_rounded_dark_pressed -> ic_menu_overflow_card_rounded_dark_pressed
    int ic_undobar_undo -> ic_undobar_undo
    int pressed_background_card -> pressed_background_card
    int undobar -> undobar
    int undobar_button_focused -> undobar_button_focused
    int undobar_button_pressed -> undobar_button_pressed
    int undobar_divider -> undobar_divider
it.gmariotti.cardslib.library.R$id -> it.gmariotti.cardslib.library.c:
    int card_content_expand_layout -> card_content_expand_layout
    int card_expand_inner_simple_title -> card_expand_inner_simple_title
    int card_header_button_expand -> card_header_button_expand
    int card_header_button_frame -> card_header_button_frame
    int card_header_button_other -> card_header_button_other
    int card_header_button_overflow -> card_header_button_overflow
    int card_header_inner_frame -> card_header_inner_frame
    int card_header_inner_simple_title -> card_header_inner_simple_title
    int card_header_layout -> card_header_layout
    int card_main_content_layout -> card_main_content_layout
    int card_main_inner_simple_title -> card_main_inner_simple_title
    int card_main_layout -> card_main_layout
    int card_overlap -> card_overlap
    int card_shadow_layout -> card_shadow_layout
    int card_shadow_view -> card_shadow_view
    int card_thumb_and_content_layout -> card_thumb_and_content_layout
    int card_thumbnail_image -> card_thumbnail_image
    int card_thumbnail_layout -> card_thumbnail_layout
    int list_cardId -> list_cardId
    int list_card_undobar -> list_card_undobar
    int list_card_undobar_button -> list_card_undobar_button
    int list_card_undobar_message -> list_card_undobar_message
    int undobar -> undobar
    int undobar_button -> undobar_button
    int undobar_message -> undobar_message
it.gmariotti.cardslib.library.R$layout -> it.gmariotti.cardslib.library.d:
    int base_header_layout -> base_header_layout
    int base_shadow_layout -> base_shadow_layout
    int base_thumbnail_layout -> base_thumbnail_layout
    int card_base_layout -> card_base_layout
    int card_layout -> card_layout
    int card_overlay_layout -> card_overlay_layout
    int card_thumbnail_layout -> card_thumbnail_layout
    int card_thumbnail_overlay_layout -> card_thumbnail_overlay_layout
    int card_undo_layout -> card_undo_layout
    int inner_base_expand -> inner_base_expand
    int inner_base_header -> inner_base_header
    int inner_base_main -> inner_base_main
    int list_card_layout -> list_card_layout
    int list_card_thumbnail_layout -> list_card_thumbnail_layout
    int list_card_undo_message -> list_card_undo_message
it.gmariotti.cardslib.library.R$styleable -> it.gmariotti.cardslib.library.e:
    int[] card_options -> card_options
    int card_options_card_header_layout_resourceID -> card_options_card_header_layout_resourceID
    int card_options_card_layout_resourceID -> card_options_card_layout_resourceID
    int card_options_card_shadow_layout_resourceID -> card_options_card_shadow_layout_resourceID
    int card_options_card_thumbnail_layout_resourceID -> card_options_card_thumbnail_layout_resourceID
    int card_options_list_card_layout_resourceID -> card_options_list_card_layout_resourceID
it.gmariotti.cardslib.library.internal.Card -> it.gmariotti.cardslib.library.a.a:
    java.lang.String TAG -> a
    boolean mIsClickable -> b
    boolean mIsLongClickable -> c
    boolean mIsSwipeable -> d
    boolean mShadow -> e
    it.gmariotti.cardslib.library.internal.CardHeader mCardHeader -> f
    it.gmariotti.cardslib.library.internal.CardThumbnail mCardThumbnail -> g
    it.gmariotti.cardslib.library.internal.CardExpand mCardExpand -> h
    boolean mIsExpanded -> i
    it.gmariotti.cardslib.library.internal.Card$OnSwipeListener mOnSwipeListener -> j
    it.gmariotti.cardslib.library.internal.Card$OnCardClickListener mOnClickListener -> k
    it.gmariotti.cardslib.library.internal.Card$OnExpandAnimatorEndListener mOnExpandAnimatorEndListener -> l
    it.gmariotti.cardslib.library.internal.Card$OnCollapseAnimatorEndListener mOnCollapseAnimatorEndListener -> m
    java.util.HashMap mMultipleOnClickListener -> n
    int mBackgroundResourceId -> x
    android.graphics.drawable.Drawable mBackgroundResource -> y
    boolean mMultiChoiceEnabled -> o
    it.gmariotti.cardslib.library.internal.ViewToClickToExpand viewToClickToExpand -> p
    it.gmariotti.cardslib.library.internal.Card$OnLongCardClickListener mOnLongClickListener -> q
    android.view.View getInnerView(android.content.Context,android.view.ViewGroup) -> a
    void setupInnerViewElements(android.view.ViewGroup,android.view.View) -> a
    it.gmariotti.cardslib.library.internal.CardThumbnail getCardThumbnail() -> a
    it.gmariotti.cardslib.library.internal.CardHeader getCardHeader() -> b
    it.gmariotti.cardslib.library.internal.CardExpand getCardExpand() -> c
    void onSwipeCard() -> d
    it.gmariotti.cardslib.library.internal.Card$OnCardClickListener getOnClickListener() -> e
    it.gmariotti.cardslib.library.internal.Card$OnLongCardClickListener getOnLongClickListener() -> f
    it.gmariotti.cardslib.library.internal.Card$OnExpandAnimatorEndListener getOnExpandAnimatorEndListener() -> g
    it.gmariotti.cardslib.library.internal.Card$OnCollapseAnimatorEndListener getOnCollapseAnimatorEndListener() -> h
    boolean isShadow() -> i
    boolean isClickable() -> j
    boolean isSwipeable() -> k
    boolean isLongClickable() -> l
    java.util.HashMap getMultipleOnClickListener() -> m
    boolean isExpanded() -> n
    void setExpanded(boolean) -> a
    int getBackgroundResourceId() -> o
    android.graphics.drawable.Drawable getBackgroundResource() -> p
    boolean isMultiChoiceEnabled() -> q
    it.gmariotti.cardslib.library.internal.ViewToClickToExpand getViewToClickToExpand() -> r
it.gmariotti.cardslib.library.internal.Card$OnCardClickListener -> it.gmariotti.cardslib.library.a.b:
    void onClick(it.gmariotti.cardslib.library.internal.Card,android.view.View) -> a
it.gmariotti.cardslib.library.internal.Card$OnCollapseAnimatorEndListener -> it.gmariotti.cardslib.library.a.c:
    void onCollapseEnd(it.gmariotti.cardslib.library.internal.Card) -> a
it.gmariotti.cardslib.library.internal.Card$OnExpandAnimatorEndListener -> it.gmariotti.cardslib.library.a.d:
    void onExpandEnd(it.gmariotti.cardslib.library.internal.Card) -> a
it.gmariotti.cardslib.library.internal.Card$OnLongCardClickListener -> it.gmariotti.cardslib.library.a.e:
    boolean onLongClick(it.gmariotti.cardslib.library.internal.Card,android.view.View) -> a
it.gmariotti.cardslib.library.internal.Card$OnSwipeListener -> it.gmariotti.cardslib.library.a.f:
    void onSwipe(it.gmariotti.cardslib.library.internal.Card) -> a
it.gmariotti.cardslib.library.internal.CardExpand -> it.gmariotti.cardslib.library.a.g:
    android.view.View getInnerView(android.content.Context,android.view.ViewGroup) -> a
    void setupInnerViewElements(android.view.ViewGroup,android.view.View) -> a
it.gmariotti.cardslib.library.internal.CardHeader -> it.gmariotti.cardslib.library.a.h:
    boolean mIsButtonExpandVisible -> a
    boolean mIsButtonOverflowVisible -> b
    boolean mIsOtherButtonVisible -> c
    int mPopupMenu -> d
    it.gmariotti.cardslib.library.internal.CardHeader$OnClickCardHeaderPopupMenuListener mPopupMenuListener -> e
    it.gmariotti.cardslib.library.internal.CardHeader$OnPrepareCardHeaderPopupMenuListener mPopupMenuPrepareListener -> f
    it.gmariotti.cardslib.library.internal.CardHeader$OnClickCardHeaderOtherButtonListener mOtherButtonClickListener -> g
    int mOtherButtonDrawable -> h
    int NO_POPUP_MENU -> i
    it.gmariotti.cardslib.library.internal.CardHeader$CustomOverflowAnimation mCustomOverflowAnimation -> j
    it.gmariotti.cardslib.library.internal.CardHeader$CustomOverflowAnimation getCustomOverflowAnimation() -> a
    android.view.View getInnerView(android.content.Context,android.view.ViewGroup) -> a
    void setupInnerViewElements(android.view.ViewGroup,android.view.View) -> a
    it.gmariotti.cardslib.library.internal.CardHeader$OnClickCardHeaderPopupMenuListener getPopupMenuListener() -> b
    it.gmariotti.cardslib.library.internal.CardHeader$OnPrepareCardHeaderPopupMenuListener getPopupMenuPrepareListener() -> c
    boolean isButtonExpandVisible() -> d
    boolean isButtonOverflowVisible() -> e
    int getPopupMenu() -> f
    boolean isOtherButtonVisible() -> g
    it.gmariotti.cardslib.library.internal.CardHeader$OnClickCardHeaderOtherButtonListener getOtherButtonClickListener() -> h
    int getOtherButtonDrawable() -> i
it.gmariotti.cardslib.library.internal.CardHeader$CustomOverflowAnimation -> it.gmariotti.cardslib.library.a.i:
    void doAnimation(it.gmariotti.cardslib.library.internal.Card,android.view.View) -> a
it.gmariotti.cardslib.library.internal.CardHeader$OnClickCardHeaderOtherButtonListener -> it.gmariotti.cardslib.library.a.j:
    void onButtonItemClick(it.gmariotti.cardslib.library.internal.Card,android.view.View) -> a
it.gmariotti.cardslib.library.internal.CardHeader$OnClickCardHeaderPopupMenuListener -> it.gmariotti.cardslib.library.a.k:
    void onMenuItemClick(it.gmariotti.cardslib.library.internal.base.BaseCard,android.view.MenuItem) -> a
it.gmariotti.cardslib.library.internal.CardHeader$OnPrepareCardHeaderPopupMenuListener -> it.gmariotti.cardslib.library.a.l:
    boolean onPreparePopupMenu(it.gmariotti.cardslib.library.internal.base.BaseCard,android.widget.PopupMenu) -> a
it.gmariotti.cardslib.library.internal.CardThumbnail -> it.gmariotti.cardslib.library.a.m:
    int drawableResource -> a
    java.lang.String urlResource -> b
    boolean mExternalUsage -> c
    int errorResourceId -> d
    it.gmariotti.cardslib.library.internal.CardThumbnail$CustomSource customSource -> e
    void setupInnerViewElements(android.view.ViewGroup,android.view.View) -> a
    boolean applyBitmap(android.view.View,android.graphics.Bitmap) -> a
    int getDrawableResource() -> a
    java.lang.String getUrlResource() -> b
    it.gmariotti.cardslib.library.internal.CardThumbnail$CustomSource getCustomSource() -> c
    boolean isExternalUsage() -> d
    int getErrorResourceId() -> e
it.gmariotti.cardslib.library.internal.CardThumbnail$CustomSource -> it.gmariotti.cardslib.library.a.n:
    java.lang.String getTag() -> a
    android.graphics.Bitmap getBitmap() -> b
it.gmariotti.cardslib.library.internal.ViewToClickToExpand -> it.gmariotti.cardslib.library.a.o:
    android.view.View viewToClick -> a
    boolean viewToSelect -> b
    it.gmariotti.cardslib.library.internal.ViewToClickToExpand builder() -> a
    it.gmariotti.cardslib.library.internal.ViewToClickToExpand setupView(android.view.View) -> a
    it.gmariotti.cardslib.library.internal.ViewToClickToExpand highlightView(boolean) -> a
    android.view.View getViewToClick() -> b
    boolean isViewToSelect() -> c
it.gmariotti.cardslib.library.internal.base.BaseCard -> it.gmariotti.cardslib.library.a.a.a:
    int mInnerLayout -> r
    it.gmariotti.cardslib.library.view.CardView mCardView -> s
    android.view.View mInnerView -> t
    it.gmariotti.cardslib.library.internal.Card mParentCard -> u
    java.lang.String mTitle -> v
    java.lang.String mId -> w
    it.gmariotti.cardslib.library.view.CardView getCardView() -> s
    android.view.View getInnerView(android.content.Context,android.view.ViewGroup) -> a
    int getInnerLayout() -> t
    void setCardView(it.gmariotti.cardslib.library.view.CardView) -> a
    it.gmariotti.cardslib.library.internal.Card getParentCard() -> u
    java.lang.String getId() -> v
it.gmariotti.cardslib.library.utils.CacheUtil -> it.gmariotti.cardslib.library.b.a:
    android.util.LruCache mMemoryCache -> a
    it.gmariotti.cardslib.library.utils.CacheUtil sInstance -> b
    it.gmariotti.cardslib.library.utils.CacheUtil getInstance() -> a
    android.util.LruCache getMemoryCache() -> b
    void putMemoryCache(android.util.LruCache) -> a
it.gmariotti.cardslib.library.view.BaseCardView -> it.gmariotti.cardslib.library.view.a:
    java.lang.String TAG -> a
    it.gmariotti.cardslib.library.internal.Card mCard -> b
    int card_layout_resourceID -> c
    android.view.View mInternalOuterView -> d
    it.gmariotti.cardslib.library.view.component.CardShadowView mInternalShadowLayout -> e
    it.gmariotti.cardslib.library.view.component.CardHeaderView mInternalHeaderLayout -> f
    it.gmariotti.cardslib.library.view.component.CardThumbnailView mInternalThumbnailLayout -> g
    boolean mIsRecycle -> h
    boolean mForceReplaceInnerLayout -> i
    void init(android.util.AttributeSet,int) -> a
    void initAttrs(android.util.AttributeSet,int) -> b
    void initView() -> a
    void setCard(it.gmariotti.cardslib.library.internal.Card) -> setCard
    void buildUI() -> b
    void setupShadowView() -> c
    void retrieveLayoutIDs() -> d
    android.view.View getInternalOuterView() -> getInternalOuterView
    it.gmariotti.cardslib.library.internal.Card getCard() -> getCard
    it.gmariotti.cardslib.library.view.component.CardShadowView getInternalShadowLayout() -> getInternalShadowLayout
    it.gmariotti.cardslib.library.view.component.CardHeaderView getInternalHeaderLayout() -> getInternalHeaderLayout
    it.gmariotti.cardslib.library.view.component.CardThumbnailView getInternalThumbnailLayout() -> getInternalThumbnailLayout
    boolean isRecycle() -> e
    void setRecycle(boolean) -> setRecycle
    boolean isForceReplaceInnerLayout() -> f
    void setForceReplaceInnerLayout(boolean) -> setForceReplaceInnerLayout
it.gmariotti.cardslib.library.view.CardView -> it.gmariotti.cardslib.library.view.CardView:
    it.gmariotti.cardslib.library.internal.CardHeader mCardHeader -> j
    it.gmariotti.cardslib.library.internal.CardThumbnail mCardThumbnail -> k
    it.gmariotti.cardslib.library.internal.CardExpand mCardExpand -> l
    android.view.View mInternalMainCardLayout -> m
    android.view.View mInternalContentLayout -> n
    android.view.View mInternalInnerView -> o
    android.view.View mInternalExpandLayout -> p
    android.view.View mInternalExpandInnerView -> q
    android.animation.Animator mExpandAnimator -> r
    it.gmariotti.cardslib.library.view.CardView$OnExpandListAnimatorListener mOnExpandListAnimatorListener -> s
    int mCollapsedHeight -> t
    int mExpandedHeight -> u
    void initAttrs(android.util.AttributeSet,int) -> b
    void setCard(it.gmariotti.cardslib.library.internal.Card) -> setCard
    void buildUI() -> b
    void retrieveLayoutIDs() -> d
    void setupHeaderView() -> g
    void setupMainView() -> h
    void setupThumbnailView() -> i
    void setupDrawableResources() -> j
    void setupExpandAction() -> k
    void setupListeners() -> l
    void resetPartialListeners() -> m
    android.view.View decodeAreaOnClickListener(int) -> a
    void setupExpandCollapseActionListener() -> n
    void setupExpandView() -> o
    android.animation.ValueAnimator createSlideAnimator(int,int) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    it.gmariotti.cardslib.library.view.CardView$OnExpandListAnimatorListener getOnExpandListAnimatorListener() -> getOnExpandListAnimatorListener
    void setOnExpandListAnimatorListener(it.gmariotti.cardslib.library.view.CardView$OnExpandListAnimatorListener) -> setOnExpandListAnimatorListener
    android.view.View getInternalExpandLayout() -> getInternalExpandLayout
    android.view.View getInternalContentLayout() -> getInternalContentLayout
    android.view.View getInternalInnerView() -> getInternalInnerView
    int getCollapsedHeight() -> getCollapsedHeight
    void setCollapsedHeight(int) -> setCollapsedHeight
    int getExpandedHeight() -> getExpandedHeight
    void setExpandedHeight(int) -> setExpandedHeight
    boolean isExpanded() -> p
    void setExpanded(boolean) -> setExpanded
    android.view.View getInternalMainCardLayout() -> getInternalMainCardLayout
    void changeBackgroundResourceId(int) -> b
    void changeBackgroundResource(android.graphics.drawable.Drawable) -> a
it.gmariotti.cardslib.library.view.CardView$1 -> it.gmariotti.cardslib.library.view.b:
    it.gmariotti.cardslib.library.view.CardView this$0 -> a
    boolean onPreDraw() -> onPreDraw
it.gmariotti.cardslib.library.view.CardView$2 -> it.gmariotti.cardslib.library.view.c:
    it.gmariotti.cardslib.library.view.CardView this$0 -> a
    boolean canDismiss(it.gmariotti.cardslib.library.internal.Card) -> a
    void onDismiss(it.gmariotti.cardslib.library.view.CardView,it.gmariotti.cardslib.library.internal.Card) -> a
it.gmariotti.cardslib.library.view.CardView$3 -> it.gmariotti.cardslib.library.view.d:
    it.gmariotti.cardslib.library.view.CardView this$0 -> a
    void onClick(android.view.View) -> onClick
it.gmariotti.cardslib.library.view.CardView$4 -> it.gmariotti.cardslib.library.view.e:
    it.gmariotti.cardslib.library.view.CardView this$0 -> a
    it.gmariotti.cardslib.library.internal.Card$OnCardClickListener val$mListener -> b
    void onClick(android.view.View) -> onClick
it.gmariotti.cardslib.library.view.CardView$5 -> it.gmariotti.cardslib.library.view.f:
    it.gmariotti.cardslib.library.view.CardView this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
it.gmariotti.cardslib.library.view.CardView$6 -> it.gmariotti.cardslib.library.view.g:
    it.gmariotti.cardslib.library.view.CardView this$0 -> a
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
it.gmariotti.cardslib.library.view.CardView$OnExpandListAnimatorListener -> it.gmariotti.cardslib.library.view.h:
    void onExpandStart(it.gmariotti.cardslib.library.view.CardView,android.view.View) -> a
    void onCollapseStart(it.gmariotti.cardslib.library.view.CardView,android.view.View) -> b
it.gmariotti.cardslib.library.view.CardView$TitleViewOnClickListener -> it.gmariotti.cardslib.library.view.i:
    android.view.View mContentParent -> b
    it.gmariotti.cardslib.library.internal.Card mCard -> c
    boolean viewToSelect -> d
    it.gmariotti.cardslib.library.view.CardView this$0 -> a
    void onClick(android.view.View) -> onClick
    void animateExpanding() -> a
    void animateCollapsing() -> b
    it.gmariotti.cardslib.library.internal.Card access$0(it.gmariotti.cardslib.library.view.CardView$TitleViewOnClickListener) -> a
    android.view.View access$1(it.gmariotti.cardslib.library.view.CardView$TitleViewOnClickListener) -> b
it.gmariotti.cardslib.library.view.CardView$TitleViewOnClickListener$1 -> it.gmariotti.cardslib.library.view.j:
    it.gmariotti.cardslib.library.view.CardView$TitleViewOnClickListener this$1 -> a
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
it.gmariotti.cardslib.library.view.CardView$TitleViewOnClickListener$2 -> it.gmariotti.cardslib.library.view.k:
    it.gmariotti.cardslib.library.view.CardView$TitleViewOnClickListener this$1 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
it.gmariotti.cardslib.library.view.component.CardHeaderView -> it.gmariotti.cardslib.library.view.component.CardHeaderView:
    int card_header_layout_resourceID -> a
    android.view.View mInternalOuterView -> b
    android.view.View mInternalInnerView -> c
    android.view.ViewGroup mFrameInner -> d
    android.view.ViewGroup mFrameButton -> e
    android.widget.ImageButton mImageButtonOverflow -> f
    android.widget.ImageButton mImageButtonExpand -> g
    android.widget.ImageButton mImageButtonOther -> h
    it.gmariotti.cardslib.library.internal.CardHeader mCardHeader -> i
    android.view.View$OnClickListener mOnClickExpandCollapseActionListener -> j
    boolean mIsRecycle -> k
    boolean mForceReplaceInnerLayout -> l
    android.widget.PopupMenu mPopupMenu -> m
    void init(android.util.AttributeSet,int) -> a
    void initAttrs(android.util.AttributeSet,int) -> b
    void initView() -> a
    android.view.View getInternalOuterView() -> getInternalOuterView
    void addCardHeader(it.gmariotti.cardslib.library.internal.CardHeader) -> a
    void buildUI() -> b
    void setupButtons() -> c
    void addCustomOverflowAnimation() -> i
    void addOtherListener() -> d
    void setupInnerView() -> e
    void visibilityButtonHelper(int,int,int) -> a
    void addPopup() -> f
    android.widget.PopupMenu _buildPopupMenu() -> j
    android.view.View$OnClickListener getOnClickExpandCollapseActionListener() -> getOnClickExpandCollapseActionListener
    void setOnClickExpandCollapseActionListener(android.view.View$OnClickListener) -> setOnClickExpandCollapseActionListener
    boolean isRecycle() -> g
    void setRecycle(boolean) -> setRecycle
    boolean isForceReplaceInnerLayout() -> h
    void setForceReplaceInnerLayout(boolean) -> setForceReplaceInnerLayout
    android.widget.ImageButton getImageButtonOverflow() -> getImageButtonOverflow
    android.widget.ImageButton getImageButtonExpand() -> getImageButtonExpand
    android.widget.ImageButton getImageButtonOther() -> getImageButtonOther
    android.view.ViewGroup getFrameButton() -> getFrameButton
    android.widget.PopupMenu access$0(it.gmariotti.cardslib.library.view.component.CardHeaderView) -> a
it.gmariotti.cardslib.library.view.component.CardHeaderView$1 -> it.gmariotti.cardslib.library.view.component.a:
    it.gmariotti.cardslib.library.view.component.CardHeaderView this$0 -> a
    it.gmariotti.cardslib.library.internal.CardHeader$CustomOverflowAnimation val$animation -> b
    void onClick(android.view.View) -> onClick
it.gmariotti.cardslib.library.view.component.CardHeaderView$2 -> it.gmariotti.cardslib.library.view.component.b:
    it.gmariotti.cardslib.library.view.component.CardHeaderView this$0 -> a
    void onClick(android.view.View) -> onClick
it.gmariotti.cardslib.library.view.component.CardHeaderView$3 -> it.gmariotti.cardslib.library.view.component.c:
    it.gmariotti.cardslib.library.view.component.CardHeaderView this$0 -> a
    void onClick(android.view.View) -> onClick
it.gmariotti.cardslib.library.view.component.CardHeaderView$4 -> it.gmariotti.cardslib.library.view.component.d:
    it.gmariotti.cardslib.library.view.component.CardHeaderView this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
it.gmariotti.cardslib.library.view.component.CardShadowView -> it.gmariotti.cardslib.library.view.component.CardShadowView:
    int card_shadow_layout_resourceID -> a
    android.view.View mInternalOuterView -> b
    void init(android.util.AttributeSet,int) -> a
    void initAttrs(android.util.AttributeSet,int) -> b
    void initView() -> a
    android.view.View getInternalOuterView() -> getInternalOuterView
it.gmariotti.cardslib.library.view.component.CardThumbnailView -> it.gmariotti.cardslib.library.view.component.CardThumbnailView:
    int card_thumbnail_layout_resourceID -> a
    android.view.View mInternalOuterView -> b
    it.gmariotti.cardslib.library.internal.CardThumbnail mCardThumbnail -> c
    android.util.LruCache mMemoryCache -> d
    boolean mIsRecycle -> e
    boolean mForceReplaceInnerLayout -> f
    boolean mLoadingErrorResource -> g
    android.widget.ImageView mImageView -> h
    void init(android.util.AttributeSet,int) -> a
    void initAttrs(android.util.AttributeSet,int) -> b
    void initView() -> a
    void addCardThumbnail(it.gmariotti.cardslib.library.internal.CardThumbnail) -> a
    void buildUI() -> b
    void setupInnerView() -> c
    void loadBitmap(int,android.widget.ImageView) -> a
    void loadBitmap(java.lang.String,android.widget.ImageView) -> a
    void loadBitmap(it.gmariotti.cardslib.library.internal.CardThumbnail$CustomSource,android.widget.ImageView) -> a
    void addBitmapToMemoryCache(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String) -> a
    android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,int,int,int) -> a
    android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,java.lang.String,int,int) -> a
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> a
    boolean cancelPotentialWork(int,android.widget.ImageView) -> b
    boolean cancelPotentialWork(java.lang.String,android.widget.ImageView) -> b
    boolean cancelPotentialWork(it.gmariotti.cardslib.library.internal.CardThumbnail$CustomSource,android.widget.ImageView) -> b
    it.gmariotti.cardslib.library.view.component.CardThumbnailView$BitmapWorkerTask getBitmapWorkerTask(android.widget.ImageView) -> a
    it.gmariotti.cardslib.library.view.component.CardThumbnailView$BitmapWorkerUrlTask getBitmapWorkerUrlTask(android.widget.ImageView) -> b
    it.gmariotti.cardslib.library.view.component.CardThumbnailView$BitmapWorkerCustomSourceTask getBitmapWorkerCustomSourceTask(android.widget.ImageView) -> c
    void sendBroadcast() -> d
    void sendBroadcast(boolean) -> a
    android.view.View getInternalOuterView() -> getInternalOuterView
    void setRecycle(boolean) -> setRecycle
    void setForceReplaceInnerLayout(boolean) -> setForceReplaceInnerLayout
it.gmariotti.cardslib.library.view.component.CardThumbnailView$1 -> it.gmariotti.cardslib.library.view.component.e:
    it.gmariotti.cardslib.library.view.component.CardThumbnailView this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
it.gmariotti.cardslib.library.view.component.CardThumbnailView$AsyncDrawable -> it.gmariotti.cardslib.library.view.component.f:
    java.lang.ref.WeakReference bitmapWorkerTaskReference -> a
    it.gmariotti.cardslib.library.view.component.CardThumbnailView$BitmapWorkerTask getBitmapWorkerTask() -> a
it.gmariotti.cardslib.library.view.component.CardThumbnailView$AsyncDrawableCustomSource -> it.gmariotti.cardslib.library.view.component.g:
    java.lang.ref.WeakReference bitmapWorkerTaskReference -> a
    it.gmariotti.cardslib.library.view.component.CardThumbnailView$BitmapWorkerCustomSourceTask getBitmapWorkerCustomSourceTask() -> a
it.gmariotti.cardslib.library.view.component.CardThumbnailView$AsyncDrawableUrl -> it.gmariotti.cardslib.library.view.component.h:
    java.lang.ref.WeakReference bitmapWorkerTaskReference -> a
    it.gmariotti.cardslib.library.view.component.CardThumbnailView$BitmapWorkerUrlTask getBitmapWorkerUrlTask() -> a
it.gmariotti.cardslib.library.view.component.CardThumbnailView$BitmapWorkerCustomSourceTask -> it.gmariotti.cardslib.library.view.component.i:
    java.lang.ref.WeakReference imageViewReference -> b
    it.gmariotti.cardslib.library.internal.CardThumbnail$CustomSource customSource -> c
    it.gmariotti.cardslib.library.view.component.CardThumbnailView this$0 -> a
    android.graphics.Bitmap doInBackground(it.gmariotti.cardslib.library.internal.CardThumbnail$CustomSource[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    it.gmariotti.cardslib.library.internal.CardThumbnail$CustomSource access$2(it.gmariotti.cardslib.library.view.component.CardThumbnailView$BitmapWorkerCustomSourceTask) -> a
it.gmariotti.cardslib.library.view.component.CardThumbnailView$BitmapWorkerTask -> it.gmariotti.cardslib.library.view.component.j:
    java.lang.ref.WeakReference imageViewReference -> b
    int resId -> c
    it.gmariotti.cardslib.library.view.component.CardThumbnailView this$0 -> a
    android.graphics.Bitmap doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    int access$2(it.gmariotti.cardslib.library.view.component.CardThumbnailView$BitmapWorkerTask) -> a
it.gmariotti.cardslib.library.view.component.CardThumbnailView$BitmapWorkerUrlTask -> it.gmariotti.cardslib.library.view.component.k:
    java.lang.ref.WeakReference imageViewReference -> b
    java.lang.String resUrl -> c
    it.gmariotti.cardslib.library.view.component.CardThumbnailView this$0 -> a
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$2(it.gmariotti.cardslib.library.view.component.CardThumbnailView$BitmapWorkerUrlTask) -> a
it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener -> it.gmariotti.cardslib.library.view.listener.a:
    int mSlop -> a
    int mMinFlingVelocity -> b
    int mMaxFlingVelocity -> c
    long mAnimationTime -> d
    it.gmariotti.cardslib.library.view.CardView mCardView -> e
    it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener$DismissCallbacks mCallbacks -> f
    int mViewWidth -> g
    float mDownX -> h
    it.gmariotti.cardslib.library.internal.Card mToken -> i
    boolean mSwiping -> j
    android.view.VelocityTracker mVelocityTracker -> k
    boolean mPaused -> l
    float mTranslationX -> m
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void performDismiss() -> a
    void access$0(it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener) -> a
    it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener$DismissCallbacks access$1(it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener) -> b
    it.gmariotti.cardslib.library.view.CardView access$2(it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener) -> c
    it.gmariotti.cardslib.library.internal.Card access$3(it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener) -> d
it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener$1 -> it.gmariotti.cardslib.library.view.listener.b:
    it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener this$0 -> a
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener$2 -> it.gmariotti.cardslib.library.view.listener.c:
    it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener this$0 -> a
    android.view.ViewGroup$LayoutParams val$lp -> b
    int val$originalHeight -> c
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener$3 -> it.gmariotti.cardslib.library.view.listener.d:
    it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener this$0 -> a
    android.view.ViewGroup$LayoutParams val$lp -> b
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
it.gmariotti.cardslib.library.view.listener.SwipeDismissViewTouchListener$DismissCallbacks -> it.gmariotti.cardslib.library.view.listener.e:
    boolean canDismiss(it.gmariotti.cardslib.library.internal.Card) -> a
    void onDismiss(it.gmariotti.cardslib.library.view.CardView,it.gmariotti.cardslib.library.internal.Card) -> a
it.gmariotti.cardslib.library.view.listener.UndoCard -> it.gmariotti.cardslib.library.view.listener.UndoCard:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
it.gmariotti.cardslib.library.view.listener.UndoCard$1 -> it.gmariotti.cardslib.library.view.listener.f:
    it.gmariotti.cardslib.library.view.listener.UndoCard createFromParcel(android.os.Parcel) -> a
    it.gmariotti.cardslib.library.view.listener.UndoCard[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
